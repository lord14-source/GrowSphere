{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, Marker, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useRef, useState } from 'react';\nimport cart1 from './img/amit.jpeg';\nimport code2 from './img/code.png';\nimport cart from './img/photo.jpeg';\nimport cart2 from './img/rohit.jpeg';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,\n  // Latitude of Jharkhand\n  lng: 85.2799 // Longitude of Jharkhand\n};\nconst position = {\n  lat: 23.481411,\n  // 23°28'53.08\"N\n  lng: 85.447336 // 85°26'50.41\"E\n};\nconst position1 = {\n  lat: 23.442283,\n  // 23°26'32.18\"N\n  lng: 85.460815 // 85°26'50.41\"E\n};\nconst position2 = {\n  lat: 23.443018,\n  // 23°26'35.06\"N\n  lng: 85.459594 // 85°27'34.65\"E\n};\nconst position3 = {\n  lat: 23.443519,\n  // 23°26'36.65\"N\n  lng: 85.458611 // 85°27'31.00\"E\n};\nconst position4 = {\n  lat: 23.444347,\n  // 23°26'39.65\"N\n  lng: 85.460347 // 85°27'37.25\"E\n};\nconst position5 = {\n  lat: 23.443017,\n  // 23°26'34.86\"N\n  lng: 85.457525 // 85°27'27.09\"E\n};\nconst position6 = {\n  lat: 23.443765,\n  // 23°26'37.57\"N\n  lng: 85.457386 // 85°27'28.19\"E\n};\nconst position7 = {\n  lat: 23.444861,\n  // 23°26'41.51\"N\n  lng: 85.458711 // 85°27'31.36\"E\n};\nconst position8 = {\n  lat: 23.440477,\n  // 23°26'41.51\"N\n  lng: 85.459139 // 85°27'31.36\"E\n};\nconst zoomLevel = 5; // Initial zoom level for a broader view\nconst label = \"OR-001 1.5 A\";\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [{\n  lat: 24.48623150879691,\n  lng: 83.47396970257535\n}, {\n  lat: 24.46410920939513,\n  lng: 83.41168774233471\n}, {\n  lat: 24.3856295616306,\n  lng: 83.38929801994963\n}, {\n  lat: 24.26467754025446,\n  lng: 83.38311702970319\n}, {\n  lat: 24.10831289566599,\n  lng: 83.39297870152488\n}, {\n  lat: 24.03802131973457,\n  lng: 83.45628426673504\n}, {\n  lat: 23.95375933409299,\n  lng: 83.54303918967788\n}, {\n  lat: 23.82707339556849,\n  lng: 83.66123428947841\n}, {\n  lat: 23.75686252590038,\n  lng: 83.74751285996309\n}, {\n  lat: 23.67196187438844,\n  lng: 83.80274174812527\n}, {\n  lat: 23.60864658391675,\n  lng: 83.88099609208939\n}, {\n  lat: 23.58060961060254,\n  lng: 83.92782379622236\n}, {\n  lat: 23.54564635874184,\n  lng: 83.99796553936125\n}, {\n  lat: 23.43142882261908,\n  lng: 83.99889484066162\n}, {\n  lat: 23.34607291946323,\n  lng: 84.03833316347242\n}, {\n  lat: 23.41189144522013,\n  lng: 84.20835263945534\n}, {\n  lat: 23.31854702182158,\n  lng: 84.15477569700504\n}, {\n  lat: 23.26078469080568,\n  lng: 84.09321982790681\n}, {\n  lat: 23.17454124738476,\n  lng: 84.05513076339402\n}, {\n  lat: 23.06767562398619,\n  lng: 84.1178433715383\n}, {\n  lat: 23.00349632067168,\n  lng: 84.15698196230548\n}, {\n  lat: 23.01163406046414,\n  lng: 84.27297599195853\n}, {\n  lat: 22.9834604528841,\n  lng: 84.34276599257669\n}, {\n  lat: 22.94077823251206,\n  lng: 84.39715387657782\n}, {\n  lat: 22.8756783534008,\n  lng: 84.32795769444202\n}, {\n  lat: 22.7887790270553,\n  lng: 84.24345921017073\n}, {\n  lat: 22.68737121435733,\n  lng: 84.16681134337777\n}, {\n  lat: 22.49827285902155,\n  lng: 84.0057577944837\n}, {\n  lat: 22.54223799001775,\n  lng: 84.06728962745562\n}, {\n  lat: 22.45643466603815,\n  lng: 84.15282167554912\n}, {\n  lat: 22.37807141016749,\n  lng: 84.2845713755558\n}, {\n  lat: 22.43724832869452,\n  lng: 84.47723927607537\n}, {\n  lat: 22.4523451708808,\n  lng: 84.60067447375043\n}, {\n  lat: 22.49654022044235,\n  lng: 84.88612322176596\n}, {\n  lat: 22.51108243357764,\n  lng: 85.01734977334402\n}, {\n  lat: 22.48217571028156,\n  lng: 85.09470350356216\n}, {\n  lat: 22.41716227529362,\n  lng: 85.07178321445411\n}, {\n  lat: 22.3086483422608,\n  lng: 85.0567721370559\n}, {\n  lat: 22.17818541753647,\n  lng: 85.04187133177096\n}, {\n  lat: 22.09100031295943,\n  lng: 85.1039809244318\n}, {\n  lat: 22.09070480338038,\n  lng: 85.25065527191916\n}, {\n  lat: 22.11196550586719,\n  lng: 85.3973194333222\n}, {\n  lat: 22.10366196964451,\n  lng: 85.58283430853369\n}, {\n  lat: 22.07402413434823,\n  lng: 85.66026226343115\n}, {\n  lat: 22.1170373509356,\n  lng: 85.73749121063356\n}, {\n  lat: 22.00703857219342,\n  lng: 85.83070382851152\n}, {\n  lat: 22.02090496222072,\n  lng: 85.90034731199708\n}, {\n  lat: 22.04928042576864,\n  lng: 85.96998507832873\n}, {\n  lat: 22.16514988509444,\n  lng: 86.01619003890713\n}, {\n  lat: 22.28739014926273,\n  lng: 86.01405831335614\n}, {\n  lat: 22.34272828275158,\n  lng: 86.01017903466163\n}, {\n  lat: 22.40918575012196,\n  lng: 85.99047176147184\n}, {\n  lat: 22.45343914092298,\n  lng: 85.97865992612562\n}, {\n  lat: 22.51584161487376,\n  lng: 85.99464013741803\n}, {\n  lat: 22.54111645421306,\n  lng: 86.05418605476351\n}, {\n  lat: 22.4659976856972,\n  lng: 86.22865776231153\n}, {\n  lat: 22.41716531704861,\n  lng: 86.31992360505123\n}, {\n  lat: 22.34988147788881,\n  lng: 86.39928136099721\n}, {\n  lat: 22.34160470167811,\n  lng: 86.47088916886375\n}, {\n  lat: 22.31116511572828,\n  lng: 86.53851170266948\n}, {\n  lat: 22.29137954247885,\n  lng: 86.63014155048445\n}, {\n  lat: 22.26070015457833,\n  lng: 86.70188483750206\n}, {\n  lat: 22.24049452984143,\n  lng: 86.80570059619453\n}, {\n  lat: 22.24628820145168,\n  lng: 86.89773424545059\n}, {\n  lat: 22.33996599323111,\n  lng: 86.82999678892332\n}, {\n  lat: 22.37348965905637,\n  lng: 86.81411355450015\n}, {\n  lat: 22.46641302913803,\n  lng: 86.77447787200616\n}, {\n  lat: 22.4801538742811,\n  lng: 86.8385355922406\n}, {\n  lat: 22.55150049621475,\n  lng: 86.75485005895115\n}, {\n  lat: 22.60106771754707,\n  lng: 86.63522507350395\n}, {\n  lat: 22.67473268962253,\n  lng: 86.62757857203781\n}, {\n  lat: 22.69764821567835,\n  lng: 86.55984179164031\n}, {\n  lat: 22.69808578092647,\n  lng: 86.52394782566635\n}, {\n  lat: 22.74266956662789,\n  lng: 86.48029587948707\n}, {\n  lat: 22.77990406372504,\n  lng: 86.43264296542037\n}, {\n  lat: 22.86042377577004,\n  lng: 86.44897212578526\n}, {\n  lat: 22.93360255876451,\n  lng: 86.46131786334243\n}, {\n  lat: 22.99516013446389,\n  lng: 86.52951181138341\n}, {\n  lat: 22.98826105716376,\n  lng: 86.48955318743096\n}, {\n  lat: 22.9856457530303,\n  lng: 86.38584177354041\n}, {\n  lat: 22.98631581152014,\n  lng: 86.31412414748344\n}, {\n  lat: 23.01288181311809,\n  lng: 86.20277959058838\n}, {\n  lat: 23.05731951570507,\n  lng: 86.13136511937351\n}, {\n  lat: 23.13827819434155,\n  lng: 86.05216739191872\n}, {\n  lat: 23.13878255545649,\n  lng: 85.96868024526216\n}, {\n  lat: 23.18299581873072,\n  lng: 85.89730760349813\n}, {\n  lat: 23.23800697221863,\n  lng: 85.84583768460912\n}, {\n  lat: 23.30729741806508,\n  lng: 85.85800067019194\n}, {\n  lat: 23.37655095138379,\n  lng: 85.87416372519615\n}, {\n  lat: 23.45685236623369,\n  lng: 85.86254095121255\n}, {\n  lat: 23.47126809972077,\n  lng: 85.90240192784542\n}, {\n  lat: 23.48896445686492,\n  lng: 86.01399490038591\n}, {\n  lat: 23.50694800397911,\n  lng: 86.06191219189202\n}, {\n  lat: 23.55454324161819,\n  lng: 86.03027943987814\n}, {\n  lat: 23.59083203120752,\n  lng: 86.06637014226587\n}, {\n  lat: 23.58333926786653,\n  lng: 86.10222826814038\n}, {\n  lat: 23.53170626265977,\n  lng: 86.19368484231138\n}, {\n  lat: 23.41788459709818,\n  lng: 86.28873111803182\n}, {\n  lat: 23.50500977041682,\n  lng: 86.3572496578106\n}, {\n  lat: 23.54858356526588,\n  lng: 86.38957041921987\n}, {\n  lat: 23.57739264458725,\n  lng: 86.44181850052063\n}, {\n  lat: 23.63906631311949,\n  lng: 86.49441998456479\n}, {\n  lat: 23.64943034740797,\n  lng: 86.5666737227281\n}, {\n  lat: 23.67022248932751,\n  lng: 86.69534314182731\n}, {\n  lat: 23.69505904788761,\n  lng: 86.77603452673827\n}, {\n  lat: 23.78621927711402,\n  lng: 86.80530615786149\n}, {\n  lat: 23.8440286932636,\n  lng: 86.88264425025874\n}, {\n  lat: 23.80861680104808,\n  lng: 87.1206052567461\n}, {\n  lat: 23.86308440418564,\n  lng: 87.16602268648585\n}, {\n  lat: 23.91712292384361,\n  lng: 87.25214760806954\n}, {\n  lat: 23.9895774478581,\n  lng: 87.33478314964664\n}, {\n  lat: 23.99884204254976,\n  lng: 87.48586163816833\n}, {\n  lat: 24.07499419194031,\n  lng: 87.57332905259746\n}, {\n  lat: 24.15868222118824,\n  lng: 87.65310132429137\n}, {\n  lat: 24.24284610186048,\n  lng: 87.70030055749088\n}, {\n  lat: 24.31586149417642,\n  lng: 87.76390087405552\n}, {\n  lat: 24.43716924190371,\n  lng: 87.80840042299775\n}, {\n  lat: 24.53681198725385,\n  lng: 87.81946324443008\n}, {\n  lat: 24.56587449420685,\n  lng: 87.87414575003896\n}, {\n  lat: 24.65818724569443,\n  lng: 87.89767272060915\n}, {\n  lat: 24.75857018872508,\n  lng: 87.85512696171426\n}, {\n  lat: 24.8472478507229,\n  lng: 87.89953908437562\n}, {\n  lat: 24.89144061183487,\n  lng: 87.95099274711461\n}, {\n  lat: 24.98449824854584,\n  lng: 87.93334736308201\n}, {\n  lat: 25.07431701897787,\n  lng: 87.84474533000437\n}, {\n  lat: 25.18636148272727,\n  lng: 87.78196895457054\n}, {\n  lat: 25.26106876608343,\n  lng: 87.75124830719913\n}, {\n  lat: 25.3097710682978,\n  lng: 87.6987884062311\n}, {\n  lat: 25.31001738909645,\n  lng: 87.62388047303234\n}, {\n  lat: 25.3362752074891,\n  lng: 87.57903370490786\n}, {\n  lat: 25.29916385977878,\n  lng: 87.51968591913352\n}, {\n  lat: 25.18766004880675,\n  lng: 87.46647967985464\n}, {\n  lat: 25.22478049342555,\n  lng: 87.48831841559488\n}, {\n  lat: 25.19924036661748,\n  lng: 87.35110132244913\n}, {\n  lat: 25.09538079423089,\n  lng: 87.32341861450848\n}, {\n  lat: 25.09199348169744,\n  lng: 87.24509812297789\n}, {\n  lat: 24.98489560474829,\n  lng: 87.17250846015453\n}, {\n  lat: 24.86673891428025,\n  lng: 87.14506841771372\n}, {\n  lat: 24.79685438935717,\n  lng: 87.09846198249377\n}, {\n  lat: 24.72685188488938,\n  lng: 87.08874795117674\n}, {\n  lat: 24.61647349606084,\n  lng: 87.0700864325694\n}, {\n  lat: 24.6391450712516,\n  lng: 86.97275255891975\n}, {\n  lat: 24.55863885749378,\n  lng: 86.90613440184485\n}, {\n  lat: 24.55153262139332,\n  lng: 86.86538122826424\n}, {\n  lat: 24.52985140330071,\n  lng: 86.80412310030852\n}, {\n  lat: 24.59233867824138,\n  lng: 86.79708293251343\n}, {\n  lat: 24.59255753282647,\n  lng: 86.75651153784703\n}, {\n  lat: 24.56710690306759,\n  lng: 86.70743843283115\n}, {\n  lat: 24.58964402388771,\n  lng: 86.60653767931503\n}, {\n  lat: 24.53491166420186,\n  lng: 86.5410149794743\n}, {\n  lat: 24.45078331280122,\n  lng: 86.49947059762268\n}, {\n  lat: 24.38117614467653,\n  lng: 86.49856156347708\n}, {\n  lat: 24.38508489239666,\n  lng: 86.45022134270981\n}, {\n  lat: 24.41814417827353,\n  lng: 86.43047164176004\n}, {\n  lat: 24.44430663646054,\n  lng: 86.31391056990229\n}, {\n  lat: 24.50662724946841,\n  lng: 86.30252535959595\n}, {\n  lat: 24.59099258229016,\n  lng: 86.28736218881883\n}, {\n  lat: 24.60613446567885,\n  lng: 86.14643177020852\n}, {\n  lat: 24.67590575672694,\n  lng: 86.11488228276569\n}, {\n  lat: 24.75311961421165,\n  lng: 86.05917680572851\n}, {\n  lat: 24.74972164308508,\n  lng: 85.93820652334045\n}, {\n  lat: 24.78286007727881,\n  lng: 85.88607507009671\n}, {\n  lat: 24.81232509783648,\n  lng: 85.83389517493863\n}, {\n  lat: 24.81243623764847,\n  lng: 85.76136568295919\n}, {\n  lat: 24.79414079851209,\n  lng: 85.71695473729292\n}, {\n  lat: 24.72081385013023,\n  lng: 85.67633152858937\n}, {\n  lat: 24.64014875403906,\n  lng: 85.69202698419824\n}, {\n  lat: 24.59993765732149,\n  lng: 85.63157900351511\n}, {\n  lat: 24.57438713991693,\n  lng: 85.56322122396531\n}, {\n  lat: 24.51951773866213,\n  lng: 85.53495978488874\n}, {\n  lat: 24.53058288811607,\n  lng: 85.42266241858073\n}, {\n  lat: 24.51599067746609,\n  lng: 85.29029347021006\n}, {\n  lat: 24.47574915663001,\n  lng: 85.21011484391268\n}, {\n  lat: 24.42821037517481,\n  lng: 85.18610721332807\n}, {\n  lat: 24.39529722422991,\n  lng: 85.14608441306429\n}, {\n  lat: 24.37333772638311,\n  lng: 85.09405375963759\n}, {\n  lat: 24.42448589123927,\n  lng: 85.06991556849378\n}, {\n  lat: 24.39157934721657,\n  lng: 85.05796881040646\n}, {\n  lat: 24.3696087310429,\n  lng: 85.0139623996409\n}, {\n  lat: 24.38414708909545,\n  lng: 84.94982349254455\n}, {\n  lat: 24.41698125388582,\n  lng: 84.90562070520123\n}, {\n  lat: 24.4608174006142,\n  lng: 84.87737384495112\n}, {\n  lat: 24.51197534197415,\n  lng: 84.84103286914454\n}, {\n  lat: 24.53020458060083,\n  lng: 84.80079762151678\n}, {\n  lat: 24.47517207893834,\n  lng: 84.72884012225502\n}, {\n  lat: 24.40914060478236,\n  lng: 84.64898078115728\n}, {\n  lat: 24.39800470946991,\n  lng: 84.58885301272161\n}, {\n  lat: 24.36862955904418,\n  lng: 84.54892884266935\n}, {\n  lat: 24.31004357133102,\n  lng: 84.52128189460667\n}, {\n  lat: 24.3171882245853,\n  lng: 84.47306622703866\n}, {\n  lat: 24.36101004362085,\n  lng: 84.45664001646847\n}, {\n  lat: 24.37906546920414,\n  lng: 84.39219422860073\n}, {\n  lat: 24.40818491262543,\n  lng: 84.35171151478838\n}, {\n  lat: 24.45564830889711,\n  lng: 84.31904729891977\n}, {\n  lat: 24.46281486130363,\n  lng: 84.27871105672405\n}, {\n  lat: 24.49965323655974,\n  lng: 84.33469771233511\n}, {\n  lat: 24.54712047093326,\n  lng: 84.28988086055476\n}, {\n  lat: 24.56147686192835,\n  lng: 84.20907273141751\n}, {\n  lat: 24.5210395750433,\n  lng: 84.18132182816221\n}, {\n  lat: 24.48784674047472,\n  lng: 84.13332371016223\n}, {\n  lat: 24.50610020086866,\n  lng: 84.11695451543328\n}, {\n  lat: 24.53897060810661,\n  lng: 84.08826966095275\n}, {\n  lat: 24.5681686831719,\n  lng: 84.05555864803432\n}, {\n  lat: 24.61950680644775,\n  lng: 84.04676061171665\n}, {\n  lat: 24.62667264991762,\n  lng: 84.00620701748618\n}, {\n  lat: 24.5972507674913,\n  lng: 83.99449790755956\n}, {\n  lat: 24.54174845300106,\n  lng: 83.90225559218294\n}, {\n  lat: 24.54499177963706,\n  lng: 83.82120492284119\n}, {\n  lat: 24.51521191045056,\n  lng: 83.74873090067152\n}, {\n  lat: 24.51110383104312,\n  lng: 83.67577108949359\n}, {\n  lat: 24.52534206497082,\n  lng: 83.60239655645393\n}, {\n  lat: 24.52113909888234,\n  lng: 83.52113054075762\n}, {\n  lat: 24.48623150879691,\n  lng: 83.47396970257535\n}];\n\n// Coordinates for the Ranchi polygon (updated)\nconst ranchiCoords = [{\n  lat: 23.79920043891375,\n  lng: 84.80514660574408\n}, {\n  lat: 23.77428676704722,\n  lng: 84.81248948488594\n}, {\n  lat: 23.73181560633788,\n  lng: 84.82226954516166\n}, {\n  lat: 23.7072339752749,\n  lng: 84.82366218426222\n}, {\n  lat: 23.67402960373414,\n  lng: 84.83342486510942\n}, {\n  lat: 23.62838842914657,\n  lng: 84.83165770177496\n}, {\n  lat: 23.57316986275648,\n  lng: 84.83580498311005\n}, {\n  lat: 23.5517794096063,\n  lng: 84.84868592465119\n}, {\n  lat: 23.52974380679333,\n  lng: 84.87340788643567\n}, {\n  lat: 23.5201589497429,\n  lng: 84.88942373253366\n}, {\n  lat: 23.44065729347281,\n  lng: 84.92934446492637\n}, {\n  lat: 23.417006628697,\n  lng: 84.96340620139561\n}, {\n  lat: 23.39176430875845,\n  lng: 84.98666125430395\n}, {\n  lat: 23.37321198274659,\n  lng: 85.01687758330631\n}, {\n  lat: 23.33421071621555,\n  lng: 85.05223969592166\n}, {\n  lat: 23.29649433322513,\n  lng: 85.0740281636876\n}, {\n  lat: 23.24757461983729,\n  lng: 85.10097969899644\n}, {\n  lat: 23.23412445019358,\n  lng: 85.11726405974755\n}, {\n  lat: 23.20942992990917,\n  lng: 85.15886153897635\n}, {\n  lat: 23.17160841019193,\n  lng: 85.20074350663702\n}, {\n  lat: 23.14597717121111,\n  lng: 85.21974283203794\n}, {\n  lat: 23.13277407474896,\n  lng: 85.25024241772269\n}, {\n  lat: 23.12401046412101,\n  lng: 85.28874066909532\n}, {\n  lat: 23.11629542054771,\n  lng: 85.29947027383983\n}, {\n  lat: 23.07556896790893,\n  lng: 85.32394572081665\n}, {\n  lat: 23.03304212118545,\n  lng: 85.38797381583268\n}, {\n  lat: 23.03115148170811,\n  lng: 85.44766749786119\n}, {\n  lat: 23.01934229748854,\n  lng: 85.49899336168657\n}, {\n  lat: 23.02950802690849,\n  lng: 85.56606211958488\n}, {\n  lat: 23.03351642452318,\n  lng: 85.59004889199765\n}, {\n  lat: 23.06161633314458,\n  lng: 85.64891230865055\n}, {\n  lat: 23.01925733617136,\n  lng: 85.7415125567488\n}, {\n  lat: 23.02784108900541,\n  lng: 85.78782402836887\n}, {\n  lat: 23.03827151710054,\n  lng: 85.80458478246048\n}, {\n  lat: 23.05320348137726,\n  lng: 85.81928727077165\n}, {\n  lat: 23.08052247808796,\n  lng: 85.84555726184588\n}, {\n  lat: 23.1032293039927,\n  lng: 85.84952365125775\n}, {\n  lat: 23.13718231172097,\n  lng: 85.84833831679266\n}, {\n  lat: 23.15162065302644,\n  lng: 85.84459691554278\n}, {\n  lat: 23.17288997032819,\n  lng: 85.82766453637842\n}, {\n  lat: 23.21546160680601,\n  lng: 85.86277550137467\n}, {\n  lat: 23.23239206426466,\n  lng: 85.8276981342913\n}, {\n  lat: 23.25281709305742,\n  lng: 85.83271043534984\n}, {\n  lat: 23.27303612596435,\n  lng: 85.82343898398028\n}, {\n  lat: 23.33081421618204,\n  lng: 85.83289634360825\n}, {\n  lat: 23.38016791342565,\n  lng: 85.8548670332097\n}, {\n  lat: 23.41375500320339,\n  lng: 85.84953731156483\n}, {\n  lat: 23.41289396691505,\n  lng: 85.83697613959056\n}, {\n  lat: 23.44257407717736,\n  lng: 85.79744645379773\n}, {\n  lat: 23.4442288446834,\n  lng: 85.83267727650015\n}, {\n  lat: 23.45436625676904,\n  lng: 85.80067105059274\n}, {\n  lat: 23.4866307867548,\n  lng: 85.7988194082068\n}, {\n  lat: 23.51078508573824,\n  lng: 85.76901086599958\n}, {\n  lat: 23.53788388127114,\n  lng: 85.72632584079302\n}, {\n  lat: 23.54892363991247,\n  lng: 85.69677550572743\n}, {\n  lat: 23.56537833323724,\n  lng: 85.66761407694896\n}, {\n  lat: 23.57404411579746,\n  lng: 85.65930955267459\n}, {\n  lat: 23.59146819751694,\n  lng: 85.56779020092323\n}, {\n  lat: 23.58749760085258,\n  lng: 85.53363275646544\n}, {\n  lat: 23.60794098849065,\n  lng: 85.52853046182123\n}, {\n  lat: 23.62211568121768,\n  lng: 85.50040131545376\n}, {\n  lat: 23.62737976843316,\n  lng: 85.46629962691927\n}, {\n  lat: 23.6387464046934,\n  lng: 85.42073948927455\n}, {\n  lat: 23.64661287810837,\n  lng: 85.36958869633168\n}, {\n  lat: 23.65472912549597,\n  lng: 85.33271454563905\n}, {\n  lat: 23.63027474331957,\n  lng: 85.30370792687003\n}, {\n  lat: 23.61415032433586,\n  lng: 85.26221457350732\n}, {\n  lat: 23.60560942728202,\n  lng: 85.24025147972392\n}, {\n  lat: 23.60089388099036,\n  lng: 85.21795651417342\n}, {\n  lat: 23.58946781355863,\n  lng: 85.1987720530887\n}, {\n  lat: 23.57739631399355,\n  lng: 85.1813282513702\n}, {\n  lat: 23.56403728707425,\n  lng: 85.16736291689735\n}, {\n  lat: 23.56765894808103,\n  lng: 85.12247606712745\n}, {\n  lat: 23.58782277088436,\n  lng: 85.09294246495728\n}, {\n  lat: 23.59966226400446,\n  lng: 85.07591197101517\n}, {\n  lat: 23.6587885271242,\n  lng: 85.02100793214224\n}, {\n  lat: 23.66012368108138,\n  lng: 84.98720576194829\n}, {\n  lat: 23.67614405848414,\n  lng: 84.94365415880156\n}, {\n  lat: 23.71350280850645,\n  lng: 84.92765614695544\n}, {\n  lat: 23.75117970392775,\n  lng: 84.91583004140075\n}, {\n  lat: 23.76334089266808,\n  lng: 84.89280374392389\n}, {\n  lat: 23.77964657104907,\n  lng: 84.8736102993526\n}, {\n  lat: 23.79920043891375,\n  lng: 84.80514660574408\n}];\n\n// Coordinates for the Ormanjhi\nconst newPolygonCoords = [{\n  lat: 23.54296029942101,\n  lng: 85.52636109716603\n}, {\n  lat: 23.54779161548517,\n  lng: 85.51919075314856\n}, {\n  lat: 23.55229976762472,\n  lng: 85.50650008066773\n}, {\n  lat: 23.55318266084125,\n  lng: 85.50422180227505\n}, {\n  lat: 23.55174658194745,\n  lng: 85.49416101524703\n}, {\n  lat: 23.5543162337356,\n  lng: 85.49176521006754\n}, {\n  lat: 23.55424769605381,\n  lng: 85.48770567364139\n}, {\n  lat: 23.56070118957422,\n  lng: 85.48799496075915\n}, {\n  lat: 23.56461950733814,\n  lng: 85.47682103868097\n}, {\n  lat: 23.56927299882021,\n  lng: 85.46374702559245\n}, {\n  lat: 23.56691353988688,\n  lng: 85.45818420694246\n}, {\n  lat: 23.56496494533318,\n  lng: 85.44520199747272\n}, {\n  lat: 23.55223619199777,\n  lng: 85.43039049560059\n}, {\n  lat: 23.53211799245021,\n  lng: 85.41665577877137\n}, {\n  lat: 23.50468197497965,\n  lng: 85.40805721174617\n}, {\n  lat: 23.47869339587426,\n  lng: 85.40102045376567\n}, {\n  lat: 23.4695667911735,\n  lng: 85.39634968868492\n}, {\n  lat: 23.46251097906705,\n  lng: 85.39378248647783\n}, {\n  lat: 23.45197646014737,\n  lng: 85.39434075316433\n}, {\n  lat: 23.44615476366905,\n  lng: 85.39818875510299\n}, {\n  lat: 23.4354052413733,\n  lng: 85.40517046795574\n}, {\n  lat: 23.42628559398269,\n  lng: 85.41807317933501\n}, {\n  lat: 23.42440734872867,\n  lng: 85.43092898653501\n}, {\n  lat: 23.42139339896021,\n  lng: 85.4563085377844\n}, {\n  lat: 23.42005531051907,\n  lng: 85.4784128950273\n}, {\n  lat: 23.43253856422179,\n  lng: 85.49787688362025\n}, {\n  lat: 23.44665363489468,\n  lng: 85.51472256608024\n}, {\n  lat: 23.46303406658998,\n  lng: 85.52518901550418\n}, {\n  lat: 23.48651637383889,\n  lng: 85.52744915818089\n}, {\n  lat: 23.50928990843974,\n  lng: 85.54965571004868\n}, {\n  lat: 23.53009231841875,\n  lng: 85.55564661878509\n}, {\n  lat: 23.54296029942101,\n  lng: 85.52636109716603\n}];\n\n// Coordinates for the cluster1 polygon\nconst additionalPolygonCoords = [{\n  lat: 23.44370858861537,\n  lng: 85.45941114742203\n}, {\n  lat: 23.44303419987083,\n  lng: 85.45903457300538\n}, {\n  lat: 23.44217323053496,\n  lng: 85.4585371554558\n}, {\n  lat: 23.44124794491384,\n  lng: 85.45878646996067\n}, {\n  lat: 23.4406901023684,\n  lng: 85.45948430201854\n}, {\n  lat: 23.4400094636269,\n  lng: 85.46059017562224\n}, {\n  lat: 23.44068373946408,\n  lng: 85.46123645912141\n}, {\n  lat: 23.44023319796077,\n  lng: 85.46201010383501\n}, {\n  lat: 23.44058929362508,\n  lng: 85.46233577640538\n}, {\n  lat: 23.44113985237272,\n  lng: 85.46262567483447\n}, {\n  lat: 23.44153787512705,\n  lng: 85.46278641482267\n}, {\n  lat: 23.44188823552388,\n  lng: 85.46287309196805\n}, {\n  lat: 23.44228284092832,\n  lng: 85.46192763517753\n}, {\n  lat: 23.44243313332113,\n  lng: 85.46207596055827\n}, {\n  lat: 23.44267571056698,\n  lng: 85.46225074426221\n}, {\n  lat: 23.44303647990829,\n  lng: 85.4624353308749\n}, {\n  lat: 23.44330644465878,\n  lng: 85.46199995147552\n}, {\n  lat: 23.44355228065071,\n  lng: 85.46151130917544\n}, {\n  lat: 23.44369753632571,\n  lng: 85.46118627889163\n}, {\n  lat: 23.44387371176819,\n  lng: 85.46081278806199\n}, {\n  lat: 23.44403553046925,\n  lng: 85.46055396869011\n}, {\n  lat: 23.44422953782564,\n  lng: 85.46024706830457\n}, {\n  lat: 23.44443185965268,\n  lng: 85.45985136155826\n}, {\n  lat: 23.44370858861537,\n  lng: 85.45941114742203\n}];\n\n// Coordinates for the feild1 polygon (the one you requested)\nconst newPolygonCoords2 = [{\n  lat: 23.4436008862071,\n  lng: 85.45940798415077\n}, {\n  lat: 23.44297265335412,\n  lng: 85.45906466644934\n}, {\n  lat: 23.4425794607305,\n  lng: 85.45950910429806\n}, {\n  lat: 23.44327849476294,\n  lng: 85.46000229880522\n}, {\n  lat: 23.4436008862071,\n  lng: 85.45940798415077\n}\n\n// 23°26'36\"N 85°27'33\"E\n];\n// feild 2\nconst newPolygonCoords3 = [{\n  lat: 23.44224372797374,\n  lng: 85.45857014827321\n}, {\n  lat: 23.44199341526183,\n  lng: 85.45927513999196\n}, {\n  lat: 23.44255798637839,\n  lng: 85.45947816865956\n}, {\n  lat: 23.44295116650949,\n  lng: 85.45904142104465\n}, {\n  lat: 23.44224372797374,\n  lng: 85.45857014827321\n}];\n//feild 3\nconst newPolygonCoords4 = [{\n  lat: 23.44220806446697,\n  lng: 85.45853920757287\n}, {\n  lat: 23.44128844091964,\n  lng: 85.4587662063504\n}, {\n  lat: 23.44197910766288,\n  lng: 85.45927508730929\n}, {\n  lat: 23.44220806446697,\n  lng: 85.45853920757287\n}\n\n// 23°26'35\"N 85°27'35\"E\n];\n//feild 4\nconst newPolygonCoords5 = [{\n  lat: 23.44130259347494,\n  lng: 85.45880484902628\n}, {\n  lat: 23.44074352785897,\n  lng: 85.45950184646263\n}, {\n  lat: 23.44157185994861,\n  lng: 85.46000759255182\n}, {\n  lat: 23.44199342662392,\n  lng: 85.4593219221982\n}, {\n  lat: 23.44130259347494,\n  lng: 85.45880484902628\n}\n\n// 23°26'35\"N 85°27'35\"E\n];\n// feild 5\nconst newPolygonCoords6 = [{\n  lat: 23.4425365989235,\n  lng: 85.45954016868856\n}, {\n  lat: 23.44226493173527,\n  lng: 85.46038856124501\n}, {\n  lat: 23.44282582536205,\n  lng: 85.46077034418563\n}, {\n  lat: 23.44323548389995,\n  lng: 85.46004136732078\n}, {\n  lat: 23.4425365989235,\n  lng: 85.45954016868856\n}\n\n// 23°26'35\"N 85°27'35\"E\n];\n\n//feild 6\nconst newPolygonCoords7 = [{\n  lat: 23.44164340968677,\n  lng: 85.46001548700602\n}, {\n  lat: 23.44221485280544,\n  lng: 85.46039643157521\n}, {\n  lat: 23.44247939885103,\n  lng: 85.45951705162834\n}, {\n  lat: 23.44202202842522,\n  lng: 85.45931420444403\n}, {\n  lat: 23.44164340968677,\n  lng: 85.46001548700602\n}];\n\n//feild 7\nconst newPolygonCoords8 = [{\n  lat: 23.4425302723415,\n  lng: 85.46062193695269\n}, {\n  lat: 23.44215046731529,\n  lng: 85.46040426892642\n}, {\n  lat: 23.44153794629511,\n  lng: 85.46158586441727\n}, {\n  lat: 23.44229329904419,\n  lng: 85.46185323006979\n}, {\n  lat: 23.44279692691854,\n  lng: 85.46084093753544\n}, {\n  lat: 23.4425302723415,\n  lng: 85.46062193695269\n}];\n//feild 8\nconst newPolygonCoords9 = [{\n  lat: 23.44163614668305,\n  lng: 85.46006208262054\n}, {\n  lat: 23.44076430399821,\n  lng: 85.46125567561616\n}, {\n  lat: 23.44148765332247,\n  lng: 85.46160148822878\n}, {\n  lat: 23.44212901738941,\n  lng: 85.4603887062527\n}, {\n  lat: 23.44163614668305,\n  lng: 85.46006208262054\n}];\n\n//feild 9\nconst newPolygonCoords10 = [{\n  lat: 23.44006732479024,\n  lng: 85.46056792142473\n}, {\n  lat: 23.44070704142506,\n  lng: 85.46124780908413\n}, {\n  lat: 23.44157174847316,\n  lng: 85.46004641981965\n}, {\n  lat: 23.44071482945659,\n  lng: 85.45953288905635\n}, {\n  lat: 23.44006732479024,\n  lng: 85.46056792142473\n}];\n//feild 10\nconst newPolygonCoords11 = [{\n  lat: 23.44322155213431,\n  lng: 85.46016644061832\n}, {\n  lat: 23.44393489019958,\n  lng: 85.46060549366607\n}, {\n  lat: 23.44442985919503,\n  lng: 85.4598451327635\n}, {\n  lat: 23.44362269674928,\n  lng: 85.45945468536844\n}, {\n  lat: 23.44322155213431,\n  lng: 85.46016644061832\n}];\n//feild 11\nconst newPolygonCoords12 = [{\n  lat: 23.44284021450202,\n  lng: 85.46082524718942\n}, {\n  lat: 23.44353455204063,\n  lng: 85.46149382279995\n}, {\n  lat: 23.44392074850944,\n  lng: 85.46065254797111\n}, {\n  lat: 23.44318562069886,\n  lng: 85.46018209024251\n}, {\n  lat: 23.44284021450202,\n  lng: 85.46082524718942\n}];\n//feild 12\nconst newPolygonCoords13 = [{\n  lat: 23.44230049759334,\n  lng: 85.46188463662334\n}, {\n  lat: 23.44299348873417,\n  lng: 85.46243049875447\n}, {\n  lat: 23.44350579860391,\n  lng: 85.46153322261526\n}, {\n  lat: 23.44283295510958,\n  lng: 85.46088014683315\n}, {\n  lat: 23.44230049759334,\n  lng: 85.46188463662334\n}];\n\n//feild 13\nconst newPolygonCoords14 = [{\n  lat: 23.44151630725344,\n  lng: 85.4616486491613\n}, {\n  lat: 23.44114830435699,\n  lng: 85.46256768690932\n}, {\n  lat: 23.44186698702624,\n  lng: 85.46285634439684\n}, {\n  lat: 23.44226449554491,\n  lng: 85.46190034434183\n}, {\n  lat: 23.44151630725344,\n  lng: 85.4616486491613\n}];\n\n//feild 14\nconst newPolygonCoords15 = [{\n  lat: 23.44022116356310,\n  lng: 85.4620000001850\n}, {\n  lat: 23.44109799157107,\n  lng: 85.46259109856135\n}, {\n  lat: 23.44146602749289,\n  lng: 85.46165641355982\n}, {\n  lat: 23.44074284710178,\n  lng: 85.46130259692643\n}\n// { lat: 23.44022197356311, lng: 85.46202068704856 }\n];\nconst sampleCropInfo = {\n  name: 'Raghav Mishra',\n  crop: 'Tomato',\n  shownDate: '2024-10-15',\n  harvestDate: '2024-12-01',\n  quantity: '200 kg',\n  confScore: '95%'\n};\nconst sampleCropInfo1 = {\n  name: 'Amit Rai',\n  crop: 'Potato',\n  shownDate: '2024-09-25',\n  harvestDate: '2024-12-01',\n  quantity: '1200 kg',\n  confScore: '90%'\n  // URL to the crop photo\n};\nconst sampleCropInfo2 = {\n  name: 'Rohit Mondal',\n  crop: 'Rice',\n  shownDate: '2024-09-25',\n  harvestDate: '2024-12-01',\n  quantity: '1200 kg',\n  confScore: '90%'\n  // URL to the crop photo\n};\nconst calculateCentroid = coords => {\n  let latSum = 0;\n  let lngSum = 0;\n  const total = coords.length;\n  coords.forEach(coord => {\n    latSum += coord.lat;\n    lngSum += coord.lng;\n  });\n  return {\n    lat: latSum / total,\n    lng: lngSum / total\n  };\n};\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n  // const [selectedMarker, setSelectedMarker] = useState(null);\n  const [markerPosition, setMarkerPosition] = useState(null); // Define marker position state\n  const [markerPosition1, setMarkerPosition1] = useState(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isHoveredPolygon12, setIsHoveredPolygon12] = useState(false);\n  const [cropInfo12, setCropInfo12] = useState({});\n  const [isHoveredPolygon11, setIsHoveredPolygon11] = useState(false);\n  const [cropInfo11, setCropInfo11] = useState({});\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [cropInfo, setCropInfo] = useState({}); // State to hold crop information\n\n  const [selected, setSelected] = useState(null);\n  const mapRef = useRef(null);\n  const onLoad = useCallback(mapInstance => {\n    console.log(\"Map loaded:\", mapInstance);\n    mapRef.current = mapInstance;\n  }, []);\n  const handlePolygonClick = useCallback(polygonCoords => {\n    const map = mapRef.current;\n    if (!map) {\n      console.log(\"Map instance not available.\");\n      return;\n    }\n    console.log(\"Polygon clicked, zooming in...\");\n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n    map.fitBounds(bounds);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    onLoad: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PolygonF, {\n    paths: jharkhandCoords,\n    options: {\n      fillColor: 'transparent',\n      // Light Pink\n      strokeColor: '#ffc000',\n      // Crimson\n      fillOpacity: 0.35\n    }\n\n    // Set to false when not hovering\n    ,\n    onClick: () => {\n      console.log(\"Jharkhand polygon clicked\");\n      handlePolygonClick(jharkhandCoords, 21);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: ranchiCoords,\n    options: {\n      fillColor: 'transparent',\n      // Light Sky Blue\n      strokeColor: '#ffc000',\n      // Steel Blue\n      fillOpacity: 0.32\n    },\n    onClick: () => {\n      console.log(\"Ranchi polygon clicked\");\n      handlePolygonClick(ranchiCoords, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords,\n    options: {\n      fillColor: 'transparent',\n      // Pale Green\n      strokeColor: '#ffc000',\n      // Dark Green\n      fillOpacity: 0.1977\n    },\n    onClick: () => {\n      console.log(\"Additional polygon clicked\");\n      handlePolygonClick(newPolygonCoords); // Zoom in on polygon click\n      setMarkerPosition(calculateCentroid(newPolygonCoords)); // Set marker at the centroid\n      //setMarkerPosition1(calculateCentroid(newPolygonCoords));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 1\n    }\n  }), markerPosition && /*#__PURE__*/React.createElement(Marker, {\n    position: position,\n    onMouseOver: () => setSelected(position) // Show info on marker hover\n    ,\n    onMouseOut: () => setSelected(null) // Hide info when not hovering\n    ,\n    label: selected === position ? {\n      text: 'Ormanjhi Producer Farmers Producers Co. Ltd.',\n      color: 'purple',\n      fontSize: '10px',\n      fontWeight: 'bold'\n    } : undefined // Show text on hover\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 3\n    }\n  }), markerPosition && /*#__PURE__*/React.createElement(MarkerF, {\n    position: position1,\n    onMouseOver: () => setSelected(position) // Show info on marker hover\n    ,\n    onMouseOut: () => setSelected(null) // Hide info when not hovering\n    ,\n    label: selected === position ? {\n      text: 'Ormanjhi Producer Farmers Producers Co. Ltd.',\n      color: 'purple',\n      fontSize: '10px',\n      fontWeight: 'bold'\n    } : undefined // Show text on hover\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: additionalPolygonCoords,\n    options: {\n      fillColor: 'Transparent',\n      // Gold\n      strokeColor: 'transparent',\n      // Goldenrod\n      fillOpacity: 10,\n      // Adjusted to make the polygon more visible\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"Additional polygon clicked\");\n      handlePolygonClick(additionalPolygonCoords); // Zoom in on polygon click\n      setMarkerPosition(calculateCentroid(additionalPolygonCoords)); // Set marker at the centroid\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords2,\n    options: {\n      fillColor: '#BC3F4A',\n      // Lavender\n      strokeColor: '#ffc000',\n      // Medium Purple\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 2 clicked\");\n      handlePolygonClick(newPolygonCoords2, 9);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords3,\n    options: {\n      fillColor: '#BC3F4A',\n      // Lemon Chiffon\n      strokeColor: '##ffc000',\n      // Gold\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 3 clicked\");\n      handlePolygonClick(newPolygonCoords3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords4,\n    options: {\n      fillColor: '#958aae',\n      // Pale Turquoise\n      strokeColor: '#ffc000',\n      // Turquoise\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 4 clicked\");\n      handlePolygonClick(newPolygonCoords4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords5,\n    options: {\n      fillColor: '#b5aa60',\n      // Moccasin\n      strokeColor: '#ffc000',\n      // Chocolate\n      fillOpacity: .5,\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 5 clicked\");\n      handlePolygonClick(newPolygonCoords5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords6,\n    options: {\n      fillColor: '#958aae',\n      // Lavender Blush\n      strokeColor: '#ffc000',\n      // Pale Violet Red\n      fillOpacity: .5,\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 6 clicked\");\n      handlePolygonClick(newPolygonCoords6);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords7,\n    options: {\n      fillColor: '#BC3F4A',\n      // Navajo White\n      strokeColor: '#ffc000',\n      // Peru\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 7 clicked\");\n      handlePolygonClick(newPolygonCoords7);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords8,\n    options: {\n      fillColor: '#b5aa60',\n      // Light Cyan\n      strokeColor: '#ffc000',\n      // Light Sea Green\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 8 clicked\");\n      handlePolygonClick(newPolygonCoords8);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords9,\n    options: {\n      fillColor: '#b5aa60',\n      // Light Goldenrod Yellow\n      strokeColor: '#ffc000',\n      // Dark Khaki\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 9 clicked\");\n      handlePolygonClick(newPolygonCoords9);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords10,\n    options: {\n      fillColor: '#b5aa60',\n      // Light Blue\n      strokeColor: '#ffc000',\n      // Steel Blue\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 10 clicked\");\n      handlePolygonClick(newPolygonCoords10);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords11,\n    options: {\n      fillColor: '#b5aa60',\n      // Powder Blue\n      strokeColor: '#ffc000',\n      // Steel Blue\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onMouseOver: () => {\n      setIsHoveredPolygon11(true);\n      setCropInfo11(sampleCropInfo2); // Set crop info for polygon 12 on hover\n    },\n    onMouseOut: () => {\n      setIsHoveredPolygon11(false);\n      setCropInfo11({}); // Clear crop info for polygon 12 on mouse out\n    },\n    onClick: () => {\n      console.log(\"New Polygon 11 clicked\");\n      handlePolygonClick(newPolygonCoords11);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 1\n    }\n  }), isHoveredPolygon11 && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '70%',\n      left: '75%',\n      transform: 'translate(-50%, -100%)',\n      padding: '10px',\n      backgroundColor: 'white',\n      borderRadius: '13%',\n      background: 'smoke white',\n      border: '1px solid black',\n      boxShadow: '2px 2px 5px rgba(0, 0, 0, 0.3)',\n      zIndex: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: cart2 // Change this to the correct image for polygon 12\n    ,\n    alt: \"Cart Icon\",\n    style: {\n      width: '50px',\n      height: '50px',\n      marginRight: '10px',\n      borderRadius: '50%',\n      marginLeft: '50px',\n      marginRight: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: code2 // Change this to the correct image for polygon 12\n    ,\n    alt: \"Cart Icon\",\n    style: {\n      width: '50px',\n      height: '50px',\n      marginRight: '10px',\n      borderRadius: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 986,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 5\n    }\n  }, \"Name: \", cropInfo11.name), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 5\n    }\n  }, \"Crop: \", cropInfo11.crop), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 5\n    }\n  }, \"Shown Date: \", cropInfo11.shownDate), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 5\n    }\n  }, \"Harvest Date: \", cropInfo11.harvestDate), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 5\n    }\n  }, \"Quantity: \", cropInfo11.quantity), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 5\n    }\n  }, \"Conf. Score: \", cropInfo11.confScore)), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords12,\n    options: {\n      fillColor: '#88a561',\n      // Khaki\n      strokeColor: '#ffc000',\n      // Dark Goldenrod\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onMouseOver: () => {\n      setIsHoveredPolygon12(true);\n      setCropInfo12(sampleCropInfo1); // Set crop info for polygon 12 on hover\n    },\n    onMouseOut: () => {\n      setIsHoveredPolygon12(false);\n      setCropInfo12({}); // Clear crop info for polygon 12 on mouse out\n    },\n    onClick: () => {\n      console.log(\"New Polygon 12 clicked\");\n      handlePolygonClick(newPolygonCoords12);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 1\n    }\n  }), isHoveredPolygon12 && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '80%',\n      left: '75%',\n      transform: 'translate(-50%, -100%)',\n      padding: '10px',\n      backgroundColor: 'white',\n      borderRadius: '13%',\n      background: 'smoke white',\n      border: '1px solid black',\n      boxShadow: '2px 2px 5px rgba(0, 0, 0, 0.3)',\n      zIndex: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: cart1 // Change this to the correct image for polygon 12\n    ,\n    alt: \"Cart Icon\",\n    style: {\n      width: '50px',\n      height: '50px',\n      marginRight: '10px',\n      borderRadius: '50%',\n      marginLeft: '50px',\n      marginRight: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: code2 // Change this to the correct image for polygon 12\n    ,\n    alt: \"Cart Icon\",\n    style: {\n      width: '50px',\n      height: '50px',\n      marginRight: '10px',\n      borderRadius: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1041,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 5\n    }\n  }, \"Name: \", cropInfo12.name), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 5\n    }\n  }, \"Crop: \", cropInfo12.crop), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1050,\n      columnNumber: 5\n    }\n  }, \"Shown Date: \", cropInfo12.shownDate), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 5\n    }\n  }, \"Harvest Date: \", cropInfo12.harvestDate), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 5\n    }\n  }, \"Quantity: \", cropInfo12.quantity), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 5\n    }\n  }, \"Conf. Score: \", cropInfo12.confScore)), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords13,\n    options: {\n      fillColor: '#88a561',\n      // Light Pink\n      strokeColor: 'Golden',\n      // Hot Pink\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onMouseOver: () => {\n      setIsHovered(true);\n      // Set position to centroid\n      setCropInfo(sampleCropInfo); // Set crop info on hover\n    } // Set to true on hover\n    ,\n    onMouseOut: () => {\n      setIsHovered(false);\n      setCropInfo({}); // Clear crop info on mouse out\n    },\n    onClick: () => {\n      console.log(\"New Polygon 13 clicked\");\n      handlePolygonClick(newPolygonCoords13);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 1\n    }\n  }), isHovered && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '70%',\n      // Adjust based on your map's coordinates\n      left: '75%',\n      transform: 'translate(-50%, -100%)',\n      // Center the card above the polygon\n      padding: '10px',\n      backgroundColor: 'white',\n      borderRadius: '13%',\n      background: 'smoke white',\n      border: '1px solid black',\n      boxShadow: '2px 2px 5px rgba(0, 0, 0, 0.3)',\n      zIndex: 1000 // Ensure it's above other elements\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1081,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"first\",\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1097,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: cart,\n    alt: \"Cart Icon\",\n    style: {\n      width: '50px',\n      height: '50px',\n      marginRight: '10px',\n      borderRadius: '50%',\n      marginLeft: '50px',\n      marginRight: '30px'\n    } // Adjust size as needed\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: code2 // Change this to the correct image for polygon 12\n    ,\n    alt: \"Cart Icon\",\n    style: {\n      width: '50px',\n      height: '50px',\n      marginRight: '10px',\n      borderRadius: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111,\n      columnNumber: 10\n    }\n  }, \"Name: \", cropInfo.name, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1112,\n      columnNumber: 10\n    }\n  }, \"Crop: \", cropInfo.crop, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1113,\n      columnNumber: 10\n    }\n  }, \"Shown Date:\", cropInfo.shownDate, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1114,\n      columnNumber: 10\n    }\n  }, \"Harvest Date:\", cropInfo.harvestDate, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 10\n    }\n  }, \"Quantity: \", cropInfo.quantity, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1116,\n      columnNumber: 10\n    }\n  }, \"Conf. Score : \", cropInfo.confScore)), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords14,\n    options: {\n      fillColor: '#958aae',\n      // Light Blue\n      strokeColor: '#ffc000',\n      // Steel Blue\n      fillOpacity: 0.5,\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 14 clicked\");\n      handlePolygonClick(newPolygonCoords14);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1121,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords15,\n    options: {\n      fillColor: '#958aae',\n      // Light Blue\n      strokeColor: '#ffc000',\n      // Steel Blue\n      fillOpacity: 0.5,\n      label: 'This is the feiled1',\n      strokeWeight: 1\n    },\n    onClick: () => {\n      console.log(\"New Polygon 15 clicked\");\n      handlePolygonClick(newPolygonCoords15);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134,\n      columnNumber: 1\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","Marker","MarkerF","PolygonF","useJsApiLoader","React","useCallback","useRef","useState","cart1","code2","cart","cart2","containerStyle","width","height","center","lat","lng","position","position1","position2","position3","position4","position5","position6","position7","position8","zoomLevel","label","jharkhandCoords","ranchiCoords","newPolygonCoords","additionalPolygonCoords","newPolygonCoords2","newPolygonCoords3","newPolygonCoords4","newPolygonCoords5","newPolygonCoords6","newPolygonCoords7","newPolygonCoords8","newPolygonCoords9","newPolygonCoords10","newPolygonCoords11","newPolygonCoords12","newPolygonCoords13","newPolygonCoords14","newPolygonCoords15","sampleCropInfo","name","crop","shownDate","harvestDate","quantity","confScore","sampleCropInfo1","sampleCropInfo2","calculateCentroid","coords","latSum","lngSum","total","length","forEach","coord","MapComponent","isLoaded","id","googleMapsApiKey","markerPosition","setMarkerPosition","markerPosition1","setMarkerPosition1","isHovered","setIsHovered","isHoveredPolygon12","setIsHoveredPolygon12","cropInfo12","setCropInfo12","isHoveredPolygon11","setIsHoveredPolygon11","cropInfo11","setCropInfo11","selectedMarker","setSelectedMarker","cropInfo","setCropInfo","selected","setSelected","mapRef","onLoad","mapInstance","console","log","current","handlePolygonClick","polygonCoords","map","bounds","window","google","maps","LatLngBounds","extend","fitBounds","createElement","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","paths","options","fillColor","strokeColor","fillOpacity","onClick","onMouseOver","onMouseOut","text","color","fontSize","fontWeight","undefined","strokeWeight","top","left","transform","padding","backgroundColor","borderRadius","background","border","boxShadow","zIndex","textAlign","src","alt","marginRight","marginLeft","className","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["\n\nimport { GoogleMap, Marker, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useRef, useState } from 'react';\n\nimport cart1 from './img/amit.jpeg';\nimport code2 from './img/code.png';\nimport cart from './img/photo.jpeg';\nimport cart2 from './img/rohit.jpeg';\n\n\n\n\n\n\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,  // Latitude of Jharkhand\n  lng: 85.2799,  // Longitude of Jharkhand\n};\nconst position = {\n  lat: 23.481411, // 23°28'53.08\"N\n  lng: 85.447336, // 85°26'50.41\"E\n};\nconst position1 = {\n  lat: 23.442283,  // 23°26'32.18\"N\n    lng: 85.460815,// 85°26'50.41\"E\n};\nconst position2 = {\n  lat: 23.443018,  // 23°26'35.06\"N\n  lng: 85.459594,  // 85°27'34.65\"E\n};\nconst position3 = {\n  lat: 23.443519,  // 23°26'36.65\"N\n  lng: 85.458611,  // 85°27'31.00\"E\n};\nconst position4 = {\n  lat: 23.444347,  // 23°26'39.65\"N\n  lng: 85.460347,  // 85°27'37.25\"E\n};\n\nconst position5 = {\n  lat: 23.443017,  // 23°26'34.86\"N\n  lng: 85.457525,  // 85°27'27.09\"E\n};\nconst position6 = {\n  lat: 23.443765,  // 23°26'37.57\"N\n  lng: 85.457386,  // 85°27'28.19\"E\n};\nconst position7 = {\n  lat: 23.444861,  // 23°26'41.51\"N\n  lng: 85.458711,  // 85°27'31.36\"E\n};\nconst position8 = {\n  lat: 23.440477,  // 23°26'41.51\"N\n  lng:  85.459139,  // 85°27'31.36\"E\n};\nconst zoomLevel = 5;  // Initial zoom level for a broader view\nconst label = \"OR-001 1.5 A\"; \n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  { lat: 24.48623150879691, lng: 83.47396970257535 },\n{ lat: 24.46410920939513, lng: 83.41168774233471 },\n{ lat: 24.3856295616306, lng: 83.38929801994963 },\n{ lat: 24.26467754025446, lng: 83.38311702970319 },\n{ lat: 24.10831289566599, lng: 83.39297870152488 },\n{ lat: 24.03802131973457, lng: 83.45628426673504 },\n{ lat: 23.95375933409299, lng: 83.54303918967788 },\n{ lat: 23.82707339556849, lng: 83.66123428947841 },\n{ lat: 23.75686252590038, lng: 83.74751285996309 },\n{ lat: 23.67196187438844, lng: 83.80274174812527 },\n{ lat: 23.60864658391675, lng: 83.88099609208939 },\n{ lat: 23.58060961060254, lng: 83.92782379622236 },\n{ lat: 23.54564635874184, lng: 83.99796553936125 },\n{ lat: 23.43142882261908, lng: 83.99889484066162 },\n{ lat: 23.34607291946323, lng: 84.03833316347242 },\n{ lat: 23.41189144522013, lng: 84.20835263945534 },\n{ lat: 23.31854702182158, lng: 84.15477569700504 },\n{ lat: 23.26078469080568, lng: 84.09321982790681 },\n{ lat: 23.17454124738476, lng: 84.05513076339402 },\n{ lat: 23.06767562398619, lng: 84.1178433715383 },\n{ lat: 23.00349632067168, lng: 84.15698196230548 },\n{ lat: 23.01163406046414, lng: 84.27297599195853 },\n{ lat: 22.9834604528841, lng: 84.34276599257669 },\n{ lat: 22.94077823251206, lng: 84.39715387657782 },\n{ lat: 22.8756783534008, lng: 84.32795769444202 },\n{ lat: 22.7887790270553, lng: 84.24345921017073 },\n{ lat: 22.68737121435733, lng: 84.16681134337777 },\n{ lat: 22.49827285902155, lng: 84.0057577944837 },\n{ lat: 22.54223799001775, lng: 84.06728962745562 },\n{ lat: 22.45643466603815, lng: 84.15282167554912 },\n{ lat: 22.37807141016749, lng: 84.2845713755558 },\n{ lat: 22.43724832869452, lng: 84.47723927607537 },\n{ lat: 22.4523451708808, lng: 84.60067447375043 },\n{ lat: 22.49654022044235, lng: 84.88612322176596 },\n{ lat: 22.51108243357764, lng: 85.01734977334402 },\n{ lat: 22.48217571028156, lng: 85.09470350356216 },\n{ lat: 22.41716227529362, lng: 85.07178321445411 },\n{ lat: 22.3086483422608, lng: 85.0567721370559 },\n{ lat: 22.17818541753647, lng: 85.04187133177096 },\n{ lat: 22.09100031295943, lng: 85.1039809244318 },\n{ lat: 22.09070480338038, lng: 85.25065527191916 },\n{ lat: 22.11196550586719, lng: 85.3973194333222 },\n{ lat: 22.10366196964451, lng: 85.58283430853369 },\n{ lat: 22.07402413434823, lng: 85.66026226343115 },\n{ lat: 22.1170373509356, lng: 85.73749121063356 },\n{ lat: 22.00703857219342, lng: 85.83070382851152 },\n{ lat: 22.02090496222072, lng: 85.90034731199708 },\n{ lat: 22.04928042576864, lng: 85.96998507832873 },\n{ lat: 22.16514988509444, lng: 86.01619003890713 },\n{ lat: 22.28739014926273, lng: 86.01405831335614 },\n{ lat: 22.34272828275158, lng: 86.01017903466163 },\n{ lat: 22.40918575012196, lng: 85.99047176147184 },\n{ lat: 22.45343914092298, lng: 85.97865992612562 },\n{ lat: 22.51584161487376, lng: 85.99464013741803 },\n{ lat: 22.54111645421306, lng: 86.05418605476351 },\n{ lat: 22.4659976856972, lng: 86.22865776231153 },\n{ lat: 22.41716531704861, lng: 86.31992360505123 },\n{ lat: 22.34988147788881, lng: 86.39928136099721 },\n{ lat: 22.34160470167811, lng: 86.47088916886375 },\n{ lat: 22.31116511572828, lng: 86.53851170266948 },\n{ lat: 22.29137954247885, lng: 86.63014155048445 },\n{ lat: 22.26070015457833, lng: 86.70188483750206 },\n{ lat: 22.24049452984143, lng: 86.80570059619453 },\n{ lat: 22.24628820145168, lng: 86.89773424545059 },\n{ lat: 22.33996599323111, lng: 86.82999678892332 },\n{ lat: 22.37348965905637, lng: 86.81411355450015 },\n{ lat: 22.46641302913803, lng: 86.77447787200616 },\n{ lat: 22.4801538742811, lng: 86.8385355922406 },\n{ lat: 22.55150049621475, lng: 86.75485005895115 },\n{ lat: 22.60106771754707, lng: 86.63522507350395 },\n{ lat: 22.67473268962253, lng: 86.62757857203781 },\n{ lat: 22.69764821567835, lng: 86.55984179164031 },\n{ lat: 22.69808578092647, lng: 86.52394782566635 },\n{ lat: 22.74266956662789, lng: 86.48029587948707 },\n{ lat: 22.77990406372504, lng: 86.43264296542037 },\n{ lat: 22.86042377577004, lng: 86.44897212578526 },\n{ lat: 22.93360255876451, lng: 86.46131786334243 },\n{ lat: 22.99516013446389, lng: 86.52951181138341 },\n{ lat: 22.98826105716376, lng: 86.48955318743096 },\n{ lat: 22.9856457530303, lng: 86.38584177354041 },\n{ lat: 22.98631581152014, lng: 86.31412414748344 },\n{ lat: 23.01288181311809, lng: 86.20277959058838 },\n{ lat: 23.05731951570507, lng: 86.13136511937351 },\n{ lat: 23.13827819434155, lng: 86.05216739191872 },\n{ lat: 23.13878255545649, lng: 85.96868024526216 },\n{ lat: 23.18299581873072, lng: 85.89730760349813 },\n{ lat: 23.23800697221863, lng: 85.84583768460912 },\n{ lat: 23.30729741806508, lng: 85.85800067019194 },\n{ lat: 23.37655095138379, lng: 85.87416372519615 },\n{ lat: 23.45685236623369, lng: 85.86254095121255 },\n{ lat: 23.47126809972077, lng: 85.90240192784542 },\n{ lat: 23.48896445686492, lng: 86.01399490038591 },\n{ lat: 23.50694800397911, lng: 86.06191219189202 },\n{ lat: 23.55454324161819, lng: 86.03027943987814 },\n{ lat: 23.59083203120752, lng: 86.06637014226587 },\n{ lat: 23.58333926786653, lng: 86.10222826814038 },\n{ lat: 23.53170626265977, lng: 86.19368484231138 },\n{ lat: 23.41788459709818, lng: 86.28873111803182 },\n{ lat: 23.50500977041682, lng: 86.3572496578106 },\n{ lat: 23.54858356526588, lng: 86.38957041921987 },\n{ lat: 23.57739264458725, lng: 86.44181850052063 },\n{ lat: 23.63906631311949, lng: 86.49441998456479 },\n{ lat: 23.64943034740797, lng: 86.5666737227281 },\n{ lat: 23.67022248932751, lng: 86.69534314182731 },\n{ lat: 23.69505904788761, lng: 86.77603452673827 },\n{ lat: 23.78621927711402, lng: 86.80530615786149 },\n{ lat: 23.8440286932636, lng: 86.88264425025874 },\n{ lat: 23.80861680104808, lng: 87.1206052567461 },\n{ lat: 23.86308440418564, lng: 87.16602268648585 },\n{ lat: 23.91712292384361, lng: 87.25214760806954 },\n{ lat: 23.9895774478581, lng: 87.33478314964664 },\n{ lat: 23.99884204254976, lng: 87.48586163816833 },\n{ lat: 24.07499419194031, lng: 87.57332905259746 },\n{ lat: 24.15868222118824, lng: 87.65310132429137 },\n{ lat: 24.24284610186048, lng: 87.70030055749088 },\n{ lat: 24.31586149417642, lng: 87.76390087405552 },\n{ lat: 24.43716924190371, lng: 87.80840042299775 },\n{ lat: 24.53681198725385, lng: 87.81946324443008 },\n{ lat: 24.56587449420685, lng: 87.87414575003896 },\n{ lat: 24.65818724569443, lng: 87.89767272060915 },\n{ lat: 24.75857018872508, lng: 87.85512696171426 },\n{ lat: 24.8472478507229, lng: 87.89953908437562 },\n{ lat: 24.89144061183487, lng: 87.95099274711461 },\n{ lat: 24.98449824854584, lng: 87.93334736308201 },\n{ lat: 25.07431701897787, lng: 87.84474533000437 },\n{ lat: 25.18636148272727, lng: 87.78196895457054 },\n{ lat: 25.26106876608343, lng: 87.75124830719913 },\n{ lat: 25.3097710682978, lng: 87.6987884062311 },\n{ lat: 25.31001738909645, lng: 87.62388047303234 },\n{ lat: 25.3362752074891, lng: 87.57903370490786 },\n{ lat: 25.29916385977878, lng: 87.51968591913352 },\n{ lat: 25.18766004880675, lng: 87.46647967985464 },\n{ lat: 25.22478049342555, lng: 87.48831841559488 },\n{ lat: 25.19924036661748, lng: 87.35110132244913 },\n{ lat: 25.09538079423089, lng: 87.32341861450848 },\n{ lat: 25.09199348169744, lng: 87.24509812297789 },\n{ lat: 24.98489560474829, lng: 87.17250846015453 },\n{ lat: 24.86673891428025, lng: 87.14506841771372 },\n{ lat: 24.79685438935717, lng: 87.09846198249377 },\n{ lat: 24.72685188488938, lng: 87.08874795117674 },\n{ lat: 24.61647349606084, lng: 87.0700864325694 },\n{ lat: 24.6391450712516, lng: 86.97275255891975 },\n{ lat: 24.55863885749378, lng: 86.90613440184485 },\n{ lat: 24.55153262139332, lng: 86.86538122826424 },\n{ lat: 24.52985140330071, lng: 86.80412310030852 },\n{ lat: 24.59233867824138, lng: 86.79708293251343 },\n{ lat: 24.59255753282647, lng: 86.75651153784703 },\n{ lat: 24.56710690306759, lng: 86.70743843283115 },\n{ lat: 24.58964402388771, lng: 86.60653767931503 },\n{ lat: 24.53491166420186, lng: 86.5410149794743 },\n{ lat: 24.45078331280122, lng: 86.49947059762268 },\n{ lat: 24.38117614467653, lng: 86.49856156347708 },\n{ lat: 24.38508489239666, lng: 86.45022134270981 },\n{ lat: 24.41814417827353, lng: 86.43047164176004 },\n{ lat: 24.44430663646054, lng: 86.31391056990229 },\n{ lat: 24.50662724946841, lng: 86.30252535959595 },\n{ lat: 24.59099258229016, lng: 86.28736218881883 },\n{ lat: 24.60613446567885, lng: 86.14643177020852 },\n{ lat: 24.67590575672694, lng: 86.11488228276569 },\n{ lat: 24.75311961421165, lng: 86.05917680572851 },\n{ lat: 24.74972164308508, lng: 85.93820652334045 },\n{ lat: 24.78286007727881, lng: 85.88607507009671 },\n{ lat: 24.81232509783648, lng: 85.83389517493863 },\n{ lat: 24.81243623764847, lng: 85.76136568295919 },\n{ lat: 24.79414079851209, lng: 85.71695473729292 },\n{ lat: 24.72081385013023, lng: 85.67633152858937 },\n{ lat: 24.64014875403906, lng: 85.69202698419824 },\n{ lat: 24.59993765732149, lng: 85.63157900351511 },\n{ lat: 24.57438713991693, lng: 85.56322122396531 },\n{ lat: 24.51951773866213, lng: 85.53495978488874 },\n{ lat: 24.53058288811607, lng: 85.42266241858073 },\n{ lat: 24.51599067746609, lng: 85.29029347021006 },\n{ lat: 24.47574915663001, lng: 85.21011484391268 },\n{ lat: 24.42821037517481, lng: 85.18610721332807 },\n{ lat: 24.39529722422991, lng: 85.14608441306429 },\n{ lat: 24.37333772638311, lng: 85.09405375963759 },\n{ lat: 24.42448589123927, lng: 85.06991556849378 },\n{ lat: 24.39157934721657, lng: 85.05796881040646 },\n{ lat: 24.3696087310429, lng: 85.0139623996409 },\n{ lat: 24.38414708909545, lng: 84.94982349254455 },\n{ lat: 24.41698125388582, lng: 84.90562070520123 },\n{ lat: 24.4608174006142, lng: 84.87737384495112 },\n{ lat: 24.51197534197415, lng: 84.84103286914454 },\n{ lat: 24.53020458060083, lng: 84.80079762151678 },\n{ lat: 24.47517207893834, lng: 84.72884012225502 },\n{ lat: 24.40914060478236, lng: 84.64898078115728 },\n{ lat: 24.39800470946991, lng: 84.58885301272161 },\n{ lat: 24.36862955904418, lng: 84.54892884266935 },\n{ lat: 24.31004357133102, lng: 84.52128189460667 },\n{ lat: 24.3171882245853, lng: 84.47306622703866 },\n{ lat: 24.36101004362085, lng: 84.45664001646847 },\n{ lat: 24.37906546920414, lng: 84.39219422860073 },\n{ lat: 24.40818491262543, lng: 84.35171151478838 },\n{ lat: 24.45564830889711, lng: 84.31904729891977 },\n{ lat: 24.46281486130363, lng: 84.27871105672405 },\n{ lat: 24.49965323655974, lng: 84.33469771233511 },\n{ lat: 24.54712047093326, lng: 84.28988086055476 },\n{ lat: 24.56147686192835, lng: 84.20907273141751 },\n{ lat: 24.5210395750433, lng: 84.18132182816221 },\n{ lat: 24.48784674047472, lng: 84.13332371016223 },\n{ lat: 24.50610020086866, lng: 84.11695451543328 },\n{ lat: 24.53897060810661, lng: 84.08826966095275 },\n{ lat: 24.5681686831719, lng: 84.05555864803432 },\n{ lat: 24.61950680644775, lng: 84.04676061171665 },\n{ lat: 24.62667264991762, lng: 84.00620701748618 },\n{ lat: 24.5972507674913, lng: 83.99449790755956 },\n{ lat: 24.54174845300106, lng: 83.90225559218294 },\n{ lat: 24.54499177963706, lng: 83.82120492284119 },\n{ lat: 24.51521191045056, lng: 83.74873090067152 },\n{ lat: 24.51110383104312, lng: 83.67577108949359 },\n{ lat: 24.52534206497082, lng: 83.60239655645393 },\n{ lat: 24.52113909888234, lng: 83.52113054075762 },\n{ lat: 24.48623150879691, lng: 83.47396970257535 }\n\n\n\n\n\n\n  \n\n\n\n\n];\n\n// Coordinates for the Ranchi polygon (updated)\nconst ranchiCoords = [\n  \n  { lat: 23.79920043891375, lng: 84.80514660574408 },\n  { lat: 23.77428676704722, lng: 84.81248948488594 },\n  { lat: 23.73181560633788, lng: 84.82226954516166 },\n  { lat: 23.7072339752749, lng: 84.82366218426222 },\n  { lat: 23.67402960373414, lng: 84.83342486510942 },\n  { lat: 23.62838842914657, lng: 84.83165770177496 },\n  { lat: 23.57316986275648, lng: 84.83580498311005 },\n  { lat: 23.5517794096063, lng: 84.84868592465119 },\n  { lat: 23.52974380679333, lng: 84.87340788643567 },\n  { lat: 23.5201589497429, lng: 84.88942373253366 },\n  { lat: 23.44065729347281, lng: 84.92934446492637 },\n  { lat: 23.417006628697, lng: 84.96340620139561 },\n  { lat: 23.39176430875845, lng: 84.98666125430395 },\n  { lat: 23.37321198274659, lng: 85.01687758330631 },\n  { lat: 23.33421071621555, lng: 85.05223969592166 },\n  { lat: 23.29649433322513, lng: 85.0740281636876 },\n  { lat: 23.24757461983729, lng: 85.10097969899644 },\n  { lat: 23.23412445019358, lng: 85.11726405974755 },\n  { lat: 23.20942992990917, lng: 85.15886153897635 },\n  { lat: 23.17160841019193, lng: 85.20074350663702 },\n  { lat: 23.14597717121111, lng: 85.21974283203794 },\n  { lat: 23.13277407474896, lng: 85.25024241772269 },\n  { lat: 23.12401046412101, lng: 85.28874066909532 },\n  { lat: 23.11629542054771, lng: 85.29947027383983 },\n  { lat: 23.07556896790893, lng: 85.32394572081665 },\n  { lat: 23.03304212118545, lng: 85.38797381583268 },\n  { lat: 23.03115148170811, lng: 85.44766749786119 },\n  { lat: 23.01934229748854, lng: 85.49899336168657 },\n  { lat: 23.02950802690849, lng: 85.56606211958488 },\n  { lat: 23.03351642452318, lng: 85.59004889199765 },\n  { lat: 23.06161633314458, lng: 85.64891230865055 },\n  { lat: 23.01925733617136, lng: 85.7415125567488 },\n  { lat: 23.02784108900541, lng: 85.78782402836887 },\n  { lat: 23.03827151710054, lng: 85.80458478246048 },\n  { lat: 23.05320348137726, lng: 85.81928727077165 },\n  { lat: 23.08052247808796, lng: 85.84555726184588 },\n  { lat: 23.1032293039927, lng: 85.84952365125775 },\n  { lat: 23.13718231172097, lng: 85.84833831679266 },\n  { lat: 23.15162065302644, lng: 85.84459691554278 },\n  { lat: 23.17288997032819, lng: 85.82766453637842 },\n  { lat: 23.21546160680601, lng: 85.86277550137467 },\n  { lat: 23.23239206426466, lng: 85.8276981342913 },\n  { lat: 23.25281709305742, lng: 85.83271043534984 },\n  { lat: 23.27303612596435, lng: 85.82343898398028 },\n  { lat: 23.33081421618204, lng: 85.83289634360825 },\n  { lat: 23.38016791342565, lng: 85.8548670332097 },\n  { lat: 23.41375500320339, lng: 85.84953731156483 },\n  { lat: 23.41289396691505, lng: 85.83697613959056 },\n  { lat: 23.44257407717736, lng: 85.79744645379773 },\n  { lat: 23.4442288446834, lng: 85.83267727650015 },\n  { lat: 23.45436625676904, lng: 85.80067105059274 },\n  { lat: 23.4866307867548, lng: 85.7988194082068 },\n  { lat: 23.51078508573824, lng: 85.76901086599958 },\n  { lat: 23.53788388127114, lng: 85.72632584079302 },\n  { lat: 23.54892363991247, lng: 85.69677550572743 },\n  { lat: 23.56537833323724, lng: 85.66761407694896 },\n  { lat: 23.57404411579746, lng: 85.65930955267459 },\n  { lat: 23.59146819751694, lng: 85.56779020092323 },\n  { lat: 23.58749760085258, lng: 85.53363275646544 },\n  { lat: 23.60794098849065, lng: 85.52853046182123 },\n  { lat: 23.62211568121768, lng: 85.50040131545376 },\n  { lat: 23.62737976843316, lng: 85.46629962691927 },\n  { lat: 23.6387464046934, lng: 85.42073948927455 },\n  { lat: 23.64661287810837, lng: 85.36958869633168 },\n  { lat: 23.65472912549597, lng: 85.33271454563905 },\n  { lat: 23.63027474331957, lng: 85.30370792687003 },\n  { lat: 23.61415032433586, lng: 85.26221457350732 },\n  { lat: 23.60560942728202, lng: 85.24025147972392 },\n  { lat: 23.60089388099036, lng: 85.21795651417342 },\n  { lat: 23.58946781355863, lng: 85.1987720530887 },\n  { lat: 23.57739631399355, lng: 85.1813282513702 },\n  { lat: 23.56403728707425, lng: 85.16736291689735 },\n  { lat: 23.56765894808103, lng: 85.12247606712745 },\n  { lat: 23.58782277088436, lng: 85.09294246495728 },\n  { lat: 23.59966226400446, lng: 85.07591197101517 },\n  { lat: 23.6587885271242, lng: 85.02100793214224 },\n  { lat: 23.66012368108138, lng: 84.98720576194829 },\n  { lat: 23.67614405848414, lng: 84.94365415880156 },\n  { lat: 23.71350280850645, lng: 84.92765614695544 },\n  { lat: 23.75117970392775, lng: 84.91583004140075 },\n  { lat: 23.76334089266808, lng: 84.89280374392389 },\n  { lat: 23.77964657104907, lng: 84.8736102993526 },\n  { lat: 23.79920043891375, lng: 84.80514660574408 }\n  ];\n  \n\n\n// Coordinates for the Ormanjhi\nconst newPolygonCoords = [\n  { lat: 23.54296029942101, lng: 85.52636109716603 },\n  { lat: 23.54779161548517, lng: 85.51919075314856 },\n  { lat: 23.55229976762472, lng: 85.50650008066773 },\n  { lat: 23.55318266084125, lng: 85.50422180227505 },\n  { lat: 23.55174658194745, lng: 85.49416101524703 },\n  { lat: 23.5543162337356, lng: 85.49176521006754 },\n  { lat: 23.55424769605381, lng: 85.48770567364139 },\n  { lat: 23.56070118957422, lng: 85.48799496075915 },\n  { lat: 23.56461950733814, lng: 85.47682103868097 },\n  { lat: 23.56927299882021, lng: 85.46374702559245 },\n  { lat: 23.56691353988688, lng: 85.45818420694246 },\n  { lat: 23.56496494533318, lng: 85.44520199747272 },\n  { lat: 23.55223619199777, lng: 85.43039049560059 },\n  { lat: 23.53211799245021, lng: 85.41665577877137 },\n  { lat: 23.50468197497965, lng: 85.40805721174617 },\n  { lat: 23.47869339587426, lng: 85.40102045376567 },\n  { lat: 23.4695667911735, lng: 85.39634968868492 },\n  { lat: 23.46251097906705, lng: 85.39378248647783 },\n  { lat: 23.45197646014737, lng: 85.39434075316433 },\n  { lat: 23.44615476366905, lng: 85.39818875510299 },\n  { lat: 23.4354052413733, lng: 85.40517046795574 },\n  { lat: 23.42628559398269, lng: 85.41807317933501 },\n  { lat: 23.42440734872867, lng: 85.43092898653501 },\n  { lat: 23.42139339896021, lng: 85.4563085377844 },\n  { lat: 23.42005531051907, lng: 85.4784128950273 },\n  { lat: 23.43253856422179, lng: 85.49787688362025 },\n  { lat: 23.44665363489468, lng: 85.51472256608024 },\n  { lat: 23.46303406658998, lng: 85.52518901550418 },\n  { lat: 23.48651637383889, lng: 85.52744915818089 },\n  { lat: 23.50928990843974, lng: 85.54965571004868 },\n  { lat: 23.53009231841875, lng: 85.55564661878509 },\n  { lat: 23.54296029942101, lng: 85.52636109716603 }\n];\n\n// Coordinates for the cluster1 polygon\nconst additionalPolygonCoords = [\n  { lat: 23.44370858861537, lng: 85.45941114742203 },\n  { lat: 23.44303419987083, lng: 85.45903457300538 },\n  { lat: 23.44217323053496, lng: 85.4585371554558 },\n  { lat: 23.44124794491384, lng: 85.45878646996067 },\n  { lat: 23.4406901023684, lng: 85.45948430201854 },\n  { lat: 23.4400094636269, lng: 85.46059017562224 },\n  { lat: 23.44068373946408, lng: 85.46123645912141 },\n  { lat: 23.44023319796077, lng: 85.46201010383501 },\n  { lat: 23.44058929362508, lng: 85.46233577640538 },\n  { lat: 23.44113985237272, lng: 85.46262567483447 },\n  { lat: 23.44153787512705, lng: 85.46278641482267 },\n  { lat: 23.44188823552388, lng: 85.46287309196805 },\n  { lat: 23.44228284092832, lng: 85.46192763517753 },\n  { lat: 23.44243313332113, lng: 85.46207596055827 },\n  { lat: 23.44267571056698, lng: 85.46225074426221 },\n  { lat: 23.44303647990829, lng: 85.4624353308749 },\n  { lat: 23.44330644465878, lng: 85.46199995147552 },\n  { lat: 23.44355228065071, lng: 85.46151130917544 },\n  { lat: 23.44369753632571, lng: 85.46118627889163 },\n  { lat: 23.44387371176819, lng: 85.46081278806199 },\n  { lat: 23.44403553046925, lng: 85.46055396869011 },\n  { lat: 23.44422953782564, lng: 85.46024706830457 },\n  { lat: 23.44443185965268, lng: 85.45985136155826 },\n  { lat: 23.44370858861537, lng: 85.45941114742203 }\n\n];\n\n// Coordinates for the feild1 polygon (the one you requested)\nconst newPolygonCoords2 = [\n  {lat: 23.4436008862071, lng: 85.45940798415077},\n  {lat: 23.44297265335412, lng: 85.45906466644934},\n  {lat: 23.4425794607305, lng: 85.45950910429806},\n  {lat: 23.44327849476294, lng: 85.46000229880522},\n  {lat: 23.4436008862071, lng: 85.45940798415077}\n  \n    // 23°26'36\"N 85°27'33\"E\n];\n// feild 2\nconst newPolygonCoords3 = [\n  {lat: 23.44224372797374, lng: 85.45857014827321},\n  {lat: 23.44199341526183, lng: 85.45927513999196},\n  {lat: 23.44255798637839, lng: 85.45947816865956},\n  {lat: 23.44295116650949, lng: 85.45904142104465},\n  {lat: 23.44224372797374, lng: 85.45857014827321}\n  \n\n];\n//feild 3\nconst newPolygonCoords4 = [\n  {lat: 23.44220806446697, lng: 85.45853920757287},\n  {lat: 23.44128844091964, lng: 85.4587662063504},\n  {lat: 23.44197910766288, lng: 85.45927508730929},\n  {lat: 23.44220806446697, lng: 85.45853920757287}\n  \n   // 23°26'35\"N 85°27'35\"E\n];\n//feild 4\nconst newPolygonCoords5 = [\n  {lat: 23.44130259347494, lng: 85.45880484902628},\n  {lat: 23.44074352785897, lng: 85.45950184646263},\n  {lat: 23.44157185994861, lng: 85.46000759255182},\n  {lat: 23.44199342662392, lng: 85.4593219221982},\n  {lat: 23.44130259347494, lng: 85.45880484902628}\n  \n   // 23°26'35\"N 85°27'35\"E\n];\n// feild 5\nconst newPolygonCoords6 = [\n  {lat: 23.4425365989235, lng: 85.45954016868856},\n  {lat: 23.44226493173527, lng: 85.46038856124501},\n  {lat: 23.44282582536205, lng: 85.46077034418563},\n  {lat: 23.44323548389995, lng: 85.46004136732078},\n  {lat: 23.4425365989235, lng: 85.45954016868856}\n  \n   // 23°26'35\"N 85°27'35\"E\n];\n\n//feild 6\nconst newPolygonCoords7 = [\n  {lat: 23.44164340968677, lng: 85.46001548700602},\n{lat: 23.44221485280544, lng: 85.46039643157521},\n{lat: 23.44247939885103, lng: 85.45951705162834},\n{lat: 23.44202202842522, lng: 85.45931420444403},\n{lat: 23.44164340968677, lng: 85.46001548700602}\n\n];\n\n//feild 7\nconst newPolygonCoords8 = [\n  {lat: 23.4425302723415, lng: 85.46062193695269},\n{lat: 23.44215046731529, lng: 85.46040426892642},\n{lat: 23.44153794629511, lng: 85.46158586441727},\n{lat: 23.44229329904419, lng: 85.46185323006979},\n{lat: 23.44279692691854, lng: 85.46084093753544},\n{lat: 23.4425302723415, lng: 85.46062193695269}\n\n  \n\n];\n//feild 8\nconst newPolygonCoords9 = [\n  {lat: 23.44163614668305, lng: 85.46006208262054},\n{lat: 23.44076430399821, lng: 85.46125567561616},\n{lat: 23.44148765332247, lng: 85.46160148822878},\n{lat: 23.44212901738941, lng: 85.4603887062527},\n{lat: 23.44163614668305, lng: 85.46006208262054}\n\n\n];\n\n//feild 9\nconst newPolygonCoords10 = [\n  {lat: 23.44006732479024, lng: 85.46056792142473},\n  {lat: 23.44070704142506, lng: 85.46124780908413},\n  {lat: 23.44157174847316, lng: 85.46004641981965},\n  {lat: 23.44071482945659, lng: 85.45953288905635},\n  {lat: 23.44006732479024, lng: 85.46056792142473}\n  \n];\n//feild 10\nconst newPolygonCoords11 = [\n  {lat: 23.44322155213431, lng: 85.46016644061832},\n  {lat: 23.44393489019958, lng: 85.46060549366607},\n  {lat: 23.44442985919503, lng: 85.4598451327635},\n  {lat: 23.44362269674928, lng: 85.45945468536844},\n  {lat: 23.44322155213431, lng: 85.46016644061832}\n  \n  \n\n];\n//feild 11\nconst newPolygonCoords12 = [\n  { lat: 23.44284021450202, lng: 85.46082524718942 },\n  { lat: 23.44353455204063, lng: 85.46149382279995 },\n  { lat: 23.44392074850944, lng: 85.46065254797111 },\n  { lat: 23.44318562069886, lng: 85.46018209024251 },\n  { lat: 23.44284021450202, lng: 85.46082524718942 }\n  \n\n];\n//feild 12\nconst newPolygonCoords13 = [\n  { lat: 23.44230049759334, lng: 85.46188463662334 },\n  { lat: 23.44299348873417, lng: 85.46243049875447 },\n  { lat: 23.44350579860391, lng: 85.46153322261526 },\n  { lat: 23.44283295510958, lng: 85.46088014683315 },\n  { lat: 23.44230049759334, lng: 85.46188463662334 }\n\n];\n\n//feild 13\nconst newPolygonCoords14 = [\n  { lat: 23.44151630725344, lng: 85.4616486491613 },\n  { lat: 23.44114830435699, lng: 85.46256768690932 },\n  { lat: 23.44186698702624, lng: 85.46285634439684 },\n  { lat: 23.44226449554491, lng: 85.46190034434183 },\n  { lat: 23.44151630725344, lng: 85.4616486491613 }\n\n];\n\n//feild 14\nconst newPolygonCoords15 = [\n  { lat: 23.44022116356310, lng: 85.4620000001850 },\n  { lat: 23.44109799157107, lng: 85.46259109856135 },\n  { lat: 23.44146602749289, lng: 85.46165641355982 },\n  { lat: 23.44074284710178, lng: 85.46130259692643 },\n  // { lat: 23.44022197356311, lng: 85.46202068704856 }\n\n];\n\nconst sampleCropInfo = {\n  name: 'Raghav Mishra',\n  crop: 'Tomato',\n  shownDate: '2024-10-15',\n  harvestDate: '2024-12-01',\n  quantity: '200 kg',\n  confScore: '95%',\n \n\n};\nconst sampleCropInfo1 = {\n  name: 'Amit Rai',\n  crop: 'Potato',\n  shownDate: '2024-09-25',\n  harvestDate: '2024-12-01',\n  quantity: '1200 kg',\n  confScore: '90%',\n   // URL to the crop photo\n\n};\nconst sampleCropInfo2 = {\n  name: 'Rohit Mondal',\n  crop: 'Rice',\n  shownDate: '2024-09-25',\n  harvestDate: '2024-12-01',\n  quantity: '1200 kg',\n  confScore: '90%',\n   // URL to the crop photo\n\n};\nconst calculateCentroid = (coords) => {\n  let latSum = 0;\n  let lngSum = 0;\n  const total = coords.length;\n\n  coords.forEach(coord => {\n    latSum += coord.lat;\n    lngSum += coord.lng;\n  });\n\n  return {\n    lat: latSum / total,\n    lng: lngSum / total,\n  };\n};\n\n\n\n\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n  });\n // const [selectedMarker, setSelectedMarker] = useState(null);\n  const [markerPosition, setMarkerPosition] = useState(null); // Define marker position state\n  const [markerPosition1, setMarkerPosition1] = useState(null);\n \n  const [isHovered, setIsHovered] = useState(false);\n  const [isHoveredPolygon12, setIsHoveredPolygon12] = useState(false);\nconst [cropInfo12, setCropInfo12] = useState({});\nconst [isHoveredPolygon11, setIsHoveredPolygon11] = useState(false);\nconst [cropInfo11, setCropInfo11] = useState({});\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [cropInfo, setCropInfo] = useState({}); // State to hold crop information\n\n  const [selected, setSelected] = useState(null); \n  const mapRef = useRef(null);\n\n  const onLoad = useCallback((mapInstance) => {\n    console.log(\"Map loaded:\", mapInstance);\n    mapRef.current = mapInstance;\n  }, []);\n\n  const handlePolygonClick = useCallback((polygonCoords) => {\n    const map = mapRef.current;\n    if (!map) {\n      console.log(\"Map instance not available.\");\n      return;\n    }\n\n    console.log(\"Polygon clicked, zooming in...\");\n    \n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n\n    map.fitBounds(bounds);\n  }, []);\n\n  return isLoaded ? (\n    <div style={{ position: 'relative' }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={zoomLevel}\n        onLoad={onLoad}\n      >\n       {/* Jharkhand Polygon */}\n<PolygonF\n  paths={jharkhandCoords}\n  options={{\n    fillColor: 'transparent',  // Light Pink\n    strokeColor: '#ffc000',  // Crimson\n    fillOpacity: 0.35,\n  }}\n \n   // Set to false when not hovering\n  onClick={() => {\n    console.log(\"Jharkhand polygon clicked\");\n    handlePolygonClick(jharkhandCoords, 21);\n  }}\n  \n/>\n\n\n{/* Ranchi Polygon */}\n<PolygonF\n  paths={ranchiCoords}\n  options={{\n    fillColor: 'transparent',  // Light Sky Blue\n    strokeColor: '#ffc000',  // Steel Blue\n    fillOpacity: 0.32,\n  }}\n  onClick={() => {\n    console.log(\"Ranchi polygon clicked\");\n    handlePolygonClick(ranchiCoords, 1);\n  }}\n/>\n\n{/* Ormanjhi */}\n<PolygonF\n  paths={newPolygonCoords}\n  options={{\n    fillColor: 'transparent',  // Pale Green\n    strokeColor: '#ffc000',  // Dark Green\n    fillOpacity: 0.1977,\n  }}\n  \n\nonClick={() => {\n    console.log(\"Additional polygon clicked\");\n    handlePolygonClick(newPolygonCoords); // Zoom in on polygon click\n    setMarkerPosition(calculateCentroid(newPolygonCoords)); // Set marker at the centroid\n    //setMarkerPosition1(calculateCentroid(newPolygonCoords));\n  }}\n/>\n\n{/* Marker for Office */}\n{markerPosition && (\n  <Marker\n    position={position}\n    onMouseOver={() => setSelected(position)} // Show info on marker hover\n    onMouseOut={() => setSelected(null)} // Hide info when not hovering\n    label={selected === position ? {\n      text: 'Ormanjhi Producer Farmers Producers Co. Ltd.',\n      color: 'purple',\n      fontSize: '10px',\n      fontWeight: 'bold',\n    } : undefined} // Show text on hover\n    \n  />\n)}\n{/* Marker for Office */}\n{markerPosition && (\n  <MarkerF\n    position={position1}\n    onMouseOver={() => setSelected(position)} // Show info on marker hover\n    onMouseOut={() => setSelected(null)} // Hide info when not hovering\n    label={selected === position ? {\n      text: 'Ormanjhi Producer Farmers Producers Co. Ltd.',\n      color: 'purple',\n      fontSize: '10px',\n      fontWeight: 'bold',\n    } : undefined} // Show text on hover\n    \n  />\n)}\n\n{/* Marker for Office\n  <MarkerF\n        position={calculateCentroid(newPolygonCoords2)}\n        icon={{\n          url: cart,\n          scaledSize: new window.google.maps.Size(30, 30), // Adjust size as needed\n        }}\n        label={{\n          text: label, // e.g., \"OR-001 1.5 A\"\n          color: \"black\",\n          fontSize: \"12px\",\n          fontWeight: \"bold\",\n        }}\n      />  */}\n\n\n\n<PolygonF\n  paths={additionalPolygonCoords}\n  options={{\n    fillColor: 'Transparent',  // Gold\n    strokeColor: 'transparent',  // Goldenrod\n    fillOpacity: 10, // Adjusted to make the polygon more visible\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"Additional polygon clicked\");\n    handlePolygonClick(additionalPolygonCoords); // Zoom in on polygon click\n    setMarkerPosition(calculateCentroid(additionalPolygonCoords)); // Set marker at the centroid\n  }}\n/>\n\n\n\n<PolygonF\n        paths={newPolygonCoords2}\n        options={{\n          fillColor: '#BC3F4A',  // Lavender\n          strokeColor: '#ffc000',  // Medium Purple\n          fillOpacity: 0.5,\n          strokeWeight: 1,\n        }}\n        onClick={() => {\n          console.log(\"New Polygon 2 clicked\");\n          handlePolygonClick(newPolygonCoords2, 9);\n        }}\n      />\n      {/* <MarkerF\n        position={calculateCentroid(newPolygonCoords2)}\n        icon={{\n          url: cart,\n          scaledSize: new window.google.maps.Size(30, 30), // Adjust size as needed\n        }}\n        label={{\n          text: label, // e.g., \"OR-001 1.5 A\"\n          color: \"black\",\n          fontSize: \"12px\",\n          fontWeight: \"bold\",\n        }}\n      /> \n{/* Additional polygons with unique colors */}\n<PolygonF\n  paths={newPolygonCoords3}\n  options={{\n    fillColor: '#BC3F4A',  // Lemon Chiffon\n    strokeColor: '##ffc000',  // Gold\n    fillOpacity: 0.5,\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 3 clicked\");\n    handlePolygonClick(newPolygonCoords3);\n  }}\n/>\n<PolygonF\n  paths={newPolygonCoords4}\n  options={{\n    fillColor: '#958aae',  // Pale Turquoise\n    strokeColor: '#ffc000',  // Turquoise\n    fillOpacity: 0.5,\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 4 clicked\");\n    handlePolygonClick(newPolygonCoords4);\n  }}\n/>\n<PolygonF\n  paths={newPolygonCoords5}\n  options={{\n    fillColor: '#b5aa60',  // Moccasin\n    strokeColor: '#ffc000',  // Chocolate\n    fillOpacity: .5,\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 5 clicked\");\n    handlePolygonClick(newPolygonCoords5);\n  }}\n/>\n<PolygonF\n  paths={newPolygonCoords6}\n  options={{\n    fillColor: '#958aae',  // Lavender Blush\n    strokeColor: '#ffc000',  // Pale Violet Red\n    fillOpacity: .5,\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 6 clicked\");\n    handlePolygonClick(newPolygonCoords6);\n  }}\n/>\n<PolygonF\n  paths={newPolygonCoords7}\n  options={{\n    fillColor: '#BC3F4A',  // Navajo White\n    strokeColor: '#ffc000',  // Peru\n    fillOpacity: 0.5,\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 7 clicked\");\n    handlePolygonClick(newPolygonCoords7);\n  }}\n/>\n<PolygonF\n  paths={newPolygonCoords8}\n  options={{\n    fillColor: '#b5aa60',  // Light Cyan\n    strokeColor: '#ffc000',  // Light Sea Green\n    fillOpacity: 0.5,\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 8 clicked\");\n    handlePolygonClick(newPolygonCoords8);\n  }}\n/>\n\n<PolygonF\n  paths={newPolygonCoords9}\n  options={{\n    fillColor: '#b5aa60',  // Light Goldenrod Yellow\n    strokeColor: '#ffc000',  // Dark Khaki\n    fillOpacity: 0.5,\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 9 clicked\");\n    handlePolygonClick(newPolygonCoords9);\n  }}\n/>\n<PolygonF\n  paths={newPolygonCoords10}\n  options={{\n    fillColor: '#b5aa60',  // Light Blue\n    strokeColor: '#ffc000',  // Steel Blue\n    fillOpacity: 0.5,\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 10 clicked\");\n    handlePolygonClick(newPolygonCoords10);\n  }}\n/>\n<PolygonF\n  paths={newPolygonCoords11}\n  options={{\n    fillColor: '#b5aa60',  // Powder Blue\n    strokeColor: '#ffc000',  // Steel Blue\n    fillOpacity: 0.5,\n    strokeWeight: 1,\n  }}\n  \n  onMouseOver={() => {\n    setIsHoveredPolygon11(true);\n    setCropInfo11(sampleCropInfo2); // Set crop info for polygon 12 on hover\n  }}\n  onMouseOut={() => {\n    setIsHoveredPolygon11(false);\n    setCropInfo11({}); // Clear crop info for polygon 12 on mouse out\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 11 clicked\");\n    handlePolygonClick(newPolygonCoords11);\n  }}\n/>\n\n{isHoveredPolygon11 && (\n  <div\n    style={{\n      position: 'absolute',\n      top: '70%',\n      left: '75%',\n      transform: 'translate(-50%, -100%)',\n      padding: '10px',\n      backgroundColor: 'white',\n      borderRadius: '13%',\n      background: 'smoke white',\n      border: '1px solid black',\n      boxShadow: '2px 2px 5px rgba(0, 0, 0, 0.3)',\n      zIndex: 1000,\n    }}\n  >\n    <div style={{ textAlign: 'center' }}>\n      <img\n        src={cart2} // Change this to the correct image for polygon 12\n        alt=\"Cart Icon\"\n        style={{ width: '50px', height: '50px', marginRight: '10px', borderRadius: '50%',marginLeft:'50px',marginRight:'30px' }}\n      />\n       <img\n        src={code2} // Change this to the correct image for polygon 12\n        alt=\"Cart Icon\"\n        style={{ width: '50px', height: '50px', marginRight: '10px', borderRadius: '10%'}}\n      />\n      <hr/>\n    </div>\n    <h5>Name: {cropInfo11.name}</h5>\n    <h5>Crop: {cropInfo11.crop}</h5>\n    <h5>Shown Date: {cropInfo11.shownDate}</h5>\n    <h5>Harvest Date: {cropInfo11.harvestDate}</h5>\n    <h5>Quantity: {cropInfo11.quantity}</h5>\n    <h5>Conf. Score: {cropInfo11.confScore}</h5>\n  </div>\n)}\n\n<PolygonF\n  paths={newPolygonCoords12}\n  options={{\n    fillColor: '#88a561',  // Khaki\n    strokeColor: '#ffc000',  // Dark Goldenrod\n    fillOpacity: 0.5,\n    strokeWeight: 1,\n  }}\n  onMouseOver={() => {\n    setIsHoveredPolygon12(true);\n    setCropInfo12(sampleCropInfo1); // Set crop info for polygon 12 on hover\n  }}\n  onMouseOut={() => {\n    setIsHoveredPolygon12(false);\n    setCropInfo12({}); // Clear crop info for polygon 12 on mouse out\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 12 clicked\");\n    handlePolygonClick(newPolygonCoords12);\n  }}\n/>\n\n{isHoveredPolygon12 && (\n  <div\n    style={{\n      position: 'absolute',\n      top: '80%',\n      left: '75%',\n      transform: 'translate(-50%, -100%)',\n      padding: '10px',\n      backgroundColor: 'white',\n      borderRadius: '13%',\n      background: 'smoke white',\n      border: '1px solid black',\n      boxShadow: '2px 2px 5px rgba(0, 0, 0, 0.3)',\n      zIndex: 1000,\n    }}\n  >\n    <div style={{ textAlign: 'center' }}>\n      <img\n        src={cart1} // Change this to the correct image for polygon 12\n        alt=\"Cart Icon\"\n        style={{ width: '50px', height: '50px', marginRight: '10px', borderRadius: '50%',marginLeft:'50px',marginRight:'30px' }}\n      />\n       <img\n        src={code2} // Change this to the correct image for polygon 12\n        alt=\"Cart Icon\"\n        style={{ width: '50px', height: '50px', marginRight: '10px', borderRadius: '10%'  }}\n      />\n      <hr/>\n    </div>\n    <h5>Name: {cropInfo12.name}</h5>\n    <h5>Crop: {cropInfo12.crop}</h5>\n    <h5>Shown Date: {cropInfo12.shownDate}</h5>\n    <h5>Harvest Date: {cropInfo12.harvestDate}</h5>\n    <h5>Quantity: {cropInfo12.quantity}</h5>\n    <h5>Conf. Score: {cropInfo12.confScore}</h5>\n  </div>\n)}\n\n<PolygonF\n  paths={newPolygonCoords13}\n  options={{\n    fillColor: '#88a561',  // Light Pink\n    strokeColor: 'Golden',  // Hot Pink\n    fillOpacity: 0.5,\n    strokeWeight: 1,\n  }}\n  onMouseOver={() => {\n    setIsHovered(true);\n     // Set position to centroid\n    setCropInfo(sampleCropInfo); // Set crop info on hover\n  }}// Set to true on hover\n  onMouseOut={() => {\n    setIsHovered(false);\n    setCropInfo({}); // Clear crop info on mouse out\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 13 clicked\");\n    handlePolygonClick(newPolygonCoords13);\n  }}\n\n/>\n{isHovered && (\n        <div\n          style={{\n            position: 'absolute',\n            top: '70%', // Adjust based on your map's coordinates\n            left: '75%',\n            transform: 'translate(-50%, -100%)', // Center the card above the polygon\n            padding: '10px',\n            backgroundColor: 'white',\n            borderRadius: '13%' ,\n            background:'smoke white',\n            border: '1px solid black',\n            boxShadow: '2px 2px 5px rgba(0, 0, 0, 0.3)',\n            zIndex: 1000, // Ensure it's above other elements\n          }}\n        >\n          \n          <div className='first' style={{ textAlign: 'center' }}>\n      <img\n        src={cart}\n        alt=\"Cart Icon\"\n        style={{ width: '50px', height: '50px', marginRight: '10px', borderRadius: '50%',marginLeft:'50px',marginRight:'30px' }} // Adjust size as needed\n      />\n       <img\n        src={code2} // Change this to the correct image for polygon 12\n        alt=\"Cart Icon\"\n        style={{ width: '50px', height: '50px', marginRight: '10px', borderRadius: '10%',  }}\n      />\n    </div>\n    <hr/>\n   \n         <h5>Name: {cropInfo.name} </h5>\n         <h5>Crop: {cropInfo.crop} </h5>\n         <h5>Shown Date:{cropInfo.shownDate} </h5>\n         <h5>Harvest Date:{cropInfo.harvestDate} </h5>\n         <h5>Quantity: {cropInfo.quantity} </h5>\n         <h5>Conf. Score : {cropInfo.confScore}</h5>\n        </div>\n      )}\n   \n\n<PolygonF\n  paths={newPolygonCoords14}\n  options={{\n    fillColor: '#958aae',  // Light Blue\n    strokeColor: '#ffc000',  // Steel Blue\n    fillOpacity: 0.5,\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 14 clicked\");\n    handlePolygonClick(newPolygonCoords14);\n  }}\n/>\n<PolygonF\n  paths={newPolygonCoords15}\n  options={{\n    fillColor: '#958aae',  // Light Blue\n    strokeColor: '#ffc000',  // Steel Blue\n    fillOpacity: 0.5,\n    label:'This is the feiled1',\n    strokeWeight: 1,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 15 clicked\");\n    handlePolygonClick(newPolygonCoords15);\n  }}\n/>\n\n      </GoogleMap>\n    </div>\n  ) : <></>;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}