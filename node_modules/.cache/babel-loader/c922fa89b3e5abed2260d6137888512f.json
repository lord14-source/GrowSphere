{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useRef, useState } from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,\n  // Latitude of Jharkhand\n  lng: 85.2799 // Longitude of Jharkhand\n};\nconst zoomLevel = 6; // Initial zoom level for a broader view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  // (Coordinates for Jharkhand polygon)\n];\n\n// Coordinates for the Ranchi polygon\nconst ranchiCoords = [\n  // (Coordinates for Ranchi polygon)\n];\n\n// Coordinates for Casa Blanca in Ormanjhi\nconst casaBlancaCoords = {\n  lat: 23.442592425229485,\n  lng: 85.4608527\n};\n\n// Coordinates for Ranchi villages\nconst villageCoords = [{\n  lat: 23.478,\n  lng: 85.495,\n  name: 'Village A'\n}, {\n  lat: 23.480,\n  lng: 85.499,\n  name: 'Village B'\n}, {\n  lat: 23.485,\n  lng: 85.490,\n  name: 'Village C'\n}];\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\" // Replace with your Google Maps API key\n  });\n  const mapRef = useRef(null);\n  const [villagesVisible, setVillagesVisible] = useState(false); // State to toggle village markers\n\n  const onLoad = useCallback(mapInstance => {\n    console.log(\"Map loaded:\", mapInstance);\n    mapRef.current = mapInstance;\n  }, []);\n  const handlePolygonClick = useCallback((polygonCoords, zoomToVillages) => {\n    const map = mapRef.current;\n    if (!map) {\n      console.log(\"Map instance not available.\");\n      return;\n    }\n    console.log(\"Polygon clicked, zooming in...\");\n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n    map.fitBounds(bounds);\n    const listener = window.google.maps.event.addListener(map, \"idle\", () => {\n      if (map.getZoom() > 10) {\n        map.setZoom(10);\n      }\n      if (zoomToVillages) {\n        setVillagesVisible(true); // Show village markers when zooming into Ranchi\n      }\n      window.google.maps.event.removeListener(listener);\n    });\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    onLoad: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PolygonF, {\n    paths: jharkhandCoords,\n    options: {\n      fillColor: '#00FF00',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"Jharkhand polygon clicked\");\n      handlePolygonClick(jharkhandCoords, false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: ranchiCoords,\n    options: {\n      fillColor: '#FF5733',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"Ranchi polygon clicked\");\n      handlePolygonClick(ranchiCoords, true); // Zoom into Ranchi and show villages\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MarkerF, {\n    position: casaBlancaCoords,\n    title: \"Casa Blanca Ormanjhi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), villagesVisible && villageCoords.map((village, index) => /*#__PURE__*/React.createElement(MarkerF, {\n    key: index,\n    position: {\n      lat: village.lat,\n      lng: village.lng\n    },\n    title: village.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","MarkerF","PolygonF","useJsApiLoader","React","useCallback","useRef","useState","containerStyle","width","height","center","lat","lng","zoomLevel","jharkhandCoords","ranchiCoords","casaBlancaCoords","villageCoords","name","MapComponent","isLoaded","id","googleMapsApiKey","mapRef","villagesVisible","setVillagesVisible","onLoad","mapInstance","console","log","current","handlePolygonClick","polygonCoords","zoomToVillages","map","bounds","window","google","maps","LatLngBounds","forEach","coord","extend","fitBounds","listener","event","addListener","getZoom","setZoom","removeListener","createElement","style","position","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","paths","options","fillColor","strokeColor","fillOpacity","onClick","title","village","index","key","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useRef, useState } from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,  // Latitude of Jharkhand\n  lng: 85.2799,  // Longitude of Jharkhand\n};\n\nconst zoomLevel = 6;  // Initial zoom level for a broader view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  // (Coordinates for Jharkhand polygon)\n];\n\n// Coordinates for the Ranchi polygon\nconst ranchiCoords = [\n  // (Coordinates for Ranchi polygon)\n];\n\n// Coordinates for Casa Blanca in Ormanjhi\nconst casaBlancaCoords = { lat: 23.442592425229485, lng: 85.4608527 };\n\n// Coordinates for Ranchi villages\nconst villageCoords = [\n  { lat: 23.478, lng: 85.495, name: 'Village A' },\n  { lat: 23.480, lng: 85.499, name: 'Village B' },\n  { lat: 23.485, lng: 85.490, name: 'Village C' },\n];\n\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\", // Replace with your Google Maps API key\n  });\n\n  const mapRef = useRef(null);\n  const [villagesVisible, setVillagesVisible] = useState(false); // State to toggle village markers\n\n  const onLoad = useCallback((mapInstance) => {\n    console.log(\"Map loaded:\", mapInstance);\n    mapRef.current = mapInstance;\n  }, []);\n\n  const handlePolygonClick = useCallback((polygonCoords, zoomToVillages) => {\n    const map = mapRef.current;\n    if (!map) {\n      console.log(\"Map instance not available.\");\n      return;\n    }\n\n    console.log(\"Polygon clicked, zooming in...\");\n    \n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n    map.fitBounds(bounds);\n\n    const listener = window.google.maps.event.addListener(map, \"idle\", () => {\n      if (map.getZoom() > 10) {\n        map.setZoom(10);\n      }\n      if (zoomToVillages) {\n        setVillagesVisible(true); // Show village markers when zooming into Ranchi\n      }\n      window.google.maps.event.removeListener(listener);\n    });\n  }, []);\n\n  return isLoaded ? (\n    <div style={{ position: 'relative' }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={zoomLevel}\n        onLoad={onLoad}\n      >\n        {/* Jharkhand Polygon */}\n        <PolygonF\n          paths={jharkhandCoords}\n          options={{\n            fillColor: '#00FF00',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"Jharkhand polygon clicked\");\n            handlePolygonClick(jharkhandCoords, false);\n          }}\n        />\n\n        {/* Ranchi Polygon */}\n        <PolygonF\n          paths={ranchiCoords}\n          options={{\n            fillColor: '#FF5733', \n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"Ranchi polygon clicked\");\n            handlePolygonClick(ranchiCoords, true); // Zoom into Ranchi and show villages\n          }}\n        />\n\n        {/* Casa Blanca Marker */}\n        <MarkerF\n          position={casaBlancaCoords}\n          title=\"Casa Blanca Ormanjhi\"\n        />\n\n        {/* Village Markers (shown after zooming into Ranchi) */}\n        {villagesVisible && villageCoords.map((village, index) => (\n          <MarkerF\n            key={index}\n            position={{ lat: village.lat, lng: village.lng }}\n            title={village.name}\n          />\n        ))}\n      </GoogleMap>\n    </div>\n  ) : <></>;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}