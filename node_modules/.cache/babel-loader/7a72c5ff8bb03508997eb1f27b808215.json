{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, InfoWindowF, MarkerF, useJsApiLoader } from '@react-google-maps/api';\nimport React from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\n// Coordinates for Ranchi, Jharkhand, India\nconst center = {\n  lat: 23.3441,\n  lng: 85.3096\n};\n\n// Another location nearby (can be adjusted)\nconst center2 = {\n  lat: 23.3441,\n  lng: 85.3099\n};\nfunction MapComponent() {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n  const [map, setMap] = React.useState(null);\n  const [selectedMarker, setSelectedMarker] = React.useState(null); // State to manage the selected marker\n\n  const onLoad = React.useCallback(map => {\n    map.setZoom(10);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(map => {\n    setMap(null);\n  }, []);\n  const handleMarkerClick = marker => {\n    setSelectedMarker(marker);\n  };\n  const handleInfoWindowClose = () => {\n    setSelectedMarker(null);\n  };\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MarkerF, {\n    key: 1,\n    position: center,\n    onClick: () => handleMarkerClick('Location 1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MarkerF, {\n    key: 2,\n    position: center2,\n    onClick: () => handleMarkerClick('Location 2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), selectedMarker === 'Location 1' && /*#__PURE__*/React.createElement(InfoWindowF, {\n    position: center,\n    onCloseClick: handleInfoWindowClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"This is Location 1\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Description or additional information about Location 1.\"))), selectedMarker === 'Location 2' && /*#__PURE__*/React.createElement(InfoWindowF, {\n    position: center2,\n    onCloseClick: handleInfoWindowClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"This is Location 2\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Description or additional information about Location 2.\"))), /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","InfoWindowF","MarkerF","useJsApiLoader","React","containerStyle","width","height","center","lat","lng","center2","MapComponent","isLoaded","id","googleMapsApiKey","map","setMap","useState","selectedMarker","setSelectedMarker","onLoad","useCallback","setZoom","onUnmount","handleMarkerClick","marker","handleInfoWindowClose","createElement","mapContainerStyle","zoom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","position","onClick","onCloseClick","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, InfoWindowF, MarkerF, useJsApiLoader } from '@react-google-maps/api';\nimport React from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\n// Coordinates for Ranchi, Jharkhand, India\nconst center = {\n  lat: 23.3441,\n  lng: 85.3096\n};\n\n// Another location nearby (can be adjusted)\nconst center2 = {\n  lat: 23.3441,\n  lng: 85.3099\n};\n\nfunction MapComponent() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n\n  const [map, setMap] = React.useState(null);\n  const [selectedMarker, setSelectedMarker] = React.useState(null); // State to manage the selected marker\n\n  const onLoad = React.useCallback((map) => {\n    map.setZoom(10);\n    setMap(map);\n  }, []);\n  \n  const onUnmount = React.useCallback((map) => {\n    setMap(null);\n  }, []);\n\n  const handleMarkerClick = (marker) => {\n    setSelectedMarker(marker);\n  };\n\n  const handleInfoWindowClose = () => {\n    setSelectedMarker(null);\n  };\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={10}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      {/* Marker at the first location */}\n      <MarkerF\n        key={1}\n        position={center}\n        onClick={() => handleMarkerClick('Location 1')}\n      />\n      {/* Marker at the second location */}\n      <MarkerF\n        key={2}\n        position={center2}\n        onClick={() => handleMarkerClick('Location 2')}\n      />\n      \n      {/* InfoWindow for the first marker */}\n      {selectedMarker === 'Location 1' && (\n        <InfoWindowF\n          position={center}\n          onCloseClick={handleInfoWindowClose}\n        >\n          <div>\n            <h4>This is Location 1</h4>\n            <p>Description or additional information about Location 1.</p>\n          </div>\n        </InfoWindowF>\n      )}\n      \n      {/* InfoWindow for the second marker */}\n      {selectedMarker === 'Location 2' && (\n        <InfoWindowF\n          position={center2}\n          onCloseClick={handleInfoWindowClose}\n        >\n          <div>\n            <h4>This is Location 2</h4>\n            <p>Description or additional information about Location 2.</p>\n          </div>\n        </InfoWindowF>\n      )}\n      \n      { /* You can add more child components, such as more markers, info windows, etc. */ }\n      <></>\n    </GoogleMap>\n  ) : <></>;\n}\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}