{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useState } from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,\n  // Latitude of Jharkhand\n  lng: 85.2799 // Longitude of Jharkhand\n};\nconst zoomLevel = 6; // Adjusted zoom level for a better view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [{\n  lat: 24.4366,\n  lng: 84.2201\n},\n// Northern border\n{\n  lat: 24.1851,\n  lng: 85.0568\n},\n// Slightly south\n{\n  lat: 23.9867,\n  lng: 85.6182\n},\n// Mid-north\n{\n  lat: 23.6255,\n  lng: 86.4194\n},\n// North-east\n{\n  lat: 23.1986,\n  lng: 86.8941\n},\n// Eastern side\n{\n  lat: 22.7767,\n  lng: 86.6826\n},\n// South-east\n{\n  lat: 22.3571,\n  lng: 85.9870\n},\n// Southern border\n{\n  lat: 22.2786,\n  lng: 85.3999\n},\n// South-west\n{\n  lat: 22.7027,\n  lng: 84.8895\n},\n// West\n{\n  lat: 23.1097,\n  lng: 84.6137\n},\n// Mid-west\n{\n  lat: 23.7197,\n  lng: 84.4003\n},\n// North-west\n{\n  lat: 24.0020,\n  lng: 84.4666\n} // Closing the boundary\n];\n\n// Coordinates for the Ranchi polygon\nconst ranchiCoords = [{\n  lat: 23.2470,\n  lng: 85.2632\n},\n// Northern point\n{\n  lat: 23.2436,\n  lng: 85.3134\n},\n// Northeast point\n{\n  lat: 23.2882,\n  lng: 85.3306\n},\n// East point\n{\n  lat: 23.3025,\n  lng: 85.3660\n},\n// Southeast point\n{\n  lat: 23.3294,\n  lng: 85.3848\n},\n// Southern point\n{\n  lat: 23.3561,\n  lng: 85.3434\n},\n// Southwest point\n{\n  lat: 23.3081,\n  lng: 85.2940\n},\n// West point\n{\n  lat: 23.2470,\n  lng: 85.2632\n} // Closing the boundary\n];\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\" // Replace with your Google Maps API key\n  });\n  const [map, setMap] = useState(null);\n  const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true); // State for showing/hiding Jharkhand polygon\n  const [isRanchiZoomedIn, setIsRanchiZoomedIn] = useState(false); // Track if Ranchi is zoomed in\n\n  // Save the map instance when loaded\n  const onLoad = useCallback(mapInstance => {\n    setMap(mapInstance);\n  }, []);\n\n  // Zoom in and fit the Jharkhand polygon's bounds when clicked\n  const handleZoomInJharkhand = useCallback(() => {\n    if (!map) return;\n    const bounds = new window.google.maps.LatLngBounds();\n    jharkhandCoords.forEach(coord => bounds.extend(coord));\n    map.fitBounds(bounds);\n\n    // Optional: Set a custom zoom level after fitting bounds\n    const listener = window.google.maps.event.addListener(map, \"idle\", () => {\n      if (map.getZoom() > 10) {\n        map.setZoom(10); // Set desired zoom level\n      }\n      window.google.maps.event.removeListener(listener); // Remove the listener after zooming\n    });\n\n    // Hide Jharkhand polygon on click\n    setShowJharkhandPolygon(false);\n  }, [map]);\n\n  // Zoom in Ranchi when its polygon is clicked\n  const handleZoomInRanchi = useCallback(() => {\n    if (!map) return;\n    const bounds = new window.google.maps.LatLngBounds();\n    ranchiCoords.forEach(coord => bounds.extend(coord));\n    map.fitBounds(bounds);\n\n    // Track that Ranchi is zoomed in\n    setIsRanchiZoomedIn(true);\n  }, [map]);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    onLoad: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, showJharkhandPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: jharkhandCoords,\n    options: {\n      fillColor: '#00FF00',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: handleZoomInJharkhand // Zoom into Jharkhand when clicked\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: ranchiCoords,\n    options: {\n      fillColor: '#FF5733',\n      // Different color for Ranchi\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: handleZoomInRanchi // Zoom into Ranchi when clicked\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","PolygonF","useJsApiLoader","React","useCallback","useState","containerStyle","width","height","center","lat","lng","zoomLevel","jharkhandCoords","ranchiCoords","MapComponent","isLoaded","id","googleMapsApiKey","map","setMap","showJharkhandPolygon","setShowJharkhandPolygon","isRanchiZoomedIn","setIsRanchiZoomedIn","onLoad","mapInstance","handleZoomInJharkhand","bounds","window","google","maps","LatLngBounds","forEach","coord","extend","fitBounds","listener","event","addListener","getZoom","setZoom","removeListener","handleZoomInRanchi","createElement","style","position","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","paths","options","fillColor","strokeColor","fillOpacity","onClick","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useState } from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,  // Latitude of Jharkhand\n  lng: 85.2799,  // Longitude of Jharkhand\n};\n\nconst zoomLevel = 6;  // Adjusted zoom level for a better view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  { lat: 24.4366, lng: 84.2201 },  // Northern border\n  { lat: 24.1851, lng: 85.0568 },  // Slightly south\n  { lat: 23.9867, lng: 85.6182 },  // Mid-north\n  { lat: 23.6255, lng: 86.4194 },  // North-east\n  { lat: 23.1986, lng: 86.8941 },  // Eastern side\n  { lat: 22.7767, lng: 86.6826 },  // South-east\n  { lat: 22.3571, lng: 85.9870 },  // Southern border\n  { lat: 22.2786, lng: 85.3999 },  // South-west\n  { lat: 22.7027, lng: 84.8895 },  // West\n  { lat: 23.1097, lng: 84.6137 },  // Mid-west\n  { lat: 23.7197, lng: 84.4003 },  // North-west\n  { lat: 24.0020, lng: 84.4666 },  // Closing the boundary\n];\n\n// Coordinates for the Ranchi polygon\nconst ranchiCoords = [\n  { lat: 23.2470, lng: 85.2632 }, // Northern point\n  { lat: 23.2436, lng: 85.3134 }, // Northeast point\n  { lat: 23.2882, lng: 85.3306 }, // East point\n  { lat: 23.3025, lng: 85.3660 }, // Southeast point\n  { lat: 23.3294, lng: 85.3848 }, // Southern point\n  { lat: 23.3561, lng: 85.3434 }, // Southwest point\n  { lat: 23.3081, lng: 85.2940 }, // West point\n  { lat: 23.2470, lng: 85.2632 },   // Closing the boundary\n];\n\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\", // Replace with your Google Maps API key\n  });\n\n  const [map, setMap] = useState(null);\n  const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true); // State for showing/hiding Jharkhand polygon\n  const [isRanchiZoomedIn, setIsRanchiZoomedIn] = useState(false); // Track if Ranchi is zoomed in\n  \n  // Save the map instance when loaded\n  const onLoad = useCallback((mapInstance) => {\n    setMap(mapInstance);\n  }, []);\n\n  // Zoom in and fit the Jharkhand polygon's bounds when clicked\n  const handleZoomInJharkhand = useCallback(() => {\n    if (!map) return;\n\n    const bounds = new window.google.maps.LatLngBounds();\n    jharkhandCoords.forEach(coord => bounds.extend(coord));\n    map.fitBounds(bounds);\n\n    // Optional: Set a custom zoom level after fitting bounds\n    const listener = window.google.maps.event.addListener(map, \"idle\", () => {\n      if (map.getZoom() > 10) {\n        map.setZoom(10);  // Set desired zoom level\n      }\n      window.google.maps.event.removeListener(listener); // Remove the listener after zooming\n    });\n    \n    // Hide Jharkhand polygon on click\n    setShowJharkhandPolygon(false);\n  }, [map]);\n\n  // Zoom in Ranchi when its polygon is clicked\n  const handleZoomInRanchi = useCallback(() => {\n    if (!map) return;\n\n    const bounds = new window.google.maps.LatLngBounds();\n    ranchiCoords.forEach(coord => bounds.extend(coord));\n    map.fitBounds(bounds);\n\n    // Track that Ranchi is zoomed in\n    setIsRanchiZoomedIn(true);\n  }, [map]);\n\n  return isLoaded ? (\n    <div style={{ position: 'relative' }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={zoomLevel}\n        onLoad={onLoad}\n      >\n        {/* Jharkhand Polygon (conditionally rendered) */}\n        {showJharkhandPolygon && (\n          <PolygonF\n            paths={jharkhandCoords}\n            options={{\n              fillColor: '#00FF00',\n              strokeColor: '#000000',\n              fillOpacity: 0.5,\n            }}\n            onClick={handleZoomInJharkhand} // Zoom into Jharkhand when clicked\n          />\n        )}\n\n        {/* Ranchi Polygon (always visible) */}\n        <PolygonF\n          paths={ranchiCoords}\n          options={{\n            fillColor: '#FF5733', // Different color for Ranchi\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={handleZoomInRanchi} // Zoom into Ranchi when clicked\n        />\n      </GoogleMap>\n    </div>\n  ) : <></>;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}