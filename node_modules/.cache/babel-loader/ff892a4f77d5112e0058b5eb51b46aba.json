{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\Dashboard.js\";\nimport axios from 'axios'; // For making HTTP requests\nimport React, { useEffect, useState } from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport './Dashboard.css';\nconst Dashboard = () => {\n  // State to hold all Orman data and the selected Orman number\n  const [ormanList, setOrmanList] = useState([]); // List of Orman numbers for the dropdown\n  const [selectedOrman, setSelectedOrman] = useState(''); // Selected Orman from the dropdown\n  const [data, setData] = useState([]); // Data for the selected Orman\n  const [loading, setLoading] = useState(false); // Loading state for data fetch\n\n  // Fetch all Orman numbers for the dropdown when the component mounts\n  useEffect(() => {\n    const fetchOrmanList = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/growSphere/orman'); // API to get all Orman numbers\n        setOrmanList(response.data); // Assuming the API returns an array of Orman objects with { id, name }\n      } catch (error) {\n        console.error('Error fetching Orman list:', error);\n      }\n    };\n    fetchOrmanList();\n  }, []);\n\n  // Handle the dropdown selection and fetch data for the selected Orman\n  const handleSelectChange = async e => {\n    const ormanNumber = e.target.value;\n    setSelectedOrman(ormanNumber);\n    if (ormanNumber) {\n      try {\n        setLoading(true);\n        // Fetch data for the selected Orman number\n        const response = await axios.get(`http://localhost:8080/growSphere/orman/${ormanNumber}`);\n        setData([response.data]); // Assuming the API returns a single Orman object\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching Orman data:', error);\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Select Orman Number:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedOrman,\n    onChange: handleSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"--Select Orman--\"), ormanList.map(orman => /*#__PURE__*/React.createElement(\"option\", {\n    key: orman.id,\n    value: orman.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, orman.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Total Quantity (MT)\"), loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Loading data...\") // Loading indicator\n  : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: data,\n    margin: {\n      top: 20,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"yieldQuantity\",\n    fill: \"#8B4513\",\n    barSize: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })))));\n};\nexport default Dashboard;","map":{"version":3,"names":["axios","React","useEffect","useState","Bar","BarChart","CartesianGrid","Legend","ResponsiveContainer","Tooltip","XAxis","YAxis","Dashboard","ormanList","setOrmanList","selectedOrman","setSelectedOrman","data","setData","loading","setLoading","fetchOrmanList","response","get","error","console","handleSelectChange","e","ormanNumber","target","value","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","orman","key","id","name","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","barSize"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/Dashboard.js"],"sourcesContent":["import axios from 'axios'; // For making HTTP requests\nimport React, { useEffect, useState } from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  // State to hold all Orman data and the selected Orman number\n  const [ormanList, setOrmanList] = useState([]); // List of Orman numbers for the dropdown\n  const [selectedOrman, setSelectedOrman] = useState(''); // Selected Orman from the dropdown\n  const [data, setData] = useState([]); // Data for the selected Orman\n  const [loading, setLoading] = useState(false); // Loading state for data fetch\n\n  // Fetch all Orman numbers for the dropdown when the component mounts\n  useEffect(() => {\n    const fetchOrmanList = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/growSphere/orman'); // API to get all Orman numbers\n        setOrmanList(response.data); // Assuming the API returns an array of Orman objects with { id, name }\n      } catch (error) {\n        console.error('Error fetching Orman list:', error);\n      }\n    };\n\n    fetchOrmanList();\n  }, []);\n\n  // Handle the dropdown selection and fetch data for the selected Orman\n  const handleSelectChange = async (e) => {\n    const ormanNumber = e.target.value;\n    setSelectedOrman(ormanNumber);\n\n    if (ormanNumber) {\n      try {\n        setLoading(true);\n        // Fetch data for the selected Orman number\n        const response = await axios.get(`http://localhost:8080/growSphere/orman/${ormanNumber}`);\n        setData([response.data]); // Assuming the API returns a single Orman object\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching Orman data:', error);\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      {/* Dropdown for selecting Orman number */}\n      <div className=\"search-container\">\n        <label>Select Orman Number:</label>\n        <select value={selectedOrman} onChange={handleSelectChange}>\n          <option value=\"\">--Select Orman--</option>\n          {ormanList.map((orman) => (\n            <option key={orman.id} value={orman.name}>\n              {orman.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Chart section */}\n      <div className=\"chart-container\">\n        <h3>Total Quantity (MT)</h3>\n        {loading ? (\n          <p>Loading data...</p> // Loading indicator\n        ) : (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"yieldQuantity\" fill=\"#8B4513\" barSize={40} />\n            </BarChart>\n          </ResponsiveContainer>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,QAAQ,EACRC,aAAa,EACbC,MAAM,EACNC,mBAAmB,EACnBC,OAAO,EACPC,KAAK,EACLC,KAAK,QACA,UAAU;AACjB,OAAO,iBAAiB;AAExB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMmB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,wCAAwC,CAAC,CAAC,CAAC;QAC5ET,YAAY,CAACQ,QAAQ,CAACL,IAAI,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDH,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,kBAAkB,GAAG,MAAOC,CAAC,IAAK;IACtC,MAAMC,WAAW,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAClCd,gBAAgB,CAACY,WAAW,CAAC;IAE7B,IAAIA,WAAW,EAAE;MACf,IAAI;QACFR,UAAU,CAAC,IAAI,CAAC;QAChB;QACA,MAAME,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,0CAA0CK,WAAW,EAAE,CAAC;QACzFV,OAAO,CAAC,CAACI,QAAQ,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1BG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;EACF,CAAC;EAED,oBACEnB,KAAA,CAAA8B,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAElCrC,KAAA,CAAA8B,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BrC,KAAA,CAAA8B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,sBAA2B,CAAC,eACnCrC,KAAA,CAAA8B,aAAA;IAAQD,KAAK,EAAEf,aAAc;IAACwB,QAAQ,EAAEb,kBAAmB;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzDrC,KAAA,CAAA8B,aAAA;IAAQD,KAAK,EAAC,EAAE;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,kBAAwB,CAAC,EACzCzB,SAAS,CAAC2B,GAAG,CAAEC,KAAK,iBACnBxC,KAAA,CAAA8B,aAAA;IAAQW,GAAG,EAAED,KAAK,CAACE,EAAG;IAACb,KAAK,EAAEW,KAAK,CAACG,IAAK;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtCG,KAAK,CAACG,IACD,CACT,CACK,CACL,CAAC,eAGN3C,KAAA,CAAA8B,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BrC,KAAA,CAAA8B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,qBAAuB,CAAC,EAC3BnB,OAAO,gBACNlB,KAAA,CAAA8B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iBAAkB,CAAC,CAAC;EAAA,eAEvBrC,KAAA,CAAA8B,aAAA,CAACvB,mBAAmB;IAACqC,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5CrC,KAAA,CAAA8B,aAAA,CAAC1B,QAAQ;IAACY,IAAI,EAAEA,IAAK;IAAC8B,MAAM,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxErC,KAAA,CAAA8B,aAAA,CAACzB,aAAa;IAAC8C,eAAe,EAAC,KAAK;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvCrC,KAAA,CAAA8B,aAAA,CAACrB,KAAK;IAAC2C,OAAO,EAAC,MAAM;IAAApB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACxBrC,KAAA,CAAA8B,aAAA,CAACpB,KAAK;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACTrC,KAAA,CAAA8B,aAAA,CAACtB,OAAO;IAAAwB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACXrC,KAAA,CAAA8B,aAAA,CAACxB,MAAM;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACVrC,KAAA,CAAA8B,aAAA,CAAC3B,GAAG;IAACiD,OAAO,EAAC,eAAe;IAACC,IAAI,EAAC,SAAS;IAACC,OAAO,EAAE,EAAG;IAAAtB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAClD,CACS,CAEpB,CACF,CAAC;AAEV,CAAC;AAED,eAAe1B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}