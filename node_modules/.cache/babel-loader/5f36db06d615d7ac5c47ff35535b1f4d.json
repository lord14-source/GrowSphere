{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useState } from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,\n  // Latitude of Jharkhand\n  lng: 85.2799 // Longitude of Jharkhand\n};\nconst zoomLevel = 6; // Adjusted zoom level for a better view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [{\n  lat: 24.4366,\n  lng: 84.2201\n},\n// Northern border\n{\n  lat: 24.1851,\n  lng: 85.0568\n},\n// Slightly south\n{\n  lat: 23.9867,\n  lng: 85.6182\n},\n// Mid-north\n{\n  lat: 23.6255,\n  lng: 86.4194\n},\n// North-east\n{\n  lat: 23.1986,\n  lng: 86.8941\n},\n// Eastern side\n{\n  lat: 22.7767,\n  lng: 86.6826\n},\n// South-east\n{\n  lat: 22.3571,\n  lng: 85.9870\n},\n// Southern border\n{\n  lat: 22.2786,\n  lng: 85.3999\n},\n// South-west\n{\n  lat: 22.7027,\n  lng: 84.8895\n},\n// West\n{\n  lat: 23.1097,\n  lng: 84.6137\n},\n// Mid-west\n{\n  lat: 23.7197,\n  lng: 84.4003\n},\n// North-west\n{\n  lat: 24.0020,\n  lng: 84.4666\n} // Closing the boundary\n];\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\" // Replace with your Google Maps API key\n  });\n  const [map, setMap] = useState(null);\n  const [isPolygonVisible, setIsPolygonVisible] = useState(true); // State to control polygon visibility\n\n  // Zoom in and fit the polygon's bounds when the button is clicked\n  const handleZoomIn = useCallback(() => {\n    if (!map) return;\n    const bounds = new window.google.maps.LatLngBounds();\n\n    // Extend the bounds to include each coordinate in the polygon\n    jharkhandCoords.forEach(coord => bounds.extend(coord));\n\n    // Fit the map to the bounds of the polygon\n    map.fitBounds(bounds);\n\n    // Optional: Set a custom zoom level after fitting bounds\n    const listener = window.google.maps.event.addListener(map, \"idle\", () => {\n      if (map.getZoom() > 10) {\n        // Adjust zoom level after fitting bounds\n        map.setZoom(10); // Set desired zoom level\n      }\n      window.google.maps.event.removeListener(listener); // Remove the listener after zooming\n    });\n\n    // Hide the polygon after it has been clicked\n    setIsPolygonVisible(false);\n  }, [map]);\n\n  // Save the map instance when loaded\n  const onLoad = useCallback(mapInstance => {\n    setMap(mapInstance);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    onLoad: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, isPolygonVisible && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: jharkhandCoords,\n    options: {\n      fillColor: '#00FF00',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), isPolygonVisible && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleZoomIn // Zoom into the polygon when clicked\n    ,\n    style: {\n      position: 'absolute',\n      top: '50%',\n      // Center the button vertically\n      left: '50%',\n      // Center the button horizontally\n      transform: 'translate(-50%, -50%)',\n      // Adjust to truly center the button\n      padding: '5px 10px',\n      backgroundColor: '#00FF00',\n      // Match polygon color\n      border: 'none',\n      width: '60px',\n      borderRadius: '5px',\n      cursor: 'pointer',\n      color: '#ffffff',\n      // White text color\n      fontWeight: 'small',\n      // Bold text\n      zIndex: 1 // Ensure the button is on top of the map\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Press Here\")) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","PolygonF","useJsApiLoader","React","useCallback","useState","containerStyle","width","height","center","lat","lng","zoomLevel","jharkhandCoords","MapComponent","isLoaded","id","googleMapsApiKey","map","setMap","isPolygonVisible","setIsPolygonVisible","handleZoomIn","bounds","window","google","maps","LatLngBounds","forEach","coord","extend","fitBounds","listener","event","addListener","getZoom","setZoom","removeListener","onLoad","mapInstance","createElement","style","position","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","paths","options","fillColor","strokeColor","fillOpacity","onClick","top","left","transform","padding","backgroundColor","border","borderRadius","cursor","color","fontWeight","zIndex","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useState } from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,  // Latitude of Jharkhand\n  lng: 85.2799,  // Longitude of Jharkhand\n};\n\nconst zoomLevel = 6;  // Adjusted zoom level for a better view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  { lat: 24.4366, lng: 84.2201 },  // Northern border\n  { lat: 24.1851, lng: 85.0568 },  // Slightly south\n  { lat: 23.9867, lng: 85.6182 },  // Mid-north\n  { lat: 23.6255, lng: 86.4194 },  // North-east\n  { lat: 23.1986, lng: 86.8941 },  // Eastern side\n  { lat: 22.7767, lng: 86.6826 },  // South-east\n  { lat: 22.3571, lng: 85.9870 },  // Southern border\n  { lat: 22.2786, lng: 85.3999 },  // South-west\n  { lat: 22.7027, lng: 84.8895 },  // West\n  { lat: 23.1097, lng: 84.6137 },  // Mid-west\n  { lat: 23.7197, lng: 84.4003 },  // North-west\n  { lat: 24.0020, lng: 84.4666 },  // Closing the boundary\n];\n\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\", // Replace with your Google Maps API key\n  });\n\n  const [map, setMap] = useState(null);\n  const [isPolygonVisible, setIsPolygonVisible] = useState(true); // State to control polygon visibility\n\n  // Zoom in and fit the polygon's bounds when the button is clicked\n  const handleZoomIn = useCallback(() => {\n    if (!map) return;\n\n    const bounds = new window.google.maps.LatLngBounds();\n\n    // Extend the bounds to include each coordinate in the polygon\n    jharkhandCoords.forEach(coord => bounds.extend(coord));\n\n    // Fit the map to the bounds of the polygon\n    map.fitBounds(bounds);\n\n    // Optional: Set a custom zoom level after fitting bounds\n    const listener = window.google.maps.event.addListener(map, \"idle\", () => {\n      if (map.getZoom() > 10) {  // Adjust zoom level after fitting bounds\n        map.setZoom(10);  // Set desired zoom level\n      }\n      window.google.maps.event.removeListener(listener);  // Remove the listener after zooming\n    });\n\n    // Hide the polygon after it has been clicked\n    setIsPolygonVisible(false);\n  }, [map]);\n\n  // Save the map instance when loaded\n  const onLoad = useCallback((mapInstance) => {\n    setMap(mapInstance);\n  }, []);\n\n  return isLoaded ? (\n    <div style={{ position: 'relative' }}>\n      {/* Map container */}\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={zoomLevel}\n        onLoad={onLoad}\n      >\n        {/* Jharkhand Polygon (only render if visible) */}\n        {isPolygonVisible && (\n          <PolygonF\n            paths={jharkhandCoords}\n            options={{\n              fillColor: '#00FF00',\n              strokeColor: '#000000',\n              fillOpacity: 0.5,\n            }}\n          />\n        )}\n      </GoogleMap>\n\n      {/* Mapper Button on the polygon */}\n      {isPolygonVisible && (\n        <button\n          onClick={handleZoomIn} // Zoom into the polygon when clicked\n          style={{\n            \n            position: 'absolute',\n            top: '50%',  // Center the button vertically\n            left: '50%', // Center the button horizontally\n            transform: 'translate(-50%, -50%)', // Adjust to truly center the button\n            padding: '5px 10px',\n            backgroundColor: '#00FF00', // Match polygon color\n            border: 'none',\n            width:'60px',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            color: '#ffffff', // White text color\n            fontWeight: 'small', // Bold text\n            zIndex: 1,  // Ensure the button is on top of the map\n          }}\n        >\n          Press Here\n        </button>\n      )}\n    </div>\n  ) : <></>;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}