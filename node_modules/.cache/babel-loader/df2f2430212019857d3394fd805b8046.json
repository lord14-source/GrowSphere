{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useRef } from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,\n  // Latitude of Jharkhand\n  lng: 85.2799 // Longitude of Jharkhand\n};\nconst zoomLevel = 6; // Initial zoom level for a broader view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [{\n  lat: 24.319850512925097,\n  lng: 84.48628858675308\n}, {\n  lat: 4.339871748077577,\n  lng: 84.43135694786427\n}, {\n  lat: 24.41992502681079,\n  lng: 84.33247999786447\n}, {\n  lat: 24.569888034487175,\n  lng: 84.27754835897568\n}, {\n  lat: 24.55989606799169,\n  lng: 84.22261672008692\n}, {\n  lat: 24.49992755347394,\n  lng: 84.09078078675383\n}, {\n  lat: 24.569888034487175,\n  lng: 84.06880813119831\n}, {\n  lat: 24.649795067971173,\n  lng: 83.99190383675399\n}, {\n  lat: 24.599859153294084,\n  lng: 86.25508735897198\n}, {\n  lat: 4.619835912864414,\n  lng: 86.17818306452766\n}, {\n  lat: 24.739629386377594,\n  lng: 86.12325142563888\n}, {\n  lat: 24.789509328088826,\n  lng: 86.05733345897234\n}, {\n  lat: 24.77953494255288,\n  lng: 85.87056588675048\n}, {\n  lat: 24.819427672471985,\n  lng: 85.72774362563962\n}, {\n  lat: 24.579879204362907,\n  lng: 85.55196238119551\n}, {\n  lat: 24.549903305116857,\n  lng: 85.43111277564019\n}, {\n  lat: 24.429928120688988,\n  lng: 85.13448192564074\n}, {\n  lat: 24.389910988134652,\n  lng: 84.91475537008562\n}, {\n  lat: 4.539909746103138,\n  lng: 84.80489209230802\n}, {\n  lat: 24.459932641893758,\n  lng: 84.64009717564167\n}, {\n  lat: 25.19776600126312,\n  lng: 87.48555607008076\n}, {\n  lat: 25.21764619605742,\n  lng: 87.32076115341441\n}, {\n  lat: 24.9290664202946,\n  lng: 87.13399358119256\n}, {\n  lat: 24.71967180320528,\n  lng: 87.05708928674825\n}, {\n  lat: 24.62982309603955,\n  lng: 86.63960883119347\n}, {\n  lat: 24.379904723702904,\n  lng: 86.45284125897162\n}, {\n  lat: 24.469932561346138,\n  lng: 86.29903267008301\n}, {\n  lat: 24.599859153294084,\n  lng: 86.31001899786077\n}, {\n  lat: 24.619835912864414,\n  lng: 86.13423775341664\n}, {\n  lat: 24.55989606799169,\n  lng: 87.77120059230245\n}, {\n  lat: 24.589869577378582,\n  lng: 87.88106387008003\n}, {\n  lat: 24.789509328088826,\n  lng: 87.83711855896901\n}, {\n  lat: 25.02865347197196,\n  lng: 87.87007754230225\n}, {\n  lat: 25.138105947622936,\n  lng: 87.79317324785798\n}, {\n  lat: 25.297134476803258,\n  lng: 87.71626895341367\n}, {\n  lat: 25.3567165120009,\n  lng: 87.55147403674731\n}, {\n  lat: 25.237523142868845,\n  lng: 87.44161075896974\n}, {\n  lat: 25.247460397699268,\n  lng: 87.30977482563664\n}, {\n  lat: 23.645919132425476,\n  lng: 86.45495620937252\n}, {\n  lat: 23.80684282216822,\n  lng: 86.67468276492764\n}, {\n  lat: 23.96756734828787,\n  lng: 87.37780774270409\n}, {\n  lat: 24.21969694161701,\n  lng: 87.82613223119125\n}, {\n  lat: 24.51992024062176,\n  lng: 87.80415957563572\n}, {\n  lat: 24.549903305116857,\n  lng: 87.78218692008022\n}, {\n  lat: 24.599859153294084,\n  lng: 87.85909121452451\n}, {\n  lat: 24.759583766795444,\n  lng: 87.88106387008003\n}];\n\n// Coordinates for the Ranchi polygon (updated)\nconst ranchiCoords = [{\n  lat: 23.5000,\n  lng: 85.4631\n}, {\n  lat: 23.4811,\n  lng: 85.4194\n}, {\n  lat: 23.4275,\n  lng: 85.4325\n}, {\n  lat: 23.4092,\n  lng: 85.4611\n}, {\n  lat: 23.4114,\n  lng: 85.4986\n}, {\n  lat: 23.4381,\n  lng: 85.5059\n}, {\n  lat: 23.4653,\n  lng: 85.5097\n}, {\n  lat: 23.4919,\n  lng: 85.5140\n}, {\n  lat: 23.5075,\n  lng: 85.4816\n}, {\n  lat: 23.5041,\n  lng: 85.4472\n}, {\n  lat: 23.4905,\n  lng: 85.4158\n}];\n\n// Coordinates for the new polygon\nconst newPolygonCoords = [{\n  lat: 23.4422,\n  lng: 85.4495\n}, {\n  lat: 23.4383,\n  lng: 85.4625\n}, {\n  lat: 23.4381,\n  lng: 85.4700\n}, {\n  lat: 23.4472,\n  lng: 85.4706\n}, {\n  lat: 23.4511,\n  lng: 85.4675\n}, {\n  lat: 23.4508,\n  lng: 85.4589\n}, {\n  lat: 23.4444,\n  lng: 85.4562\n}];\n\n// Coordinates for the additional new polygon\nconst additionalPolygonCoords = [{\n  lat: 23.4455,\n  lng: 85.4603\n}, {\n  lat: 23.4453,\n  lng: 85.4563\n}, {\n  lat: 23.4441,\n  lng: 85.4553\n}, {\n  lat: 23.4400,\n  lng: 85.4572\n}, {\n  lat: 23.4400,\n  lng: 85.4622\n}, {\n  lat: 23.4411,\n  lng: 85.4644\n}, {\n  lat: 23.4417,\n  lng: 85.4647\n}, {\n  lat: 23.4422,\n  lng: 85.4620\n}];\n\n// Coordinates for the new polygon (the one you requested)\nconst newPolygonCoords2 = [{\n  lat: 23.4432,\n  lng: 85.4597\n},\n// 23°26'35\"N 85°27'35\"E\n{\n  lat: 23.4436,\n  lng: 85.4600\n},\n// 23°26'37\"N 85°27'36\"E\n{\n  lat: 23.4436,\n  lng: 85.4597\n},\n// 23°26'37\"N 85°27'35\"E\n{\n  lat: 23.4436,\n  lng: 85.4595\n},\n// 23°26'37\"N 85°27'34\"E\n{\n  lat: 23.4435,\n  lng: 85.4593\n} // 23°26'36\"N 85°27'33\"E\n];\nconst newPolygonCoords3 = [{\n  lat: 23.4425,\n  lng: 85.4603\n},\n// 23°26'33\"N 85°27'37\"E\n{\n  lat: 23.4428,\n  lng: 85.4606\n},\n// 23°26'34\"N 85°27'38\"E\n{\n  lat: 23.4429,\n  lng: 85.4603\n},\n// 23°26'35\"N 85°27'37\"E\n{\n  lat: 23.4428,\n  lng: 85.4600\n} // 23°26'34\"N 85°27'36\"E\n];\nconst newPolygonCoords4 = [{\n  lat: 23.4428,\n  lng: 85.4600\n},\n// 23°26'34\"N 85°27'36\"E\n{\n  lat: 23.4429,\n  lng: 85.4603\n},\n// 23°26'35\"N 85°27'37\"E\n{\n  lat: 23.4433,\n  lng: 85.4600\n},\n// 23°26'36\"N 85°27'36\"E\n{\n  lat: 23.4429,\n  lng: 85.4602\n} // 23°26'35\"N 85°27'35\"E\n];\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n  const mapRef = useRef(null);\n  const onLoad = useCallback(mapInstance => {\n    console.log(\"Map loaded:\", mapInstance);\n    mapRef.current = mapInstance;\n  }, []);\n  const handlePolygonClick = useCallback(polygonCoords => {\n    const map = mapRef.current;\n    if (!map) {\n      console.log(\"Map instance not available.\");\n      return;\n    }\n    console.log(\"Polygon clicked, zooming in...\");\n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n    map.fitBounds(bounds);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    onLoad: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PolygonF, {\n    paths: jharkhandCoords,\n    options: {\n      fillColor: '#00FF00',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"Jharkhand polygon clicked\");\n      handlePolygonClick(jharkhandCoords);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: ranchiCoords,\n    options: {\n      fillColor: '#FF5733',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"Ranchi polygon clicked\");\n      handlePolygonClick(ranchiCoords);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords,\n    options: {\n      fillColor: '#0000FF',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"New polygon clicked\");\n      handlePolygonClick(newPolygonCoords);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: additionalPolygonCoords,\n    options: {\n      fillColor: '#0000FF',\n      strokeColor: '#000000',\n      fillOpacity: 0.1\n    },\n    onClick: () => {\n      console.log(\"Additional polygon clicked\");\n      handlePolygonClick(additionalPolygonCoords);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords2,\n    options: {\n      fillColor: '#FF00FF',\n      strokeColor: '#000000',\n      fillOpacity: 0.00001\n    },\n    onClick: () => {\n      console.log(\"New Polygon 2 clicked\");\n      handlePolygonClick(newPolygonCoords2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords3,\n    options: {\n      fillColor: '#FF00FF',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"New Polygon 2 clicked\");\n      handlePolygonClick(newPolygonCoords3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords4,\n    options: {\n      fillColor: '#FF00FF',\n      // You can set any color\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"New Polygon 4 clicked\");\n      handlePolygonClick(newPolygonCoords4); // Zoom into the new polygon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","PolygonF","useJsApiLoader","React","useCallback","useRef","containerStyle","width","height","center","lat","lng","zoomLevel","jharkhandCoords","ranchiCoords","newPolygonCoords","additionalPolygonCoords","newPolygonCoords2","newPolygonCoords3","newPolygonCoords4","MapComponent","isLoaded","id","googleMapsApiKey","mapRef","onLoad","mapInstance","console","log","current","handlePolygonClick","polygonCoords","map","bounds","window","google","maps","LatLngBounds","forEach","coord","extend","fitBounds","createElement","style","position","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","paths","options","fillColor","strokeColor","fillOpacity","onClick","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useRef } from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,  // Latitude of Jharkhand\n  lng: 85.2799,  // Longitude of Jharkhand\n};\n\nconst zoomLevel = 6;  // Initial zoom level for a broader view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  \n  { lat: 24.319850512925097, lng: 84.48628858675308 },\n{ lat: 4.339871748077577, lng: 84.43135694786427 },\n{ lat: 24.41992502681079, lng: 84.33247999786447 },\n{ lat: 24.569888034487175, lng: 84.27754835897568 },\n{ lat: 24.55989606799169, lng: 84.22261672008692 },\n{ lat: 24.49992755347394, lng: 84.09078078675383 },\n{ lat: 24.569888034487175, lng: 84.06880813119831 },\n{ lat: 24.649795067971173, lng: 83.99190383675399 },\n{ lat: 24.599859153294084, lng: 86.25508735897198 },\n{ lat: 4.619835912864414, lng: 86.17818306452766 },\n{ lat: 24.739629386377594, lng: 86.12325142563888 },\n{ lat: 24.789509328088826, lng: 86.05733345897234 },\n{ lat: 24.77953494255288, lng: 85.87056588675048 },\n{ lat: 24.819427672471985, lng: 85.72774362563962 },\n{ lat: 24.579879204362907, lng: 85.55196238119551 },\n{ lat: 24.549903305116857, lng: 85.43111277564019 },\n{ lat: 24.429928120688988, lng: 85.13448192564074 },\n{ lat: 24.389910988134652, lng: 84.91475537008562 },\n{ lat: 4.539909746103138, lng: 84.80489209230802 },\n{ lat: 24.459932641893758, lng: 84.64009717564167 },{ lat: 25.19776600126312, lng: 87.48555607008076 },\n{ lat: 25.21764619605742, lng: 87.32076115341441 },\n{ lat: 24.9290664202946, lng: 87.13399358119256 },\n{ lat: 24.71967180320528, lng: 87.05708928674825 },\n{ lat: 24.62982309603955, lng: 86.63960883119347 },\n{ lat: 24.379904723702904, lng: 86.45284125897162 },\n{ lat: 24.469932561346138, lng: 86.29903267008301 },\n{ lat: 24.599859153294084, lng: 86.31001899786077 },\n{ lat: 24.619835912864414, lng: 86.13423775341664 },\n{ lat: 24.55989606799169, lng: 87.77120059230245 },\n{ lat: 24.589869577378582, lng: 87.88106387008003 },\n{ lat: 24.789509328088826, lng: 87.83711855896901 },\n{ lat: 25.02865347197196, lng: 87.87007754230225 },\n{ lat: 25.138105947622936, lng: 87.79317324785798 },\n{ lat: 25.297134476803258, lng: 87.71626895341367 },\n{ lat: 25.3567165120009, lng: 87.55147403674731 },\n{ lat: 25.237523142868845, lng: 87.44161075896974 },\n{ lat: 25.247460397699268, lng: 87.30977482563664 },\n{ lat: 23.645919132425476, lng: 86.45495620937252 },\n{ lat: 23.80684282216822, lng: 86.67468276492764 },\n{ lat: 23.96756734828787, lng: 87.37780774270409 },\n{ lat: 24.21969694161701, lng: 87.82613223119125 },\n{ lat: 24.51992024062176, lng: 87.80415957563572 },\n{ lat: 24.549903305116857, lng: 87.78218692008022 },\n{ lat: 24.599859153294084, lng: 87.85909121452451 },\n{ lat: 24.759583766795444, lng: 87.88106387008003 }\n\n\n];\n\n// Coordinates for the Ranchi polygon (updated)\nconst ranchiCoords = [\n  { lat: 23.5000, lng: 85.4631 },\n  { lat: 23.4811, lng: 85.4194 },\n  { lat: 23.4275, lng: 85.4325 },\n  { lat: 23.4092, lng: 85.4611 },\n  { lat: 23.4114, lng: 85.4986 },\n  { lat: 23.4381, lng: 85.5059 },\n  { lat: 23.4653, lng: 85.5097 },\n  { lat: 23.4919, lng: 85.5140 },\n  { lat: 23.5075, lng: 85.4816 },\n  { lat: 23.5041, lng: 85.4472 },\n  { lat: 23.4905, lng: 85.4158 },\n];\n\n// Coordinates for the new polygon\nconst newPolygonCoords = [\n  { lat: 23.4422, lng: 85.4495 },\n  { lat: 23.4383, lng: 85.4625 },\n  { lat: 23.4381, lng: 85.4700 },\n  { lat: 23.4472, lng: 85.4706 },\n  { lat: 23.4511, lng: 85.4675 },\n  { lat: 23.4508, lng: 85.4589 },\n  { lat: 23.4444, lng: 85.4562 },\n];\n\n// Coordinates for the additional new polygon\nconst additionalPolygonCoords = [\n  { lat: 23.4455, lng: 85.4603 },\n  { lat: 23.4453, lng: 85.4563 },\n  { lat: 23.4441, lng: 85.4553 },\n  { lat: 23.4400, lng: 85.4572 },\n  { lat: 23.4400, lng: 85.4622 },\n  { lat: 23.4411, lng: 85.4644 },\n  { lat: 23.4417, lng: 85.4647 },\n  { lat: 23.4422, lng: 85.4620 },\n];\n\n// Coordinates for the new polygon (the one you requested)\nconst newPolygonCoords2 = [\n  { lat: 23.4432, lng: 85.4597 },  // 23°26'35\"N 85°27'35\"E\n  { lat: 23.4436, lng: 85.4600 },  // 23°26'37\"N 85°27'36\"E\n  { lat: 23.4436, lng: 85.4597 },  // 23°26'37\"N 85°27'35\"E\n  { lat: 23.4436, lng: 85.4595 },  // 23°26'37\"N 85°27'34\"E\n  { lat: 23.4435, lng: 85.4593 },  // 23°26'36\"N 85°27'33\"E\n];\nconst newPolygonCoords3 = [\n  { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N 85°27'37\"E\n  { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N 85°27'38\"E\n  { lat: 23.4429, lng: 85.4603 },  // 23°26'35\"N 85°27'37\"E\n  { lat: 23.4428, lng: 85.4600 },  // 23°26'34\"N 85°27'36\"E\n];\nconst newPolygonCoords4 = [\n  { lat: 23.4428, lng: 85.4600 },  // 23°26'34\"N 85°27'36\"E\n  { lat: 23.4429, lng: 85.4603 },  // 23°26'35\"N 85°27'37\"E\n  { lat: 23.4433, lng: 85.4600 },  // 23°26'36\"N 85°27'36\"E\n  { lat: 23.4429, lng: 85.4602 },  // 23°26'35\"N 85°27'35\"E\n];\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n  });\n\n  const mapRef = useRef(null);\n\n  const onLoad = useCallback((mapInstance) => {\n    console.log(\"Map loaded:\", mapInstance);\n    mapRef.current = mapInstance;\n  }, []);\n\n  const handlePolygonClick = useCallback((polygonCoords) => {\n    const map = mapRef.current;\n    if (!map) {\n      console.log(\"Map instance not available.\");\n      return;\n    }\n\n    console.log(\"Polygon clicked, zooming in...\");\n    \n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n\n    map.fitBounds(bounds);\n  }, []);\n\n  return isLoaded ? (\n    <div style={{ position: 'relative' }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={zoomLevel}\n        onLoad={onLoad}\n      >\n        {/* Jharkhand Polygon */}\n        <PolygonF\n          paths={jharkhandCoords}\n          options={{\n            fillColor: '#00FF00',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"Jharkhand polygon clicked\");\n            handlePolygonClick(jharkhandCoords);\n          }}\n        />\n\n        {/* Ranchi Polygon */}\n        <PolygonF\n          paths={ranchiCoords}\n          options={{\n            fillColor: '#FF5733',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"Ranchi polygon clicked\");\n            handlePolygonClick(ranchiCoords);\n          }}\n        />\n\n        {/* New Polygon */}\n        <PolygonF\n          paths={newPolygonCoords}\n          options={{\n            fillColor: '#0000FF',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"New polygon clicked\");\n            handlePolygonClick(newPolygonCoords);\n          }}\n        />\n\n        {/* Additional New Polygon */}\n        <PolygonF\n          paths={additionalPolygonCoords}\n          options={{\n            fillColor: '#0000FF',\n            strokeColor: '#000000',\n            fillOpacity: 0.1,\n          }}\n          onClick={() => {\n            console.log(\"Additional polygon clicked\");\n            handlePolygonClick(additionalPolygonCoords);\n          }}\n        />\n\n        {/* New Polygon (Additional) */}\n        <PolygonF\n          paths={newPolygonCoords2}\n          options={{\n            fillColor: '#FF00FF',\n            strokeColor: '#000000',\n            fillOpacity: 0.00001,\n          }}\n          onClick={() => {\n            console.log(\"New Polygon 2 clicked\");\n            handlePolygonClick(newPolygonCoords2);\n          }}\n        />\n         <PolygonF\n          paths={newPolygonCoords3}\n          options={{\n            fillColor: '#FF00FF',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"New Polygon 2 clicked\");\n            handlePolygonClick(newPolygonCoords3);\n          }}\n        />\n        <PolygonF\n  paths={newPolygonCoords4}\n  options={{\n    fillColor: '#FF00FF',  // You can set any color\n    strokeColor: '#000000',\n    fillOpacity: 0.5,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 4 clicked\");\n    handlePolygonClick(newPolygonCoords4);  // Zoom into the new polygon\n  }}\n/>\n      </GoogleMap>\n    </div>\n  ) : <></>;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}