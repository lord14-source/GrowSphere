{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\n// import { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\n// import React, { useState } from 'react';\n\n// const containerStyle = {\n//   width: '100%',\n//   height: '600px',\n// };\n\n// // Center point set to India level\n// const center = {\n//   lat: 20.5937,  // Latitude of India\n//   lng: 78.9629,  // Longitude of India\n// };\n\n// const zoomLevel = 5;  // Adjusted zoom level for the India view\n\n// // Coordinates for the Jharkhand polygon\n// const jharkhandCoords = [\n//   { lat: 24.3011, lng: 84.4983 }, // 24°18'04\"N 84°29'54\"E\n//   { lat: 24.4260, lng: 84.3156 }, // 24°25'37\"N 84°18'56\"E\n//   { lat: 24.5617, lng: 84.2892 }, // 24°33'42\"N 84°17'21\"E\n//   { lat: 24.5683, lng: 84.1817 }, // 24°34'06\"N 84°10'54\"E\n//   { lat: 24.5303, lng: 84.0994 }, // 24°31'49\"N 84°05'58\"E\n//   { lat: 24.6567, lng: 83.9983 }, // 24°39'24\"N 83°59'54\"E\n//   { lat: 24.5661, lng: 83.9333 }, // 24°33'58\"N 83°56'00\"E\n//   { lat: 24.5497, lng: 83.8011 }, // 24°32'59\"N 83°48'04\"E\n//   { lat: 24.5467, lng: 83.5272 }, // 24°32'48\"N 83°31'38\"E\n//   { lat: 24.5225, lng: 83.3947 }, // 24°31'21\"N 83°23'41\"E\n//   { lat: 24.4186, lng: 85.0219 }, // 24°25'07\"N 85°01'19\"E\n//   { lat: 24.4003, lng: 84.8878 }, // 24°24'01\"N 84°53'16\"E\n//   { lat: 24.4262, lng: 85.0422 }, // 24°25'34\"N 85°02'... (trimmed for brevity)\n// ];\n\n// // Map Component\n// const MapComponent = () => {\n//   const { isLoaded } = useJsApiLoader({\n//     id: 'google-map-script',\n//     googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n//   });\n\n//   const [map, setMap] = useState(null);\n\n//   const handlePolygonClick = (polygonCoords, zoomLevel) => {\n//     const bounds = new window.google.maps.LatLngBounds();\n//     polygonCoords.forEach(coord => bounds.extend(coord));\n//     const polygonCenter = bounds.getCenter();\n\n//     map.setCenter(polygonCenter);\n//     map.setZoom(zoomLevel);\n//   };\n\n//   const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true);\n\n//   return isLoaded ? (\n//     <GoogleMap\n//       mapContainerStyle={containerStyle}\n//       center={center}\n//       zoom={zoomLevel}\n//     >\n//       {showJharkhandPolygon && (\n//         <PolygonF\n//           paths={jharkhandCoords}\n//           options={{ fillColor: '#00FF00', strokeColor: '#000000' }}\n//           onClick={() => handlePolygonClick(jharkhandCoords, 8)}\n//         />\n//       )}\n//     </GoogleMap>\n//   ) : <></>;\n// };\n\n// export default MapComponent;\n\nimport React, { useEffect, useRef } from 'react';\nconst GoogleMapComponent = () => {\n  const mapRef = useRef(null);\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: {\n        lat: 20.5937,\n        lng: 78.9629\n      },\n      // Set your initial coordinates\n      zoom: 8,\n      // Initial zoom level\n      zoomControl: true\n    });\n\n    // Add event listeners for zoom buttons if needed\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    ref: mapRef,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => map.setZoom(map.getZoom() + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Zoom In\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => map.setZoom(map.getZoom() - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Zoom Out\"));\n};\nexport default GoogleMapComponent;","map":{"version":3,"names":["React","useEffect","useRef","GoogleMapComponent","mapRef","map","window","google","maps","Map","current","center","lat","lng","zoom","zoomControl","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","style","height","width","onClick","setZoom","getZoom"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["// import { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\n// import React, { useState } from 'react';\n\n// const containerStyle = {\n//   width: '100%',\n//   height: '600px',\n// };\n\n// // Center point set to India level\n// const center = {\n//   lat: 20.5937,  // Latitude of India\n//   lng: 78.9629,  // Longitude of India\n// };\n\n// const zoomLevel = 5;  // Adjusted zoom level for the India view\n\n// // Coordinates for the Jharkhand polygon\n// const jharkhandCoords = [\n//   { lat: 24.3011, lng: 84.4983 }, // 24°18'04\"N 84°29'54\"E\n//   { lat: 24.4260, lng: 84.3156 }, // 24°25'37\"N 84°18'56\"E\n//   { lat: 24.5617, lng: 84.2892 }, // 24°33'42\"N 84°17'21\"E\n//   { lat: 24.5683, lng: 84.1817 }, // 24°34'06\"N 84°10'54\"E\n//   { lat: 24.5303, lng: 84.0994 }, // 24°31'49\"N 84°05'58\"E\n//   { lat: 24.6567, lng: 83.9983 }, // 24°39'24\"N 83°59'54\"E\n//   { lat: 24.5661, lng: 83.9333 }, // 24°33'58\"N 83°56'00\"E\n//   { lat: 24.5497, lng: 83.8011 }, // 24°32'59\"N 83°48'04\"E\n//   { lat: 24.5467, lng: 83.5272 }, // 24°32'48\"N 83°31'38\"E\n//   { lat: 24.5225, lng: 83.3947 }, // 24°31'21\"N 83°23'41\"E\n//   { lat: 24.4186, lng: 85.0219 }, // 24°25'07\"N 85°01'19\"E\n//   { lat: 24.4003, lng: 84.8878 }, // 24°24'01\"N 84°53'16\"E\n//   { lat: 24.4262, lng: 85.0422 }, // 24°25'34\"N 85°02'... (trimmed for brevity)\n// ];\n\n// // Map Component\n// const MapComponent = () => {\n//   const { isLoaded } = useJsApiLoader({\n//     id: 'google-map-script',\n//     googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n//   });\n\n//   const [map, setMap] = useState(null);\n\n//   const handlePolygonClick = (polygonCoords, zoomLevel) => {\n//     const bounds = new window.google.maps.LatLngBounds();\n//     polygonCoords.forEach(coord => bounds.extend(coord));\n//     const polygonCenter = bounds.getCenter();\n\n//     map.setCenter(polygonCenter);\n//     map.setZoom(zoomLevel);\n//   };\n\n//   const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true);\n\n//   return isLoaded ? (\n//     <GoogleMap\n//       mapContainerStyle={containerStyle}\n//       center={center}\n//       zoom={zoomLevel}\n//     >\n//       {showJharkhandPolygon && (\n//         <PolygonF\n//           paths={jharkhandCoords}\n//           options={{ fillColor: '#00FF00', strokeColor: '#000000' }}\n//           onClick={() => handlePolygonClick(jharkhandCoords, 8)}\n//         />\n//       )}\n//     </GoogleMap>\n//   ) : <></>;\n// };\n\n// export default MapComponent;\n\nimport React, { useEffect, useRef } from 'react';\n\nconst GoogleMapComponent = () => {\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: { lat: 20.5937, lng: 78.9629 }, // Set your initial coordinates\n      zoom: 8, // Initial zoom level\n      zoomControl: true,\n    });\n\n    // Add event listeners for zoom buttons if needed\n  }, []);\n\n  return (\n    <div>\n      <div id=\"map\" ref={mapRef} style={{ height: '400px', width: '100%' }} />\n      <button onClick={() => map.setZoom(map.getZoom() + 1)}>Zoom In</button>\n      <button onClick={() => map.setZoom(map.getZoom() - 1)}>Zoom Out</button>\n    </div>\n  );\n};\n\nexport default GoogleMapComponent;\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEhD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,MAAM,GAAGF,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,MAAMI,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACL,MAAM,CAACM,OAAO,EAAE;MACrDC,MAAM,EAAE;QAAEC,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAQ,CAAC;MAAE;MACxCC,IAAI,EAAE,CAAC;MAAE;MACTC,WAAW,EAAE;IACf,CAAC,CAAC;;IAEF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEtB,KAAA,CAAAgB,aAAA;IAAKO,EAAE,EAAC,KAAK;IAACC,GAAG,EAAEpB,MAAO;IAACqB,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACxEtB,KAAA,CAAAgB,aAAA;IAAQY,OAAO,EAAEA,CAAA,KAAMvB,GAAG,CAACwB,OAAO,CAACxB,GAAG,CAACyB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAe,CAAC,eACvEtB,KAAA,CAAAgB,aAAA;IAAQY,OAAO,EAAEA,CAAA,KAAMvB,GAAG,CAACwB,OAAO,CAACxB,GAAG,CAACyB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CACpE,CAAC;AAEV,CAAC;AAED,eAAenB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}