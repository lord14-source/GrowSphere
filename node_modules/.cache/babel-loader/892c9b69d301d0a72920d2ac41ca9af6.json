{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useRef } from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,\n  // Latitude of Jharkhand\n  lng: 85.2799 // Longitude of Jharkhand\n};\nconst zoomLevel = 6; // Initial zoom level for a broader view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [{\n  lat: 24.626526633567458,\n  lng: 87.00795121914851\n}, {\n  lat: 24.641506307095835,\n  lng: 86.95301958025973\n}, {\n  lat: 24.60655094273754,\n  lng: 86.90907426914872\n}, {\n  lat: 24.561593977844232,\n  lng: 86.89808794137095\n}, {\n  lat: 24.57158580899354,\n  lng: 86.85414263025992\n}, {\n  lat: 24.586572061903805,\n  lng: 86.81019731914888\n}, {\n  lat: 24.626526633567458,\n  lng: 86.79371782748224\n}, {\n  lat: 24.626526633567458,\n  lng: 86.74427935248234\n}, {\n  lat: 24.591567081070114,\n  lng: 86.73878618859347\n}, {\n  lat: 24.561593977844232,\n  lng: 86.66737505803803\n}, {\n  lat: 24.591567081070114,\n  lng: 86.62342974692724\n}, {\n  lat: 24.61154516458284,\n  lng: 86.6014570913715\n}, {\n  lat: 25.090057636245728,\n  lng: 87.28260941359243\n}, {\n  lat: 25.1000069160334,\n  lng: 87.23866410248141\n}, {\n  lat: 25.06020494382165,\n  lng: 87.16175980803712\n}, {\n  lat: 24.985541399962816,\n  lng: 87.13978715248159\n}, {\n  lat: 24.89090246289351,\n  lng: 87.15077348025936\n}, {\n  lat: 24.80117756205931,\n  lng: 87.08485551359281\n}, {\n  lat: 24.76626698836429,\n  lng: 87.07386918581504\n}\n// { lat: 24.726357170583235, lng: 87.06288285803728 },\n// { lat: 24.671460264549978, lng: 87.05189653025954 },\n// { lat: 24.65149175823972, lng: 87.04091020248178 },\n// { lat: 24.646499132475235, lng: 86.99147172748188 }\n];\n\n// Coordinates for the Ranchi polygon (updated)\nconst ranchiCoords = [{\n  lat: 23.5000,\n  lng: 85.4631\n}, {\n  lat: 23.4811,\n  lng: 85.4194\n}, {\n  lat: 23.4275,\n  lng: 85.4325\n}, {\n  lat: 23.4092,\n  lng: 85.4611\n}, {\n  lat: 23.4114,\n  lng: 85.4986\n}, {\n  lat: 23.4381,\n  lng: 85.5059\n}, {\n  lat: 23.4653,\n  lng: 85.5097\n}, {\n  lat: 23.4919,\n  lng: 85.5140\n}, {\n  lat: 23.5075,\n  lng: 85.4816\n}, {\n  lat: 23.5041,\n  lng: 85.4472\n}, {\n  lat: 23.4905,\n  lng: 85.4158\n}];\n\n// Coordinates for the new polygon\nconst newPolygonCoords = [{\n  lat: 23.4422,\n  lng: 85.4495\n}, {\n  lat: 23.4383,\n  lng: 85.4625\n}, {\n  lat: 23.4381,\n  lng: 85.4700\n}, {\n  lat: 23.4472,\n  lng: 85.4706\n}, {\n  lat: 23.4511,\n  lng: 85.4675\n}, {\n  lat: 23.4508,\n  lng: 85.4589\n}, {\n  lat: 23.4444,\n  lng: 85.4562\n}];\n\n// Coordinates for the additional new polygon\nconst additionalPolygonCoords = [{\n  lat: 23.4455,\n  lng: 85.4603\n}, {\n  lat: 23.4453,\n  lng: 85.4563\n}, {\n  lat: 23.4441,\n  lng: 85.4553\n}, {\n  lat: 23.4400,\n  lng: 85.4572\n}, {\n  lat: 23.4400,\n  lng: 85.4622\n}, {\n  lat: 23.4411,\n  lng: 85.4644\n}, {\n  lat: 23.4417,\n  lng: 85.4647\n}, {\n  lat: 23.4422,\n  lng: 85.4620\n}];\n\n// Coordinates for the new polygon (the one you requested)\nconst newPolygonCoords2 = [{\n  lat: 23.4432,\n  lng: 85.4597\n},\n// 23°26'35\"N 85°27'35\"E\n{\n  lat: 23.4436,\n  lng: 85.4600\n},\n// 23°26'37\"N 85°27'36\"E\n{\n  lat: 23.4436,\n  lng: 85.4597\n},\n// 23°26'37\"N 85°27'35\"E\n{\n  lat: 23.4436,\n  lng: 85.4595\n},\n// 23°26'37\"N 85°27'34\"E\n{\n  lat: 23.4435,\n  lng: 85.4593\n} // 23°26'36\"N 85°27'33\"E\n];\nconst newPolygonCoords3 = [{\n  lat: 23.4425,\n  lng: 85.4603\n},\n// 23°26'33\"N 85°27'37\"E\n{\n  lat: 23.4428,\n  lng: 85.4606\n},\n// 23°26'34\"N 85°27'38\"E\n{\n  lat: 23.4429,\n  lng: 85.4603\n},\n// 23°26'35\"N 85°27'37\"E\n{\n  lat: 23.4428,\n  lng: 85.4600\n} // 23°26'34\"N 85°27'36\"E\n];\nconst newPolygonCoords4 = [{\n  lat: 23.4428,\n  lng: 85.4600\n},\n// 23°26'34\"N 85°27'36\"E\n{\n  lat: 23.4429,\n  lng: 85.4603\n},\n// 23°26'35\"N 85°27'37\"E\n{\n  lat: 23.4433,\n  lng: 85.4600\n},\n// 23°26'36\"N 85°27'36\"E\n{\n  lat: 23.4429,\n  lng: 85.4602\n} // 23°26'35\"N 85°27'35\"E\n];\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n  const mapRef = useRef(null);\n  const onLoad = useCallback(mapInstance => {\n    console.log(\"Map loaded:\", mapInstance);\n    mapRef.current = mapInstance;\n  }, []);\n  const handlePolygonClick = useCallback(polygonCoords => {\n    const map = mapRef.current;\n    if (!map) {\n      console.log(\"Map instance not available.\");\n      return;\n    }\n    console.log(\"Polygon clicked, zooming in...\");\n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n    map.fitBounds(bounds);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    onLoad: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PolygonF, {\n    paths: jharkhandCoords,\n    options: {\n      fillColor: '#00FF00',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"Jharkhand polygon clicked\");\n      handlePolygonClick(jharkhandCoords);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: ranchiCoords,\n    options: {\n      fillColor: '#FF5733',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"Ranchi polygon clicked\");\n      handlePolygonClick(ranchiCoords);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords,\n    options: {\n      fillColor: '#0000FF',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"New polygon clicked\");\n      handlePolygonClick(newPolygonCoords);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: additionalPolygonCoords,\n    options: {\n      fillColor: '#0000FF',\n      strokeColor: '#000000',\n      fillOpacity: 0.1\n    },\n    onClick: () => {\n      console.log(\"Additional polygon clicked\");\n      handlePolygonClick(additionalPolygonCoords);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords2,\n    options: {\n      fillColor: '#FF00FF',\n      strokeColor: '#000000',\n      fillOpacity: 0.00001\n    },\n    onClick: () => {\n      console.log(\"New Polygon 2 clicked\");\n      handlePolygonClick(newPolygonCoords2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords3,\n    options: {\n      fillColor: '#FF00FF',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"New Polygon 2 clicked\");\n      handlePolygonClick(newPolygonCoords3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords4,\n    options: {\n      fillColor: '#FF00FF',\n      // You can set any color\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"New Polygon 4 clicked\");\n      handlePolygonClick(newPolygonCoords4); // Zoom into the new polygon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","PolygonF","useJsApiLoader","React","useCallback","useRef","containerStyle","width","height","center","lat","lng","zoomLevel","jharkhandCoords","ranchiCoords","newPolygonCoords","additionalPolygonCoords","newPolygonCoords2","newPolygonCoords3","newPolygonCoords4","MapComponent","isLoaded","id","googleMapsApiKey","mapRef","onLoad","mapInstance","console","log","current","handlePolygonClick","polygonCoords","map","bounds","window","google","maps","LatLngBounds","forEach","coord","extend","fitBounds","createElement","style","position","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","paths","options","fillColor","strokeColor","fillOpacity","onClick","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useRef } from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,  // Latitude of Jharkhand\n  lng: 85.2799,  // Longitude of Jharkhand\n};\n\nconst zoomLevel = 6;  // Initial zoom level for a broader view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  \n  { lat: 24.626526633567458, lng: 87.00795121914851 },\n{ lat: 24.641506307095835, lng: 86.95301958025973 },\n{ lat: 24.60655094273754, lng: 86.90907426914872 },\n{ lat: 24.561593977844232, lng: 86.89808794137095 },\n{ lat: 24.57158580899354, lng: 86.85414263025992 },\n{ lat: 24.586572061903805, lng: 86.81019731914888 },\n{ lat: 24.626526633567458, lng: 86.79371782748224 },\n{ lat: 24.626526633567458, lng: 86.74427935248234 },\n{ lat: 24.591567081070114, lng: 86.73878618859347 },\n{ lat: 24.561593977844232, lng: 86.66737505803803 },\n{ lat: 24.591567081070114, lng: 86.62342974692724 },\n{ lat: 24.61154516458284, lng: 86.6014570913715 },\n{ lat: 25.090057636245728, lng: 87.28260941359243 },\n{ lat: 25.1000069160334, lng: 87.23866410248141 },\n{ lat: 25.06020494382165, lng: 87.16175980803712 },\n{ lat: 24.985541399962816, lng: 87.13978715248159 },\n{ lat: 24.89090246289351, lng: 87.15077348025936 },\n{ lat: 24.80117756205931, lng: 87.08485551359281 },\n{ lat: 24.76626698836429, lng: 87.07386918581504 },\n// { lat: 24.726357170583235, lng: 87.06288285803728 },\n// { lat: 24.671460264549978, lng: 87.05189653025954 },\n// { lat: 24.65149175823972, lng: 87.04091020248178 },\n// { lat: 24.646499132475235, lng: 86.99147172748188 }\n\n  \n\n\n\n\n];\n\n// Coordinates for the Ranchi polygon (updated)\nconst ranchiCoords = [\n  { lat: 23.5000, lng: 85.4631 },\n  { lat: 23.4811, lng: 85.4194 },\n  { lat: 23.4275, lng: 85.4325 },\n  { lat: 23.4092, lng: 85.4611 },\n  { lat: 23.4114, lng: 85.4986 },\n  { lat: 23.4381, lng: 85.5059 },\n  { lat: 23.4653, lng: 85.5097 },\n  { lat: 23.4919, lng: 85.5140 },\n  { lat: 23.5075, lng: 85.4816 },\n  { lat: 23.5041, lng: 85.4472 },\n  { lat: 23.4905, lng: 85.4158 },\n];\n\n// Coordinates for the new polygon\nconst newPolygonCoords = [\n  { lat: 23.4422, lng: 85.4495 },\n  { lat: 23.4383, lng: 85.4625 },\n  { lat: 23.4381, lng: 85.4700 },\n  { lat: 23.4472, lng: 85.4706 },\n  { lat: 23.4511, lng: 85.4675 },\n  { lat: 23.4508, lng: 85.4589 },\n  { lat: 23.4444, lng: 85.4562 },\n];\n\n// Coordinates for the additional new polygon\nconst additionalPolygonCoords = [\n  { lat: 23.4455, lng: 85.4603 },\n  { lat: 23.4453, lng: 85.4563 },\n  { lat: 23.4441, lng: 85.4553 },\n  { lat: 23.4400, lng: 85.4572 },\n  { lat: 23.4400, lng: 85.4622 },\n  { lat: 23.4411, lng: 85.4644 },\n  { lat: 23.4417, lng: 85.4647 },\n  { lat: 23.4422, lng: 85.4620 },\n];\n\n// Coordinates for the new polygon (the one you requested)\nconst newPolygonCoords2 = [\n  { lat: 23.4432, lng: 85.4597 },  // 23°26'35\"N 85°27'35\"E\n  { lat: 23.4436, lng: 85.4600 },  // 23°26'37\"N 85°27'36\"E\n  { lat: 23.4436, lng: 85.4597 },  // 23°26'37\"N 85°27'35\"E\n  { lat: 23.4436, lng: 85.4595 },  // 23°26'37\"N 85°27'34\"E\n  { lat: 23.4435, lng: 85.4593 },  // 23°26'36\"N 85°27'33\"E\n];\nconst newPolygonCoords3 = [\n  { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N 85°27'37\"E\n  { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N 85°27'38\"E\n  { lat: 23.4429, lng: 85.4603 },  // 23°26'35\"N 85°27'37\"E\n  { lat: 23.4428, lng: 85.4600 },  // 23°26'34\"N 85°27'36\"E\n];\nconst newPolygonCoords4 = [\n  { lat: 23.4428, lng: 85.4600 },  // 23°26'34\"N 85°27'36\"E\n  { lat: 23.4429, lng: 85.4603 },  // 23°26'35\"N 85°27'37\"E\n  { lat: 23.4433, lng: 85.4600 },  // 23°26'36\"N 85°27'36\"E\n  { lat: 23.4429, lng: 85.4602 },  // 23°26'35\"N 85°27'35\"E\n];\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n  });\n\n  const mapRef = useRef(null);\n\n  const onLoad = useCallback((mapInstance) => {\n    console.log(\"Map loaded:\", mapInstance);\n    mapRef.current = mapInstance;\n  }, []);\n\n  const handlePolygonClick = useCallback((polygonCoords) => {\n    const map = mapRef.current;\n    if (!map) {\n      console.log(\"Map instance not available.\");\n      return;\n    }\n\n    console.log(\"Polygon clicked, zooming in...\");\n    \n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n\n    map.fitBounds(bounds);\n  }, []);\n\n  return isLoaded ? (\n    <div style={{ position: 'relative' }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={zoomLevel}\n        onLoad={onLoad}\n      >\n        {/* Jharkhand Polygon */}\n        <PolygonF\n          paths={jharkhandCoords}\n          options={{\n            fillColor: '#00FF00',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"Jharkhand polygon clicked\");\n            handlePolygonClick(jharkhandCoords);\n          }}\n        />\n\n        {/* Ranchi Polygon */}\n        <PolygonF\n          paths={ranchiCoords}\n          options={{\n            fillColor: '#FF5733',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"Ranchi polygon clicked\");\n            handlePolygonClick(ranchiCoords);\n          }}\n        />\n\n        {/* New Polygon */}\n        <PolygonF\n          paths={newPolygonCoords}\n          options={{\n            fillColor: '#0000FF',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"New polygon clicked\");\n            handlePolygonClick(newPolygonCoords);\n          }}\n        />\n\n        {/* Additional New Polygon */}\n        <PolygonF\n          paths={additionalPolygonCoords}\n          options={{\n            fillColor: '#0000FF',\n            strokeColor: '#000000',\n            fillOpacity: 0.1,\n          }}\n          onClick={() => {\n            console.log(\"Additional polygon clicked\");\n            handlePolygonClick(additionalPolygonCoords);\n          }}\n        />\n\n        {/* New Polygon (Additional) */}\n        <PolygonF\n          paths={newPolygonCoords2}\n          options={{\n            fillColor: '#FF00FF',\n            strokeColor: '#000000',\n            fillOpacity: 0.00001,\n          }}\n          onClick={() => {\n            console.log(\"New Polygon 2 clicked\");\n            handlePolygonClick(newPolygonCoords2);\n          }}\n        />\n         <PolygonF\n          paths={newPolygonCoords3}\n          options={{\n            fillColor: '#FF00FF',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"New Polygon 2 clicked\");\n            handlePolygonClick(newPolygonCoords3);\n          }}\n        />\n        <PolygonF\n  paths={newPolygonCoords4}\n  options={{\n    fillColor: '#FF00FF',  // You can set any color\n    strokeColor: '#000000',\n    fillOpacity: 0.5,\n  }}\n  onClick={() => {\n    console.log(\"New Polygon 4 clicked\");\n    handlePolygonClick(newPolygonCoords4);  // Zoom into the new polygon\n  }}\n/>\n      </GoogleMap>\n    </div>\n  ) : <></>;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}