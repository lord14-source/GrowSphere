{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, InfoWindow, LoadScript, Marker } from \"@react-google-maps/api\";\nimport React, { useRef, useState } from \"react\";\nconst MapComponent = () => {\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const mapRef = useRef(null);\n\n  // Sample marker data with coordinates, title, description, and image URL\n  const markers = [{\n    id: 1,\n    lat: 25.774,\n    lng: -80.190,\n    title: \"Farm 1\",\n    description: \"This is Farm 1. Yield forecast is 65%.\",\n    imageUrl: \"https://via.placeholder.com/100\",\n    yieldForecast: 65\n  }, {\n    id: 2,\n    lat: 18.466,\n    lng: -66.118,\n    title: \"Farm 2\",\n    description: \"This is Farm 2. Yield forecast is 85%.\",\n    imageUrl: \"https://via.placeholder.com/100\",\n    yieldForecast: 85\n  }, {\n    id: 3,\n    lat: 32.321,\n    lng: -64.757,\n    title: \"Farm 3\",\n    description: \"This is Farm 3. Yield forecast is 40%.\",\n    imageUrl: \"https://via.placeholder.com/100\",\n    yieldForecast: 40\n  }];\n\n  // Function to determine marker color based on yield forecast\n  const getMarkerIcon = yieldForecast => {\n    if (yieldForecast < 50) {\n      return \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"; // Red marker for low yield\n    } else if (yieldForecast >= 50 && yieldForecast < 75) {\n      return \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"; // Yellow marker for medium yield\n    } else {\n      return \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"; // Green marker for high yield\n    }\n  };\n\n  // Function to calculate map center\n  const calculateCenter = () => {\n    const totalLat = markers.reduce((acc, marker) => acc + marker.lat, 0);\n    const totalLng = markers.reduce((acc, marker) => acc + marker.lng, 0);\n    return {\n      lat: totalLat / markers.length,\n      lng: totalLng / markers.length\n    };\n  };\n\n  // Function to adjust map bounds to fit all markers\n  const fitMapToBounds = mapInstance => {\n    const bounds = new window.google.maps.LatLngBounds();\n    markers.forEach(marker => {\n      bounds.extend({\n        lat: marker.lat,\n        lng: marker.lng\n      });\n    });\n    mapInstance.fitBounds(bounds);\n  };\n  return /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyD0KaEX-bXcnOS7XFfLKnVyiet_Kfi-8xM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    onLoad: mapInstance => {\n      fitMapToBounds(mapInstance);\n      mapRef.current = mapInstance;\n    },\n    mapContainerStyle: {\n      height: \"400px\",\n      width: \"100%\"\n    },\n    center: calculateCenter() // Dynamically set center\n    ,\n    zoom: 5 // Initial zoom level\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.id,\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: getMarkerIcon(marker.yieldForecast),\n    onClick: () => setSelectedMarker(marker),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), selectedMarker && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selectedMarker.lat,\n      lng: selectedMarker.lng\n    },\n    onCloseClick: () => setSelectedMarker(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"10px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: \"#000080\",\n      fontSize: \"18px\",\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, selectedMarker.title), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: \"14px\",\n      color: \"#333\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, selectedMarker.description), /*#__PURE__*/React.createElement(\"img\", {\n    src: selectedMarker.imageUrl,\n    alt: selectedMarker.title,\n    style: {\n      width: \"100px\",\n      height: \"auto\",\n      borderRadius: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginTop: \"10px\",\n      backgroundColor: \"#4CAF50\",\n      color: \"white\",\n      padding: \"5px 10px\",\n      border: \"none\",\n      borderRadius: \"5px\",\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Learn More\")))));\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","InfoWindow","LoadScript","Marker","React","useRef","useState","MapComponent","selectedMarker","setSelectedMarker","mapRef","markers","id","lat","lng","title","description","imageUrl","yieldForecast","getMarkerIcon","calculateCenter","totalLat","reduce","acc","marker","totalLng","length","fitMapToBounds","mapInstance","bounds","window","google","maps","LatLngBounds","forEach","extend","fitBounds","createElement","googleMapsApiKey","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onLoad","current","mapContainerStyle","height","width","center","zoom","map","key","position","icon","onClick","onCloseClick","style","padding","textAlign","color","fontSize","marginBottom","src","alt","borderRadius","marginTop","backgroundColor","border","cursor"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, InfoWindow, LoadScript, Marker } from \"@react-google-maps/api\";\nimport React, { useRef, useState } from \"react\";\n\nconst MapComponent = () => {\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const mapRef = useRef(null);\n\n  // Sample marker data with coordinates, title, description, and image URL\n  const markers = [\n    {\n      id: 1,\n      lat: 25.774,\n      lng: -80.190,\n      title: \"Farm 1\",\n      description: \"This is Farm 1. Yield forecast is 65%.\",\n      imageUrl: \"https://via.placeholder.com/100\",\n      yieldForecast: 65,\n    },\n    {\n      id: 2,\n      lat: 18.466,\n      lng: -66.118,\n      title: \"Farm 2\",\n      description: \"This is Farm 2. Yield forecast is 85%.\",\n      imageUrl: \"https://via.placeholder.com/100\",\n      yieldForecast: 85,\n    },\n    {\n      id: 3,\n      lat: 32.321,\n      lng: -64.757,\n      title: \"Farm 3\",\n      description: \"This is Farm 3. Yield forecast is 40%.\",\n      imageUrl: \"https://via.placeholder.com/100\",\n      yieldForecast: 40,\n    },\n  ];\n\n  // Function to determine marker color based on yield forecast\n  const getMarkerIcon = (yieldForecast) => {\n    if (yieldForecast < 50) {\n      return \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"; // Red marker for low yield\n    } else if (yieldForecast >= 50 && yieldForecast < 75) {\n      return \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"; // Yellow marker for medium yield\n    } else {\n      return \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"; // Green marker for high yield\n    }\n  };\n\n  // Function to calculate map center\n  const calculateCenter = () => {\n    const totalLat = markers.reduce((acc, marker) => acc + marker.lat, 0);\n    const totalLng = markers.reduce((acc, marker) => acc + marker.lng, 0);\n    return {\n      lat: totalLat / markers.length,\n      lng: totalLng / markers.length,\n    };\n  };\n\n  // Function to adjust map bounds to fit all markers\n  const fitMapToBounds = (mapInstance) => {\n    const bounds = new window.google.maps.LatLngBounds();\n    markers.forEach((marker) => {\n      bounds.extend({ lat: marker.lat, lng: marker.lng });\n    });\n    mapInstance.fitBounds(bounds);\n  };\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyD0KaEX-bXcnOS7XFfLKnVyiet_Kfi-8xM\">\n      <GoogleMap\n        onLoad={(mapInstance) => {\n          fitMapToBounds(mapInstance);\n          mapRef.current = mapInstance;\n        }}\n        mapContainerStyle={{ height: \"400px\", width: \"100%\" }}\n        center={calculateCenter()} // Dynamically set center\n        zoom={5} // Initial zoom level\n      >\n        {markers.map((marker) => (\n          <Marker\n            key={marker.id}\n            position={{ lat: marker.lat, lng: marker.lng }}\n            icon={getMarkerIcon(marker.yieldForecast)}\n            onClick={() => setSelectedMarker(marker)}\n          />\n        ))}\n\n        {selectedMarker && (\n          <InfoWindow\n            position={{ lat: selectedMarker.lat, lng: selectedMarker.lng }}\n            onCloseClick={() => setSelectedMarker(null)}\n          >\n            <div style={{ padding: \"10px\", textAlign: \"center\" }}>\n              <h4 style={{ color: \"#000080\", fontSize: \"18px\", marginBottom: \"8px\" }}>\n                {selectedMarker.title}\n              </h4>\n              <p style={{ fontSize: \"14px\", color: \"#333\" }}>\n                {selectedMarker.description}\n              </p>\n              <img\n                src={selectedMarker.imageUrl}\n                alt={selectedMarker.title}\n                style={{ width: \"100px\", height: \"auto\", borderRadius: \"8px\" }}\n              />\n              <button\n                style={{\n                  marginTop: \"10px\",\n                  backgroundColor: \"#4CAF50\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  border: \"none\",\n                  borderRadius: \"5px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                Learn More\n              </button>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAClF,OAAOC,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMI,MAAM,GAAGL,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACA,MAAMM,OAAO,GAAG,CACd;IACEC,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE,MAAM;IACXC,GAAG,EAAE,CAAC,MAAM;IACZC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,wCAAwC;IACrDC,QAAQ,EAAE,iCAAiC;IAC3CC,aAAa,EAAE;EACjB,CAAC,EACD;IACEN,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE,MAAM;IACXC,GAAG,EAAE,CAAC,MAAM;IACZC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,wCAAwC;IACrDC,QAAQ,EAAE,iCAAiC;IAC3CC,aAAa,EAAE;EACjB,CAAC,EACD;IACEN,EAAE,EAAE,CAAC;IACLC,GAAG,EAAE,MAAM;IACXC,GAAG,EAAE,CAAC,MAAM;IACZC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,wCAAwC;IACrDC,QAAQ,EAAE,iCAAiC;IAC3CC,aAAa,EAAE;EACjB,CAAC,CACF;;EAED;EACA,MAAMC,aAAa,GAAID,aAAa,IAAK;IACvC,IAAIA,aAAa,GAAG,EAAE,EAAE;MACtB,OAAO,sDAAsD,CAAC,CAAC;IACjE,CAAC,MAAM,IAAIA,aAAa,IAAI,EAAE,IAAIA,aAAa,GAAG,EAAE,EAAE;MACpD,OAAO,yDAAyD,CAAC,CAAC;IACpE,CAAC,MAAM;MACL,OAAO,wDAAwD,CAAC,CAAC;IACnE;EACF,CAAC;;EAED;EACA,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,QAAQ,GAAGV,OAAO,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAKD,GAAG,GAAGC,MAAM,CAACX,GAAG,EAAE,CAAC,CAAC;IACrE,MAAMY,QAAQ,GAAGd,OAAO,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAKD,GAAG,GAAGC,MAAM,CAACV,GAAG,EAAE,CAAC,CAAC;IACrE,OAAO;MACLD,GAAG,EAAEQ,QAAQ,GAAGV,OAAO,CAACe,MAAM;MAC9BZ,GAAG,EAAEW,QAAQ,GAAGd,OAAO,CAACe;IAC1B,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,WAAW,IAAK;IACtC,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC,CAAC;IACpDtB,OAAO,CAACuB,OAAO,CAAEV,MAAM,IAAK;MAC1BK,MAAM,CAACM,MAAM,CAAC;QAAEtB,GAAG,EAAEW,MAAM,CAACX,GAAG;QAAEC,GAAG,EAAEU,MAAM,CAACV;MAAI,CAAC,CAAC;IACrD,CAAC,CAAC;IACFc,WAAW,CAACQ,SAAS,CAACP,MAAM,CAAC;EAC/B,CAAC;EAED,oBACEzB,KAAA,CAAAiC,aAAA,CAACnC,UAAU;IAACoC,gBAAgB,EAAC,yCAAyC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpExC,KAAA,CAAAiC,aAAA,CAACrC,SAAS;IACR6C,MAAM,EAAGjB,WAAW,IAAK;MACvBD,cAAc,CAACC,WAAW,CAAC;MAC3BlB,MAAM,CAACoC,OAAO,GAAGlB,WAAW;IAC9B,CAAE;IACFmB,iBAAiB,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IACtDC,MAAM,EAAE9B,eAAe,CAAC,CAAE,CAAC;IAAA;IAC3B+B,IAAI,EAAE,CAAE,CAAC;IAAA;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAERjC,OAAO,CAACyC,GAAG,CAAE5B,MAAM,iBAClBpB,KAAA,CAAAiC,aAAA,CAAClC,MAAM;IACLkD,GAAG,EAAE7B,MAAM,CAACZ,EAAG;IACf0C,QAAQ,EAAE;MAAEzC,GAAG,EAAEW,MAAM,CAACX,GAAG;MAAEC,GAAG,EAAEU,MAAM,CAACV;IAAI,CAAE;IAC/CyC,IAAI,EAAEpC,aAAa,CAACK,MAAM,CAACN,aAAa,CAAE;IAC1CsC,OAAO,EAAEA,CAAA,KAAM/C,iBAAiB,CAACe,MAAM,CAAE;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1C,CACF,CAAC,EAEDpC,cAAc,iBACbJ,KAAA,CAAAiC,aAAA,CAACpC,UAAU;IACTqD,QAAQ,EAAE;MAAEzC,GAAG,EAAEL,cAAc,CAACK,GAAG;MAAEC,GAAG,EAAEN,cAAc,CAACM;IAAI,CAAE;IAC/D2C,YAAY,EAAEA,CAAA,KAAMhD,iBAAiB,CAAC,IAAI,CAAE;IAAA8B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE5CxC,KAAA,CAAAiC,aAAA;IAAKqB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnDxC,KAAA,CAAAiC,aAAA;IAAIqB,KAAK,EAAE;MAAEG,KAAK,EAAE,SAAS;MAAEC,QAAQ,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAM,CAAE;IAAAxB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpEpC,cAAc,CAACO,KACd,CAAC,eACLX,KAAA,CAAAiC,aAAA;IAAGqB,KAAK,EAAE;MAAEI,QAAQ,EAAE,MAAM;MAAED,KAAK,EAAE;IAAO,CAAE;IAAAtB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3CpC,cAAc,CAACQ,WACf,CAAC,eACJZ,KAAA,CAAAiC,aAAA;IACE2B,GAAG,EAAExD,cAAc,CAACS,QAAS;IAC7BgD,GAAG,EAAEzD,cAAc,CAACO,KAAM;IAC1B2C,KAAK,EAAE;MAAET,KAAK,EAAE,OAAO;MAAED,MAAM,EAAE,MAAM;MAAEkB,YAAY,EAAE;IAAM,CAAE;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChE,CAAC,eACFxC,KAAA,CAAAiC,aAAA;IACEqB,KAAK,EAAE;MACLS,SAAS,EAAE,MAAM;MACjBC,eAAe,EAAE,SAAS;MAC1BP,KAAK,EAAE,OAAO;MACdF,OAAO,EAAE,UAAU;MACnBU,MAAM,EAAE,MAAM;MACdH,YAAY,EAAE,KAAK;MACnBI,MAAM,EAAE;IACV,CAAE;IAAA/B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACH,YAEO,CACL,CACK,CAEL,CACD,CAAC;AAEjB,CAAC;AAED,eAAerC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}