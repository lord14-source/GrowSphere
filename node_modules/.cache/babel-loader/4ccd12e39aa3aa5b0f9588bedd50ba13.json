{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\nconst center = {\n  lat: 23.3441,\n  lng: 85.3096\n};\n\n// Define polygon paths for different areas\nconst zones = {\n  zone1: [{\n    lat: 23.467,\n    lng: 85.268\n  }, {\n    lat: 23.464,\n    lng: 85.310\n  }\n  // ... additional coordinates\n  ],\n  zone2: [{\n    lat: 23.789,\n    lng: 86.254\n  }, {\n    lat: 23.789,\n    lng: 86.287\n  }\n  // ... additional coordinates\n  ]\n  // Add more zones as needed\n};\n\n// Define icons for the regions\nconst markers = [{\n  position: {\n    lat: 23.442592425229485,\n    lng: 85.4608527\n  },\n  // Example location\n  label: 'P115',\n  icon: 'path/to/custom-icon.png' // Replace with your own icon\n}\n// Add more marker objects for other locations\n];\nfunction MapComponent() {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'YOUR_API_KEY' // Replace with your API key\n  });\n  const polygonOptions = color => ({\n    fillColor: color,\n    strokeColor: 'darkblue',\n    strokeOpacity: 1,\n    strokeWeight: 2\n  });\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, Object.entries(zones).map(([zoneName, coords], index) => /*#__PURE__*/React.createElement(PolygonF, {\n    key: zoneName,\n    paths: coords,\n    options: polygonOptions(index % 2 === 0 ? 'rgba(0, 150, 150, 0.6)' : 'rgba(150, 0, 150, 0.6)'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), markers.map((marker, index) => /*#__PURE__*/React.createElement(MarkerF, {\n    key: index,\n    position: marker.position,\n    label: {\n      text: marker.label,\n      color: 'black',\n      fontSize: '14px',\n      fontWeight: 'bold'\n    },\n    icon: marker.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","MarkerF","PolygonF","useJsApiLoader","React","containerStyle","width","height","center","lat","lng","zones","zone1","zone2","markers","position","label","icon","MapComponent","isLoaded","id","googleMapsApiKey","polygonOptions","color","fillColor","strokeColor","strokeOpacity","strokeWeight","createElement","mapContainerStyle","zoom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","zoneName","coords","index","key","paths","options","marker","text","fontSize","fontWeight","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\nconst center = {\n  lat: 23.3441,\n  lng: 85.3096,\n};\n\n// Define polygon paths for different areas\nconst zones = {\n  zone1: [\n    { lat: 23.467, lng: 85.268 },\n    { lat: 23.464, lng: 85.310 },\n    // ... additional coordinates\n  ],\n  zone2: [\n    { lat: 23.789, lng: 86.254 },\n    { lat: 23.789, lng: 86.287 },\n    // ... additional coordinates\n  ],\n  // Add more zones as needed\n};\n\n// Define icons for the regions\nconst markers = [\n  {\n    position: { lat: 23.442592425229485, lng: 85.4608527 }, // Example location\n    label: 'P115',\n    icon: 'path/to/custom-icon.png', // Replace with your own icon\n  },\n  // Add more marker objects for other locations\n];\n\nfunction MapComponent() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'YOUR_API_KEY', // Replace with your API key\n  });\n\n  const polygonOptions = (color) => ({\n    fillColor: color,\n    strokeColor: 'darkblue',\n    strokeOpacity: 1,\n    strokeWeight: 2,\n  });\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={6}\n    >\n      {/* Polygons for all zones */}\n      {Object.entries(zones).map(([zoneName, coords], index) => (\n        <PolygonF\n          key={zoneName}\n          paths={coords}\n          options={polygonOptions(index % 2 === 0 ? 'rgba(0, 150, 150, 0.6)' : 'rgba(150, 0, 150, 0.6)')}\n        />\n      ))}\n\n      {/* Markers for important places */}\n      {markers.map((marker, index) => (\n        <MarkerF\n          key={index}\n          position={marker.position}\n          label={{\n            text: marker.label,\n            color: 'black',\n            fontSize: '14px',\n            fontWeight: 'bold',\n          }}\n          icon={marker.icon}\n        />\n      ))}\n    </GoogleMap>\n  ) : <></>;\n}\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}