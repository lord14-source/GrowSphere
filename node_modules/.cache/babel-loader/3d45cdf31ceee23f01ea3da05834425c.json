{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useState } from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to India level\nconst center = {\n  lat: 20.5937,\n  // Latitude of India\n  lng: 78.9629 // Longitude of India\n};\nconst zoomLevel = 5; // Adjusted zoom level for the India view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [{\n  lat: 24.4125,\n  lng: 83.4258\n}, {\n  lat: 22.5828,\n  lng: 84.0825\n}, {\n  lat: 22.1931,\n  lng: 85.0492\n}, {\n  lat: 22.3264,\n  lng: 86.4536\n}, {\n  lat: 22.6908,\n  lng: 86.5150\n}, {\n  lat: 23.3169,\n  lng: 85.8747\n}, {\n  lat: 23.6617,\n  lng: 86.6256\n}, {\n  lat: 24.5783,\n  lng: 87.8997\n}, {\n  lat: 25.1028,\n  lng: 87.7900\n}, {\n  lat: 25.1114,\n  lng: 87.2681\n}, {\n  lat: 24.8217,\n  lng: 85.7231\n}, {\n  lat: 24.5261,\n  lng: 83.4228\n} // Closing the polygon\n];\n\n// Coordinates for Ranchi\nconst ranchiCoords = [{\n  lat: 23.3697,\n  lng: 85.2203\n}, {\n  lat: 23.3181,\n  lng: 85.2467\n}, {\n  lat: 23.2417,\n  lng: 85.3036\n}, {\n  lat: 23.3111,\n  lng: 85.3928\n}, {\n  lat: 23.3886,\n  lng: 85.4356\n}, {\n  lat: 23.4058,\n  lng: 85.4153\n}, {\n  lat: 23.4394,\n  lng: 85.3589\n}, {\n  lat: 23.4481,\n  lng: 85.3019\n}, {\n  lat: 23.4058,\n  lng: 85.2614\n}, {\n  lat: 23.4281,\n  lng: 85.2169\n}];\n\n// Updated coordinates for polygons\n\nconst newPolygonCoords = [{\n  lat: 23.4908,\n  lng: 85.4683\n}, {\n  lat: 23.4836,\n  lng: 85.4647\n}, {\n  lat: 23.4794,\n  lng: 85.4678\n}, {\n  lat: 23.4769,\n  lng: 85.4725\n}, {\n  lat: 23.4758,\n  lng: 85.4803\n}, {\n  lat: 23.4800,\n  lng: 85.4850\n}, {\n  lat: 23.4819,\n  lng: 85.4872\n}, {\n  lat: 23.4911,\n  lng: 85.4889\n}, {\n  lat: 23.4900,\n  lng: 85.4753\n}, {\n  lat: 23.4917,\n  lng: 85.4686\n} // Closing the polygon\n];\nconst redPolygonCoords = [{\n  lat: 23.4525,\n  lng: 85.4569\n}, {\n  lat: 23.4453,\n  lng: 85.4525\n}, {\n  lat: 23.4382,\n  lng: 85.4620\n}, {\n  lat: 23.4284,\n  lng: 85.4708\n}, {\n  lat: 23.4289,\n  lng: 85.4739\n}, {\n  lat: 23.4372,\n  lng: 85.4738\n}, {\n  lat: 23.4460,\n  lng: 85.4800\n}, {\n  lat: 23.4500,\n  lng: 85.4713\n}, {\n  lat: 23.4515,\n  lng: 85.4703\n}, {\n  lat: 23.4512,\n  lng: 85.4621\n} // Closing the array properly\n];\nconst yellowPolygonCoords = [{\n  lat: 23.4425,\n  lng: 85.4603\n},\n// 23°26'33\"N, 85°27'37\"E\n{\n  lat: 23.4428,\n  lng: 85.4606\n},\n// 23°26'34\"N, 85°27'38\"E\n{\n  lat: 23.4431,\n  lng: 85.4603\n},\n// 23°26'35\"N, 85°27'37\"E\n{\n  lat: 23.4425,\n  lng: 85.4599\n} // Closing the polygon\n];\nconst newPolygonNearbyCoords = [{\n  lat: 23.4422,\n  lng: 85.4603\n},\n// 23°26'32\"N, 85°27'37\"E\n{\n  lat: 23.4422,\n  lng: 85.4608\n},\n// 23°26'32\"N, 85°27'39\"E\n{\n  lat: 23.4425,\n  lng: 85.4611\n},\n// 23°26'33\"N, 85°27'40\"E\n{\n  lat: 23.4428,\n  lng: 85.4606\n},\n// 23°26'34\"N, 85°27'38\"E\n{\n  lat: 23.4425,\n  lng: 85.4603\n} // Closing the polygon\n];\nconst thirdPolygonCoords = [{\n  lat: 23.44167,\n  lng: 85.45972\n},\n// 23°26'30\"N, 85°27'35\"E\n{\n  lat: 23.44167,\n  lng: 85.46000\n},\n// 23°26'30\"N, 85°27'36\"E\n{\n  lat: 23.44222,\n  lng: 85.46028\n},\n// 23°26'32\"N, 85°27'37\"E\n{\n  lat: 23.44222,\n  lng: 85.46056\n},\n// 23°26'32\"N, 85°27'38\"E\n{\n  lat: 23.44250,\n  lng: 85.46028\n},\n// 23°26'33\"N, 85°27'37\"E\n{\n  lat: 23.44250,\n  lng: 85.46000\n},\n// 23°26'33\"N, 85°27'36\"E\n{\n  lat: 23.44194,\n  lng: 85.45944\n},\n// 23°26'31\"N, 85°27'34\"E\n{\n  lat: 23.44194,\n  lng: 85.45972\n},\n// 23°26'31\"N, 85°27'35\"E\n{\n  lat: 23.44167,\n  lng: 85.45972\n} // Closing the polygon (touching)\n];\nconst additionalPolygon1Coords = [\n// { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N, 85°27'37\"E\n// { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n// { lat: 23.4431, lng: 85.4603 },  // 23°26'35\"N, 85°27'37\"E\n// { lat: 23.4428, lng: 85.4600 },// Closing the polygon\n{\n  lat: 23.44139,\n  lng: 85.46028\n},\n// 23°26'29\"N, 85°27'37\"E\n{\n  lat: 23.44139,\n  lng: 85.46056\n},\n// 23°26'29\"N, 85°27'38\"E\n{\n  lat: 23.44167,\n  lng: 85.46056\n},\n// 23°26'30\"N, 85°27'38\"E\n{\n  lat: 23.44194,\n  lng: 85.46083\n},\n// 23°26'31\"N, 85°27'39\"E\n{\n  lat: 23.44222,\n  lng: 85.46056\n},\n// 23°26'32\"N, 85°27'38\"E\n{\n  lat: 23.44194,\n  lng: 85.46028\n},\n// 23°26'31\"N, 85°27'37\"E\n{\n  lat: 23.44167,\n  lng: 85.46000\n},\n// 23°26'30\"N, 85°27'36\"E\n{\n  lat: 23.44139,\n  lng: 85.46028\n}];\nconst polygonCoords1 = [{\n  lat: 23.44111,\n  lng: 85.46083\n},\n// 23°26'28\"N, 85°27'39\"E\n{\n  lat: 23.44111,\n  lng: 85.46139\n},\n// 23°26'28\"N, 85°27'41\"E\n{\n  lat: 23.44139,\n  lng: 85.46139\n},\n// 23°26'29\"N, 85°27'41\"E\n{\n  lat: 23.44167,\n  lng: 85.46111\n},\n// 23°26'30\"N, 85°27'40\"E\n{\n  lat: 23.44167,\n  lng: 85.46083\n},\n// 23°26'30\"N, 85°27'39\"E\n{\n  lat: 23.44167,\n  lng: 85.46056\n},\n// 23°26'30\"N, 85°27'38\"E\n{\n  lat: 23.44194,\n  lng: 85.46083\n},\n// 23°26'31\"N, 85°27'39\"E\n{\n  lat: 23.44139,\n  lng: 85.46056\n},\n// 23°26'29\"N, 85°27'38\"E\n{\n  lat: 23.44111,\n  lng: 85.46083\n} // 23°26'31\"N, 85°27'37\"E\n];\nconst polygonCoords2 = [{\n  lat: 23.44167,\n  lng: 85.46139\n},\n// 23°26'30\"N, 85°27'41\"E\n{\n  lat: 23.44139,\n  lng: 85.46167\n},\n// 23°26'29\"N, 85°27'42\"E\n{\n  lat: 23.44194,\n  lng: 85.46222\n},\n// 23°26'31\"N, 85°27'44\"E\n{\n  lat: 23.44222,\n  lng: 85.46167\n},\n// 23°26'32\"N, 85°27'42\"E\n{\n  lat: 23.44167,\n  lng: 85.46139\n} // 23°26'34\"N, 85°27'35\"E\n];\nconst nextRightBorderPolygonCoords = [{\n  lat: 23.4417,\n  lng: 85.4611\n},\n// 23°26'30\"N, 85°27'40\"E\n{\n  lat: 23.4422,\n  lng: 85.4614\n},\n// 23°26'32\"N, 85°27'41\"E\n{\n  lat: 23.4425,\n  lng: 85.4611\n},\n// 23°26'33\"N, 85°27'40\"E\n{\n  lat: 23.4420,\n  lng: 85.4608\n} // Closing the polygon\n];\nconst polygonCoords3 = [{\n  lat: 23.44306,\n  lng: 85.46028\n}, {\n  lat: 23.44333,\n  lng: 85.46000\n}, {\n  lat: 23.44361,\n  lng: 85.45889\n}, {\n  lat: 23.44361,\n  lng: 85.45944\n}, {\n  lat: 23.44333,\n  lng: 85.45917\n}, {\n  lat: 23.44333,\n  lng: 85.45944\n}, {\n  lat: 23.44306,\n  lng: 85.45944\n}, {\n  lat: 23.44278,\n  lng: 85.45944\n}, {\n  lat: 23.44250,\n  lng: 85.45944\n}, {\n  lat: 23.44250,\n  lng: 85.45944\n}, {\n  lat: 23.44278,\n  lng: 85.46000\n}, {\n  lat: 23.44306,\n  lng: 85.46028\n} // 23°26'33\"N, 85°27'35\"E\n];\n\n// Coordinates for Casa Blanca Estate in Rukka, Jharkhand\nconst casaBlancaCoords = {\n  lat: 23.443576748453125,\n  lng: 85.46080978467886\n};\n\n// Coordinates for Ormanji\nconst ormanjiCoords = {\n  lat: 23.3680,\n  lng: 85.3200\n};\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n  const [map, setMap] = useState(null);\n  const handlePolygonClick = (polygonCoords, zoomLevel) => {\n    // Calculate the center of the polygon (can also use a predefined center)\n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n    const polygonCenter = bounds.getCenter();\n\n    // Set the map's center and zoom level\n    map.setCenter(polygonCenter);\n    map.setZoom(zoomLevel);\n  };\n  const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true);\n  const [showRanchiPolygon, setShowRanchiPolygon] = useState(true);\n  const [showNewPolygon, setShowNewPolygon] = useState(true);\n  const [showRedPolygon, setShowRedPolygon] = useState(true);\n  const [showYellowPolygon, setShowYellowPolygon] = useState(true);\n  const [showNewPolygonNearbyCoords, setShowNewPolygonNearbyCoords] = useState(true);\n  const [showThirdPolygonCoords, setShowThirdPolygonCoords] = useState(true);\n  const [showCasaBlanca, setShowCasaBlanca] = useState(true);\n  const [shownextRightBorderPolygonCoords, setShownextRightBorderPolygonCoords] = useState(true);\n  const [showadditionalPolygon1Coords, setShowadditionalPolygon1Coords] = useState(true);\n  const [showPolygon, setShowPolygon] = useState(true);\n  const [showPolygon2, setShowPolygon2] = useState(true);\n  const [showPolygon3, setShowPolygon3] = useState(true);\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, showJharkhandPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: jharkhandCoords,\n    options: {\n      fillColor: '#00FF00',\n      strokeColor: '#000000'\n    },\n    onClick: () => handlePolygonClick(jharkhandCoords, 8),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }), showRanchiPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: ranchiCoords,\n    options: {\n      fillColor: '#FF0000',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), showNewPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords,\n    options: {\n      fillColor: '#FFA500',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }), showRedPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: redPolygonCoords,\n    options: {\n      fillColor: '#FF0000',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }), showYellowPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: yellowPolygonCoords,\n    options: {\n      fillColor: '#FFFF00',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), showNewPolygonNearbyCoords && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonNearbyCoords,\n    options: {\n      fillColor: '#00FFFF',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }), showThirdPolygonCoords && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: thirdPolygonCoords,\n    options: {\n      fillColor: '#FF69B4',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }), shownextRightBorderPolygonCoords && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: nextRightBorderPolygonCoords,\n    options: {\n      fillColor: '#FF69B4',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }), showadditionalPolygon1Coords && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: additionalPolygon1Coords,\n    options: {\n      fillColor: '#FF69B4',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }), showPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: polygonCoords1,\n    options: {\n      fillColor: '#FF0000',\n      strokeColor: '#000000',\n      strokeWeight: 2,\n      fillOpacity: 0.6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }), showPolygon2 && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: polygonCoords2,\n    options: {\n      fillColor: '#FF0000',\n      strokeColor: '#000000',\n      strokeWeight: 2,\n      fillOpacity: 0.6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }), showCasaBlanca && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MarkerF, {\n    position: casaBlancaCoords,\n    label: \"Casa Blanca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: [casaBlancaCoords],\n    options: {\n      fillColor: '#FF0000',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  })), showPolygon3 && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: polygonCoords3,\n    options: {\n      fillColor: '#0000FF',\n      strokeColor: '#000000',\n      strokeWeight: 2,\n      fillOpacity: 0.6\n    } // Blue color\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","MarkerF","PolygonF","useJsApiLoader","React","useState","containerStyle","width","height","center","lat","lng","zoomLevel","jharkhandCoords","ranchiCoords","newPolygonCoords","redPolygonCoords","yellowPolygonCoords","newPolygonNearbyCoords","thirdPolygonCoords","additionalPolygon1Coords","polygonCoords1","polygonCoords2","nextRightBorderPolygonCoords","polygonCoords3","casaBlancaCoords","ormanjiCoords","MapComponent","isLoaded","id","googleMapsApiKey","map","setMap","handlePolygonClick","polygonCoords","bounds","window","google","maps","LatLngBounds","forEach","coord","extend","polygonCenter","getCenter","setCenter","setZoom","showJharkhandPolygon","setShowJharkhandPolygon","showRanchiPolygon","setShowRanchiPolygon","showNewPolygon","setShowNewPolygon","showRedPolygon","setShowRedPolygon","showYellowPolygon","setShowYellowPolygon","showNewPolygonNearbyCoords","setShowNewPolygonNearbyCoords","showThirdPolygonCoords","setShowThirdPolygonCoords","showCasaBlanca","setShowCasaBlanca","shownextRightBorderPolygonCoords","setShownextRightBorderPolygonCoords","showadditionalPolygon1Coords","setShowadditionalPolygon1Coords","showPolygon","setShowPolygon","showPolygon2","setShowPolygon2","showPolygon3","setShowPolygon3","createElement","mapContainerStyle","zoom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","paths","options","fillColor","strokeColor","onClick","strokeWeight","fillOpacity","Fragment","position","label"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useState } from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to India level\nconst center = {\n  lat: 20.5937,  // Latitude of India\n  lng: 78.9629,  // Longitude of India\n};\n\nconst zoomLevel = 5;  // Adjusted zoom level for the India view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  { lat: 24.4125, lng: 83.4258 },\n  { lat: 22.5828, lng: 84.0825 },\n  { lat: 22.1931, lng: 85.0492 },\n  { lat: 22.3264, lng: 86.4536 },\n  { lat: 22.6908, lng: 86.5150 },\n  { lat: 23.3169, lng: 85.8747 },\n  { lat: 23.6617, lng: 86.6256 },\n  { lat: 24.5783, lng: 87.8997 },\n  { lat: 25.1028, lng: 87.7900 },\n  { lat: 25.1114, lng: 87.2681 },\n  { lat: 24.8217, lng: 85.7231 },\n  { lat: 24.5261, lng: 83.4228 }, // Closing the polygon\n];\n\n// Coordinates for Ranchi\nconst ranchiCoords = [\n  { lat: 23.3697, lng: 85.2203 },\n  { lat: 23.3181, lng: 85.2467 },\n  { lat: 23.2417, lng: 85.3036 },\n  { lat: 23.3111, lng: 85.3928 },\n  { lat: 23.3886, lng: 85.4356 },\n  { lat: 23.4058, lng: 85.4153 },\n  { lat: 23.4394, lng: 85.3589 },\n  { lat: 23.4481, lng: 85.3019 },\n  { lat: 23.4058, lng: 85.2614 },\n  { lat: 23.4281, lng: 85.2169 },\n];\n\n// Updated coordinates for polygons\n\nconst newPolygonCoords = [\n  { lat: 23.4908, lng: 85.4683 },\n  { lat: 23.4836, lng: 85.4647 },\n  { lat: 23.4794, lng: 85.4678 },\n  { lat: 23.4769, lng: 85.4725 },\n  { lat: 23.4758, lng: 85.4803 },\n  { lat: 23.4800, lng: 85.4850 },\n  { lat: 23.4819, lng: 85.4872 },\n  { lat: 23.4911, lng: 85.4889 },\n  { lat: 23.4900, lng: 85.4753 },\n  { lat: 23.4917, lng: 85.4686 }, // Closing the polygon\n];\n\nconst redPolygonCoords = [\n    { lat: 23.4525, lng: 85.4569 },\n    { lat: 23.4453, lng: 85.4525 },\n    { lat: 23.4382, lng: 85.4620 },\n    { lat: 23.4284, lng: 85.4708 },\n    { lat: 23.4289, lng: 85.4739 },\n    { lat: 23.4372, lng: 85.4738 },\n    { lat: 23.4460, lng: 85.4800 },\n    { lat: 23.4500, lng: 85.4713 },\n    { lat: 23.4515, lng: 85.4703 },\n    { lat: 23.4512, lng: 85.4621 } // Closing the array properly\n];\n\nconst yellowPolygonCoords = [\n    { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N, 85°27'37\"E\n    { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n    { lat: 23.4431, lng: 85.4603 },  // 23°26'35\"N, 85°27'37\"E\n    { lat: 23.4425, lng: 85.4599 }, // Closing the polygon\n];\n\nconst newPolygonNearbyCoords = [\n     { lat: 23.4422, lng: 85.4603 },  // 23°26'32\"N, 85°27'37\"E\n  { lat: 23.4422, lng: 85.4608 },  // 23°26'32\"N, 85°27'39\"E\n  { lat: 23.4425, lng: 85.4611 },  // 23°26'33\"N, 85°27'40\"E\n  { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n  { lat: 23.4425, lng: 85.4603 }, // Closing the polygon\n];\n\nconst thirdPolygonCoords = [\n    { lat: 23.44167, lng: 85.45972 },  // 23°26'30\"N, 85°27'35\"E\n    { lat: 23.44167, lng: 85.46000 },  // 23°26'30\"N, 85°27'36\"E\n    { lat: 23.44222, lng: 85.46028 },  // 23°26'32\"N, 85°27'37\"E\n    { lat: 23.44222, lng: 85.46056 },  // 23°26'32\"N, 85°27'38\"E\n    { lat: 23.44250, lng: 85.46028 },  // 23°26'33\"N, 85°27'37\"E\n    { lat: 23.44250, lng: 85.46000 },  // 23°26'33\"N, 85°27'36\"E\n    { lat: 23.44194, lng: 85.45944 },  // 23°26'31\"N, 85°27'34\"E\n    { lat: 23.44194, lng: 85.45972 },  // 23°26'31\"N, 85°27'35\"E\n    { lat: 23.44167, lng: 85.45972 }, // Closing the polygon (touching)\n];\n\nconst additionalPolygon1Coords = [\n    // { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N, 85°27'37\"E\n    // { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n    // { lat: 23.4431, lng: 85.4603 },  // 23°26'35\"N, 85°27'37\"E\n    // { lat: 23.4428, lng: 85.4600 },// Closing the polygon\n    { lat: 23.44139, lng: 85.46028 },  // 23°26'29\"N, 85°27'37\"E\n    { lat: 23.44139, lng: 85.46056 },  // 23°26'29\"N, 85°27'38\"E\n    { lat: 23.44167, lng: 85.46056 },  // 23°26'30\"N, 85°27'38\"E\n    { lat: 23.44194, lng: 85.46083 },  // 23°26'31\"N, 85°27'39\"E\n    { lat: 23.44222, lng: 85.46056 },  // 23°26'32\"N, 85°27'38\"E\n    { lat: 23.44194, lng: 85.46028 },  // 23°26'31\"N, 85°27'37\"E\n    { lat: 23.44167, lng: 85.46000 },  // 23°26'30\"N, 85°27'36\"E\n    { lat: 23.44139, lng: 85.46028 },\n];\nconst polygonCoords1 = [\n    { lat: 23.44111, lng: 85.46083 },  // 23°26'28\"N, 85°27'39\"E\n    { lat: 23.44111, lng: 85.46139 },  // 23°26'28\"N, 85°27'41\"E\n    { lat: 23.44139, lng: 85.46139 },  // 23°26'29\"N, 85°27'41\"E\n    { lat: 23.44167, lng: 85.46111 },  // 23°26'30\"N, 85°27'40\"E\n    { lat: 23.44167, lng: 85.46083 },  // 23°26'30\"N, 85°27'39\"E\n    { lat: 23.44167, lng: 85.46056 },  // 23°26'30\"N, 85°27'38\"E\n    { lat: 23.44194, lng: 85.46083 },  // 23°26'31\"N, 85°27'39\"E\n    { lat: 23.44139, lng: 85.46056 },  // 23°26'29\"N, 85°27'38\"E\n    { lat: 23.44111, lng: 85.46083 },  // 23°26'31\"N, 85°27'37\"E\n  ];\n  const polygonCoords2 = [\n    { lat: 23.44167, lng: 85.46139 },  // 23°26'30\"N, 85°27'41\"E\n    { lat: 23.44139, lng: 85.46167 },  // 23°26'29\"N, 85°27'42\"E\n    { lat: 23.44194, lng: 85.46222 },  // 23°26'31\"N, 85°27'44\"E\n    { lat: 23.44222, lng: 85.46167 },  // 23°26'32\"N, 85°27'42\"E\n    { lat: 23.44167, lng: 85.46139 },// 23°26'34\"N, 85°27'35\"E\n  ];\n  \n\nconst nextRightBorderPolygonCoords = [\n    { lat: 23.4417, lng: 85.4611 },  // 23°26'30\"N, 85°27'40\"E\n    { lat: 23.4422, lng: 85.4614 },  // 23°26'32\"N, 85°27'41\"E\n    { lat: 23.4425, lng: 85.4611 },  // 23°26'33\"N, 85°27'40\"E\n    { lat: 23.4420, lng: 85.4608 },// Closing the polygon\n];\nconst polygonCoords3 = [\n    { lat: 23.44306, lng: 85.46028 },\n    { lat: 23.44333, lng: 85.46000 },\n    { lat: 23.44361, lng: 85.45889 },\n    { lat: 23.44361, lng: 85.45944 },\n    { lat: 23.44333, lng: 85.45917 },\n    { lat: 23.44333, lng: 85.45944 },\n    { lat: 23.44306, lng: 85.45944 },\n    { lat: 23.44278, lng: 85.45944 },\n    { lat: 23.44250, lng: 85.45944 },\n    { lat: 23.44250, lng: 85.45944 },\n    { lat: 23.44278, lng: 85.46000 },\n    { lat: 23.44306, lng: 85.46028 }, // 23°26'33\"N, 85°27'35\"E\n  ];\n  \n\n// Coordinates for Casa Blanca Estate in Rukka, Jharkhand\nconst casaBlancaCoords = { lat: 23.443576748453125, lng: 85.46080978467886 };\n\n// Coordinates for Ormanji\nconst ormanjiCoords = { lat: 23.3680, lng: 85.3200 };\n\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n  });\n  const [map, setMap] = useState(null);\n\n  const handlePolygonClick = (polygonCoords, zoomLevel) => {\n    // Calculate the center of the polygon (can also use a predefined center)\n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n    const polygonCenter = bounds.getCenter();\n\n    // Set the map's center and zoom level\n    map.setCenter(polygonCenter);\n    map.setZoom(zoomLevel);\n  };\n\n  const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true);\n  const [showRanchiPolygon, setShowRanchiPolygon] = useState(true);\n  const [showNewPolygon, setShowNewPolygon] = useState(true);\n  const [showRedPolygon, setShowRedPolygon] = useState(true);\n  const [showYellowPolygon, setShowYellowPolygon] = useState(true); \n  const [showNewPolygonNearbyCoords, setShowNewPolygonNearbyCoords] = useState(true);\n  const [showThirdPolygonCoords, setShowThirdPolygonCoords] = useState(true);\n  const [showCasaBlanca, setShowCasaBlanca] = useState(true);\n  const [shownextRightBorderPolygonCoords, setShownextRightBorderPolygonCoords] = useState(true);\n  const [showadditionalPolygon1Coords, setShowadditionalPolygon1Coords] = useState(true);\n  const [showPolygon, setShowPolygon] = useState(true);\n  const [showPolygon2, setShowPolygon2] = useState(true);\n  const [showPolygon3, setShowPolygon3] = useState(true);\n\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={zoomLevel}\n    >\n      {showJharkhandPolygon && (\n        <PolygonF paths={jharkhandCoords} options={{ fillColor: '#00FF00', strokeColor: '#000000' }} \n        onClick={() => handlePolygonClick(jharkhandCoords, 8)}\n        \n        />\n      )}\n\n      {showRanchiPolygon && (\n        <PolygonF paths={ranchiCoords} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n      )}\n\n      {showNewPolygon && (\n        <PolygonF paths={newPolygonCoords} options={{ fillColor: '#FFA500', strokeColor: '#000000' }} />\n      )}\n\n      {showRedPolygon && (\n        <PolygonF paths={redPolygonCoords} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n      )}\n\n      {showYellowPolygon && (\n        <PolygonF paths={yellowPolygonCoords} options={{ fillColor: '#FFFF00', strokeColor: '#000000' }} />\n      )}\n        \n      {showNewPolygonNearbyCoords && (\n        <PolygonF paths={newPolygonNearbyCoords} options={{ fillColor: '#00FFFF', strokeColor: '#000000' }} />\n      )}\n      \n      {showThirdPolygonCoords && (\n        <PolygonF paths={thirdPolygonCoords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n      )}\n        \n        {shownextRightBorderPolygonCoords && (\n        <PolygonF paths={nextRightBorderPolygonCoords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n      )}\n       {showadditionalPolygon1Coords && (\n        <PolygonF paths={additionalPolygon1Coords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n      )}\n      {showPolygon && (\n        <PolygonF\n          paths={polygonCoords1}\n          options={{ fillColor: '#FF0000', strokeColor: '#000000', strokeWeight: 2, fillOpacity: 0.6 }}\n        />\n      )}\n      {showPolygon2 && (\n        <PolygonF\n          paths={polygonCoords2}\n          options={{ fillColor: '#FF0000', strokeColor: '#000000', strokeWeight: 2, fillOpacity: 0.6 }}\n        />\n      )}\n      {showCasaBlanca && (\n        <>\n          <MarkerF position={casaBlancaCoords} label=\"Casa Blanca\" />\n          <PolygonF paths={[casaBlancaCoords]} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n        </>\n      )}\n      {showPolygon3 && (\n        <PolygonF\n          paths={polygonCoords3}\n          options={{ fillColor: '#0000FF', strokeColor: '#000000', strokeWeight: 2, fillOpacity: 0.6 }} // Blue color\n        />\n      )}\n\n    </GoogleMap>\n  ) : <></>;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}