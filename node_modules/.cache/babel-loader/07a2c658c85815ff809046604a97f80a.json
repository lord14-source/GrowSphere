{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, Marker, Polygon, useLoadScript } from \"@react-google-maps/api\";\nimport React from \"react\";\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\"\n  });\n  const polygonCoords = [\n  // Add coordinates for each polygon\n  [{\n    lat: -25.344,\n    lng: 131.036\n  },\n  // Example coords\n  {\n    lat: -25.345,\n    lng: 131.037\n  }, {\n    lat: -25.346,\n    lng: 131.038\n  }]\n  // Add more polygons if needed\n  ];\n  const markers = [{\n    position: {\n      lat: -25.344,\n      lng: 131.036\n    },\n    icon: \"path/to/custom-icon1.png\"\n  }, {\n    position: {\n      lat: -25.345,\n      lng: 131.037\n    },\n    icon: \"path/to/custom-icon2.png\"\n  }\n  // Add more markers\n  ];\n  if (!isLoaded) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: {\n      width: \"100%\",\n      height: \"500px\"\n    },\n    zoom: 10,\n    center: {\n      lat: -25.344,\n      lng: 131.036\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, polygonCoords.map((coords, index) => /*#__PURE__*/React.createElement(Polygon, {\n    key: index,\n    paths: coords,\n    options: {\n      fillColor: \"#FF0000\",\n      fillOpacity: 0.5,\n      strokeColor: \"#FF0000\",\n      strokeOpacity: 1,\n      strokeWeight: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), markers.map((marker, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: index,\n    position: marker.position,\n    icon: marker.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","Marker","Polygon","useLoadScript","React","MapComponent","isLoaded","googleMapsApiKey","polygonCoords","lat","lng","markers","position","icon","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","width","height","zoom","center","map","coords","index","key","paths","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","marker"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, Marker, Polygon, useLoadScript } from \"@react-google-maps/api\";\nimport React from \"react\";\n\nconst MapComponent = () => {\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n  });\n\n  const polygonCoords = [\n    // Add coordinates for each polygon\n    [\n      { lat: -25.344, lng: 131.036 }, // Example coords\n      { lat: -25.345, lng: 131.037 },\n      { lat: -25.346, lng: 131.038 },\n    ],\n    // Add more polygons if needed\n  ];\n\n  const markers = [\n    {\n      position: { lat: -25.344, lng: 131.036 },\n      icon: \"path/to/custom-icon1.png\",\n    },\n    {\n      position: { lat: -25.345, lng: 131.037 },\n      icon: \"path/to/custom-icon2.png\",\n    },\n    // Add more markers\n  ];\n\n  if (!isLoaded) return <div>Loading...</div>;\n\n  return (\n    <GoogleMap\n      mapContainerStyle={{ width: \"100%\", height: \"500px\" }}\n      zoom={10}\n      center={{ lat: -25.344, lng: 131.036 }}\n    >\n      {/* Add Polygons */}\n      {polygonCoords.map((coords, index) => (\n        <Polygon\n          key={index}\n          paths={coords}\n          options={{\n            fillColor: \"#FF0000\",\n            fillOpacity: 0.5,\n            strokeColor: \"#FF0000\",\n            strokeOpacity: 1,\n            strokeWeight: 2,\n          }}\n        />\n      ))}\n\n      {/* Add Markers */}\n      {markers.map((marker, index) => (\n        <Marker\n          key={index}\n          position={marker.position}\n          icon={marker.icon}\n        />\n      ))}\n    </GoogleMap>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,OAAO,EAAEC,aAAa,QAAQ,wBAAwB;AAClF,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAM;IAAEC;EAAS,CAAC,GAAGH,aAAa,CAAC;IACjCI,gBAAgB,EAAE;EACpB,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAG;EACpB;EACA,CACE;IAAEC,GAAG,EAAE,CAAC,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAAE;EAChC;IAAED,GAAG,EAAE,CAAC,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC9B;IAAED,GAAG,EAAE,CAAC,MAAM;IAAEC,GAAG,EAAE;EAAQ,CAAC;EAEhC;EAAA,CACD;EAED,MAAMC,OAAO,GAAG,CACd;IACEC,QAAQ,EAAE;MAAEH,GAAG,EAAE,CAAC,MAAM;MAAEC,GAAG,EAAE;IAAQ,CAAC;IACxCG,IAAI,EAAE;EACR,CAAC,EACD;IACED,QAAQ,EAAE;MAAEH,GAAG,EAAE,CAAC,MAAM;MAAEC,GAAG,EAAE;IAAQ,CAAC;IACxCG,IAAI,EAAE;EACR;EACA;EAAA,CACD;EAED,IAAI,CAACP,QAAQ,EAAE,oBAAOF,KAAA,CAAAU,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,YAAe,CAAC;EAE3C,oBACEhB,KAAA,CAAAU,aAAA,CAACd,SAAS;IACRqB,iBAAiB,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IACtDC,IAAI,EAAE,EAAG;IACTC,MAAM,EAAE;MAAEhB,GAAG,EAAE,CAAC,MAAM;MAAEC,GAAG,EAAE;IAAQ,CAAE;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAGtCZ,aAAa,CAACkB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC/BxB,KAAA,CAAAU,aAAA,CAACZ,OAAO;IACN2B,GAAG,EAAED,KAAM;IACXE,KAAK,EAAEH,MAAO;IACdI,OAAO,EAAE;MACPC,SAAS,EAAE,SAAS;MACpBC,WAAW,EAAE,GAAG;MAChBC,WAAW,EAAE,SAAS;MACtBC,aAAa,EAAE,CAAC;MAChBC,YAAY,EAAE;IAChB,CAAE;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CACF,CAAC,EAGDT,OAAO,CAACe,GAAG,CAAC,CAACW,MAAM,EAAET,KAAK,kBACzBxB,KAAA,CAAAU,aAAA,CAACb,MAAM;IACL4B,GAAG,EAAED,KAAM;IACXhB,QAAQ,EAAEyB,MAAM,CAACzB,QAAS;IAC1BC,IAAI,EAAEwB,MAAM,CAACxB,IAAK;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnB,CACF,CACQ,CAAC;AAEhB,CAAC;AAED,eAAef,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}