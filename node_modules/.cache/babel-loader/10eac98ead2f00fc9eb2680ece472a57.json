{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useState } from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to India level\nconst center = {\n  lat: 20.5937,\n  // Latitude of India\n  lng: 78.9629 // Longitude of India\n};\nconst zoomLevel = 5; // Adjusted zoom level for the India view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [{\n  lat: 24.4125,\n  lng: 83.4258\n}, {\n  lat: 22.5828,\n  lng: 84.0825\n}, {\n  lat: 22.1931,\n  lng: 85.0492\n}, {\n  lat: 22.3264,\n  lng: 86.4536\n}, {\n  lat: 22.6908,\n  lng: 86.5150\n}, {\n  lat: 23.3169,\n  lng: 85.8747\n}, {\n  lat: 23.6617,\n  lng: 86.6256\n}, {\n  lat: 24.5783,\n  lng: 87.8997\n}, {\n  lat: 25.1028,\n  lng: 87.7900\n}, {\n  lat: 25.1114,\n  lng: 87.2681\n}, {\n  lat: 24.8217,\n  lng: 85.7231\n}, {\n  lat: 24.5261,\n  lng: 83.4228\n} // Closing the polygon\n];\n\n// Coordinates for Ranchi\nconst ranchiCoords = [{\n  lat: 23.3697,\n  lng: 85.2203\n}, {\n  lat: 23.3181,\n  lng: 85.2467\n}, {\n  lat: 23.2417,\n  lng: 85.3036\n}, {\n  lat: 23.3111,\n  lng: 85.3928\n}, {\n  lat: 23.3886,\n  lng: 85.4356\n}, {\n  lat: 23.4058,\n  lng: 85.4153\n}, {\n  lat: 23.4394,\n  lng: 85.3589\n}, {\n  lat: 23.4481,\n  lng: 85.3019\n}, {\n  lat: 23.4058,\n  lng: 85.2614\n}, {\n  lat: 23.4281,\n  lng: 85.2169\n}];\n\n// Coordinates for the new polygon\nconst newPolygonCoords = [{\n  lat: 23.4908,\n  lng: 85.4683\n}, {\n  lat: 23.4836,\n  lng: 85.4647\n}, {\n  lat: 23.4794,\n  lng: 85.4678\n}, {\n  lat: 23.4769,\n  lng: 85.4725\n}, {\n  lat: 23.4758,\n  lng: 85.4803\n}, {\n  lat: 23.4800,\n  lng: 85.4850\n}, {\n  lat: 23.4819,\n  lng: 85.4872\n}, {\n  lat: 23.4911,\n  lng: 85.4889\n}, {\n  lat: 23.4900,\n  lng: 85.4753\n}, {\n  lat: 23.4917,\n  lng: 85.4686\n} // Closing the polygon\n];\n\n// Coordinates for the red polygon\nconst redPolygonCoords = [{\n  lat: 23.4525,\n  lng: 85.4569\n}, {\n  lat: 23.4453,\n  lng: 85.4525\n}, {\n  lat: 23.4382,\n  lng: 85.4620\n}, {\n  lat: 23.4284,\n  lng: 85.4708\n}, {\n  lat: 23.4289,\n  lng: 85.4739\n}, {\n  lat: 23.4372,\n  lng: 85.4738\n}, {\n  lat: 23.4460,\n  lng: 85.4800\n}, {\n  lat: 23.4500,\n  lng: 85.4713\n}, {\n  lat: 23.4515,\n  lng: 85.4703\n}, {\n  lat: 23.4512,\n  lng: 85.4621\n} // Removed the trailing comma\n]; // Closing the array properly\n\n// Coordinates for the yellow polygon\nconst yellowPolygonCoords = [{\n  lat: 23.4458,\n  lng: 85.4561\n}, {\n  lat: 23.4393,\n  lng: 85.4569\n}, {\n  lat: 23.4389,\n  lng: 85.4617\n}, {\n  lat: 23.4443,\n  lng: 85.4636\n}, {\n  lat: 23.4484,\n  lng: 85.4622\n}, {\n  lat: 23.4455,\n  lng: 85.4560\n}, {\n  lat: 23.4458,\n  lng: 85.4561\n} // Closing the polygon\n]; // Closing the array properly\n// Removed the trailing comma\nconst polygon1Coords = [{\n  lat: 23.4500,\n  lng: 85.4570\n}, {\n  lat: 23.4530,\n  lng: 85.4610\n}, {\n  lat: 23.4489,\n  lng: 85.4650\n}, {\n  lat: 23.4460,\n  lng: 85.4600\n}, {\n  lat: 23.4500,\n  lng: 85.4570\n} // Closing the polygon\n];\nconst polygon2Coords = [{\n  lat: 23.4480,\n  lng: 85.4500\n}, {\n  lat: 23.4450,\n  lng: 85.4530\n}, {\n  lat: 23.4410,\n  lng: 85.4520\n}, {\n  lat: 23.4440,\n  lng: 85.4480\n}, {\n  lat: 23.4480,\n  lng: 85.4500\n} // Closing the polygon\n];\nconst polygon3Coords = [{\n  lat: 23.4420,\n  lng: 85.4600\n}, {\n  lat: 23.4450,\n  lng: 85.4650\n}, {\n  lat: 23.4400,\n  lng: 85.4700\n}, {\n  lat: 23.4360,\n  lng: 85.4640\n}, {\n  lat: 23.4420,\n  lng: 85.4600\n} // Closing the polygon\n];\nconst polygon4Coords = [{\n  lat: 23.4390,\n  lng: 85.4500\n}, {\n  lat: 23.4360,\n  lng: 85.4550\n}, {\n  lat: 23.4310,\n  lng: 85.4500\n}, {\n  lat: 23.4340,\n  lng: 85.4450\n}, {\n  lat: 23.4390,\n  lng: 85.4500\n} // Closing the polygon\n];\nconst polygon5Coords = [{\n  lat: 23.4550,\n  lng: 85.4620\n}, {\n  lat: 23.4590,\n  lng: 85.4670\n}, {\n  lat: 23.4540,\n  lng: 85.4720\n}, {\n  lat: 23.4510,\n  lng: 85.4670\n}, {\n  lat: 23.4550,\n  lng: 85.4620\n} // Closing the polygon\n];\nconst polygon6Coords = [{\n  lat: 23.4600,\n  lng: 85.4500\n}, {\n  lat: 23.4640,\n  lng: 85.4540\n}, {\n  lat: 23.4590,\n  lng: 85.4590\n}, {\n  lat: 23.4550,\n  lng: 85.4540\n}, {\n  lat: 23.4600,\n  lng: 85.4500\n} // Closing the polygon\n];\nconst polygon7Coords = [{\n  lat: 23.4520,\n  lng: 85.4720\n}, {\n  lat: 23.4550,\n  lng: 85.4760\n}, {\n  lat: 23.4500,\n  lng: 85.4810\n}, {\n  lat: 23.4460,\n  lng: 85.4770\n}, {\n  lat: 23.4520,\n  lng: 85.4720\n} // Closing the polygon\n];\nconst polygon8Coords = [{\n  lat: 23.4470,\n  lng: 85.4650\n}, {\n  lat: 23.4500,\n  lng: 85.4690\n}, {\n  lat: 23.4450,\n  lng: 85.4740\n}, {\n  lat: 23.4420,\n  lng: 85.4690\n}, {\n  lat: 23.4470,\n  lng: 85.4650\n} // Closing the polygon\n];\nconst polygon9Coords = [{\n  lat: 23.4400,\n  lng: 85.4700\n}, {\n  lat: 23.4440,\n  lng: 85.4750\n}, {\n  lat: 23.4390,\n  lng: 85.4800\n}, {\n  lat: 23.4350,\n  lng: 85.4750\n}, {\n  lat: 23.4400,\n  lng: 85.4700\n} // Closing the polygon\n];\nconst polygon10Coords = [{\n  lat: 23.4530,\n  lng: 85.4500\n}, {\n  lat: 23.4570,\n  lng: 85.4550\n}, {\n  lat: 23.4510,\n  lng: 85.4600\n}, {\n  lat: 23.4470,\n  lng: 85.4550\n}, {\n  lat: 23.4530,\n  lng: 85.4500\n} // Closing the polygon\n];\n\n// Coordinates for Casa Blanca Estate in Rukka, Jharkhand\nconst casaBlancaCoords = {\n  lat: 23.443576748453125,\n  lng: 85.46080978467886\n};\n\n// Coordinates for Ormanji\nconst ormanjiCoords = {\n  lat: 23.3680,\n  lng: 85.3200\n};\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n  const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true);\n  const [showRanchiPolygon, setShowRanchiPolygon] = useState(true);\n  const [showNewPolygon, setShowNewPolygon] = useState(true);\n  const [showRedPolygon, setShowRedPolygon] = useState(true);\n  const [showYellowPolygon, setShowYellowPolygon] = useState(true); // Changed to state\n\n  const [showPolygon1, setShowPolygon1] = useState(true);\n  const [showPolygon2, setShowPolygon2] = useState(true);\n  const [showPolygon3, setShowPolygon3] = useState(true);\n  const [showPolygon4, setShowPolygon4] = useState(true);\n  const [showPolygon5, setShowPolygon5] = useState(true);\n  const [showPolygon6, setShowPolygon6] = useState(true);\n  const [showPolygon7, setShowPolygon7] = useState(true);\n  const [showPolygon8, setShowPolygon8] = useState(true);\n  const [showPolygon9, setShowPolygon9] = useState(true);\n  const [showPolygon10, setShowPolygon10] = useState(true);\n\n  // Handler to hide polygons\n  const handlePolygonClick = polygon => {\n    switch (polygon) {\n      case 'Jharkhand':\n        setShowJharkhandPolygon(false);\n        break;\n      case 'Ranchi':\n        setShowRanchiPolygon(false);\n        break;\n      case 'New':\n        setShowNewPolygon(false);\n        break;\n      case 'Red':\n        setShowRedPolygon(false);\n        break;\n      default:\n        break;\n    }\n  };\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, showJharkhandPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    key: \"jharkhand\",\n    paths: jharkhandCoords,\n    options: {\n      fillColor: '#228B22',\n      strokeColor: '#000000',\n      strokeWeight: 2,\n      fillOpacity: 0.6\n    },\n    onClick: () => handlePolygonClick('Jharkhand'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), showRanchiPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    key: \"ranchi\",\n    paths: ranchiCoords,\n    options: {\n      fillColor: '#0000FF',\n      strokeColor: '#000000',\n      strokeWeight: 2,\n      fillOpacity: 0.6\n    },\n    onClick: () => handlePolygonClick('Ranchi'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }), showNewPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    key: \"newPolygon\",\n    paths: newPolygonCoords,\n    options: {\n      fillColor: '#00FF00',\n      strokeColor: '#000000',\n      strokeWeight: 2,\n      fillOpacity: 0.6\n    },\n    onClick: () => handlePolygonClick('New'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }), showRedPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    key: \"redPolygon\",\n    paths: redPolygonCoords,\n    options: {\n      fillColor: '#FF0000',\n      strokeColor: '#000000',\n      strokeWeight: 2,\n      fillOpacity: 0.6\n    },\n    onClick: () => handlePolygonClick('Red'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }), showYellowPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    key: \"yellowPolygon\",\n    paths: yellowPolygonCoords,\n    options: {\n      fillColor: '#FFFF00',\n      strokeColor: '#000000',\n      strokeWeight: 2,\n      fillOpacity: 0.6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MarkerF, {\n    position: casaBlancaCoords,\n    title: \"Casa Blanca Estate, Rukka\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MarkerF, {\n    position: ormanjiCoords,\n    title: \"Ormanji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  })) : null; // Return null while loading\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","MarkerF","PolygonF","useJsApiLoader","React","useState","containerStyle","width","height","center","lat","lng","zoomLevel","jharkhandCoords","ranchiCoords","newPolygonCoords","redPolygonCoords","yellowPolygonCoords","polygon1Coords","polygon2Coords","polygon3Coords","polygon4Coords","polygon5Coords","polygon6Coords","polygon7Coords","polygon8Coords","polygon9Coords","polygon10Coords","casaBlancaCoords","ormanjiCoords","MapComponent","isLoaded","id","googleMapsApiKey","showJharkhandPolygon","setShowJharkhandPolygon","showRanchiPolygon","setShowRanchiPolygon","showNewPolygon","setShowNewPolygon","showRedPolygon","setShowRedPolygon","showYellowPolygon","setShowYellowPolygon","showPolygon1","setShowPolygon1","showPolygon2","setShowPolygon2","showPolygon3","setShowPolygon3","showPolygon4","setShowPolygon4","showPolygon5","setShowPolygon5","showPolygon6","setShowPolygon6","showPolygon7","setShowPolygon7","showPolygon8","setShowPolygon8","showPolygon9","setShowPolygon9","showPolygon10","setShowPolygon10","handlePolygonClick","polygon","createElement","mapContainerStyle","zoom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","paths","options","fillColor","strokeColor","strokeWeight","fillOpacity","onClick","position","title"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useState } from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to India level\nconst center = {\n  lat: 20.5937,  // Latitude of India\n  lng: 78.9629,  // Longitude of India\n};\n\nconst zoomLevel = 5;  // Adjusted zoom level for the India view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  { lat: 24.4125, lng: 83.4258 },\n  { lat: 22.5828, lng: 84.0825 },\n  { lat: 22.1931, lng: 85.0492 },\n  { lat: 22.3264, lng: 86.4536 },\n  { lat: 22.6908, lng: 86.5150 },\n  { lat: 23.3169, lng: 85.8747 },\n  { lat: 23.6617, lng: 86.6256 },\n  { lat: 24.5783, lng: 87.8997 },\n  { lat: 25.1028, lng: 87.7900 },\n  { lat: 25.1114, lng: 87.2681 },\n  { lat: 24.8217, lng: 85.7231 },\n  { lat: 24.5261, lng: 83.4228 }, // Closing the polygon\n];\n\n// Coordinates for Ranchi\nconst ranchiCoords = [\n  { lat: 23.3697, lng: 85.2203 },\n  { lat: 23.3181, lng: 85.2467 },\n  { lat: 23.2417, lng: 85.3036 },\n  { lat: 23.3111, lng: 85.3928 },\n  { lat: 23.3886, lng: 85.4356 },\n  { lat: 23.4058, lng: 85.4153 },\n  { lat: 23.4394, lng: 85.3589 },\n  { lat: 23.4481, lng: 85.3019 },\n  { lat: 23.4058, lng: 85.2614 },\n  { lat: 23.4281, lng: 85.2169 },\n];\n\n// Coordinates for the new polygon\nconst newPolygonCoords = [\n  { lat: 23.4908, lng: 85.4683 },\n  { lat: 23.4836, lng: 85.4647 },\n  { lat: 23.4794, lng: 85.4678 },\n  { lat: 23.4769, lng: 85.4725 },\n  { lat: 23.4758, lng: 85.4803 },\n  { lat: 23.4800, lng: 85.4850 },\n  { lat: 23.4819, lng: 85.4872 },\n  { lat: 23.4911, lng: 85.4889 },\n  { lat: 23.4900, lng: 85.4753 },\n  { lat: 23.4917, lng: 85.4686 }, // Closing the polygon\n];\n\n// Coordinates for the red polygon\nconst redPolygonCoords = [\n    { lat: 23.4525, lng: 85.4569 },\n    { lat: 23.4453, lng: 85.4525 },\n    { lat: 23.4382, lng: 85.4620 },\n    { lat: 23.4284, lng: 85.4708 },\n    { lat: 23.4289, lng: 85.4739 },\n    { lat: 23.4372, lng: 85.4738 },\n    { lat: 23.4460, lng: 85.4800 },\n    { lat: 23.4500, lng: 85.4713 },\n    { lat: 23.4515, lng: 85.4703 },\n    { lat: 23.4512, lng: 85.4621 } // Removed the trailing comma\n  ]; // Closing the array properly\n  \n  // Coordinates for the yellow polygon\n  const yellowPolygonCoords = [\n    { lat: 23.4458, lng: 85.4561 },\n    { lat: 23.4393, lng: 85.4569 },\n    { lat: 23.4389, lng: 85.4617 },\n    { lat: 23.4443, lng: 85.4636 },\n    { lat: 23.4484, lng: 85.4622 },\n    { lat: 23.4455, lng: 85.4560 },\n    { lat: 23.4458, lng: 85.4561 } // Closing the polygon\n  ]; // Closing the array properly\n   // Removed the trailing comma\n   const polygon1Coords = [\n    { lat: 23.4500, lng: 85.4570 },\n    { lat: 23.4530, lng: 85.4610 },\n    { lat: 23.4489, lng: 85.4650 },\n    { lat: 23.4460, lng: 85.4600 },\n    { lat: 23.4500, lng: 85.4570 } // Closing the polygon\n  ];\n  \n  const polygon2Coords = [\n    { lat: 23.4480, lng: 85.4500 },\n    { lat: 23.4450, lng: 85.4530 },\n    { lat: 23.4410, lng: 85.4520 },\n    { lat: 23.4440, lng: 85.4480 },\n    { lat: 23.4480, lng: 85.4500 } // Closing the polygon\n  ];\n  \n  const polygon3Coords = [\n    { lat: 23.4420, lng: 85.4600 },\n    { lat: 23.4450, lng: 85.4650 },\n    { lat: 23.4400, lng: 85.4700 },\n    { lat: 23.4360, lng: 85.4640 },\n    { lat: 23.4420, lng: 85.4600 } // Closing the polygon\n  ];\n  \n  const polygon4Coords = [\n    { lat: 23.4390, lng: 85.4500 },\n    { lat: 23.4360, lng: 85.4550 },\n    { lat: 23.4310, lng: 85.4500 },\n    { lat: 23.4340, lng: 85.4450 },\n    { lat: 23.4390, lng: 85.4500 } // Closing the polygon\n  ];\n  \n  const polygon5Coords = [\n    { lat: 23.4550, lng: 85.4620 },\n    { lat: 23.4590, lng: 85.4670 },\n    { lat: 23.4540, lng: 85.4720 },\n    { lat: 23.4510, lng: 85.4670 },\n    { lat: 23.4550, lng: 85.4620 } // Closing the polygon\n  ];\n  \n  const polygon6Coords = [\n    { lat: 23.4600, lng: 85.4500 },\n    { lat: 23.4640, lng: 85.4540 },\n    { lat: 23.4590, lng: 85.4590 },\n    { lat: 23.4550, lng: 85.4540 },\n    { lat: 23.4600, lng: 85.4500 } // Closing the polygon\n  ];\n  \n  const polygon7Coords = [\n    { lat: 23.4520, lng: 85.4720 },\n    { lat: 23.4550, lng: 85.4760 },\n    { lat: 23.4500, lng: 85.4810 },\n    { lat: 23.4460, lng: 85.4770 },\n    { lat: 23.4520, lng: 85.4720 } // Closing the polygon\n  ];\n  \n  const polygon8Coords = [\n    { lat: 23.4470, lng: 85.4650 },\n    { lat: 23.4500, lng: 85.4690 },\n    { lat: 23.4450, lng: 85.4740 },\n    { lat: 23.4420, lng: 85.4690 },\n    { lat: 23.4470, lng: 85.4650 } // Closing the polygon\n  ];\n  \n  const polygon9Coords = [\n    { lat: 23.4400, lng: 85.4700 },\n    { lat: 23.4440, lng: 85.4750 },\n    { lat: 23.4390, lng: 85.4800 },\n    { lat: 23.4350, lng: 85.4750 },\n    { lat: 23.4400, lng: 85.4700 } // Closing the polygon\n  ];\n  \n  const polygon10Coords = [\n    { lat: 23.4530, lng: 85.4500 },\n    { lat: 23.4570, lng: 85.4550 },\n    { lat: 23.4510, lng: 85.4600 },\n    { lat: 23.4470, lng: 85.4550 },\n    { lat: 23.4530, lng: 85.4500 } // Closing the polygon\n  ];\n\n// Coordinates for Casa Blanca Estate in Rukka, Jharkhand\nconst casaBlancaCoords = { lat: 23.443576748453125, lng: 85.46080978467886 };\n\n// Coordinates for Ormanji\nconst ormanjiCoords = { lat: 23.3680, lng: 85.3200 };\n\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n  });\n\n  const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true);\n  const [showRanchiPolygon, setShowRanchiPolygon] = useState(true);\n  const [showNewPolygon, setShowNewPolygon] = useState(true);\n  const [showRedPolygon, setShowRedPolygon] = useState(true);\n  const [showYellowPolygon, setShowYellowPolygon] = useState(true); // Changed to state\n  \n  const [showPolygon1, setShowPolygon1] = useState(true);\n  const [showPolygon2, setShowPolygon2] = useState(true);\n  const [showPolygon3, setShowPolygon3] = useState(true);\n  const [showPolygon4, setShowPolygon4] = useState(true);\n  const [showPolygon5, setShowPolygon5] = useState(true);\n  const [showPolygon6, setShowPolygon6] = useState(true);\n  const [showPolygon7, setShowPolygon7] = useState(true);\n  const [showPolygon8, setShowPolygon8] = useState(true);\n  const [showPolygon9, setShowPolygon9] = useState(true);\n  const [showPolygon10, setShowPolygon10] = useState(true);\n\n  // Handler to hide polygons\n  const handlePolygonClick = (polygon) => {\n    switch (polygon) {\n      case 'Jharkhand':\n        setShowJharkhandPolygon(false);\n        break;\n      case 'Ranchi':\n        setShowRanchiPolygon(false);\n        break;\n      case 'New':\n        setShowNewPolygon(false);\n        break;\n      case 'Red':\n        setShowRedPolygon(false);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={zoomLevel}\n    >\n      {/* Polygon covering Jharkhand */}\n      {showJharkhandPolygon && (\n        <PolygonF\n          key=\"jharkhand\"\n          paths={jharkhandCoords}\n          options={{\n            fillColor: '#228B22',\n            strokeColor: '#000000',\n            strokeWeight: 2,\n            fillOpacity: 0.6,\n          }}\n          onClick={() => handlePolygonClick('Jharkhand')}\n        />\n      )}\n\n      {/* Polygon covering Ranchi */}\n      {showRanchiPolygon && (\n        <PolygonF\n          key=\"ranchi\"\n          paths={ranchiCoords}\n          options={{\n            fillColor: '#0000FF',\n            strokeColor: '#000000',\n            strokeWeight: 2,\n            fillOpacity: 0.6,\n          }}\n          onClick={() => handlePolygonClick('Ranchi')}\n        />\n      )}\n\n      {/* New polygon */}\n      {showNewPolygon && (\n        <PolygonF\n          key=\"newPolygon\"\n          paths={newPolygonCoords}\n          options={{\n            fillColor: '#00FF00',\n            strokeColor: '#000000',\n            strokeWeight: 2,\n            fillOpacity: 0.6,\n          }}\n          onClick={() => handlePolygonClick('New')}\n        />\n      )}\n\n      {/* Red polygon */}\n      {showRedPolygon && (\n        <PolygonF\n          key=\"redPolygon\"\n          paths={redPolygonCoords}\n          options={{\n            fillColor: '#FF0000',\n            strokeColor: '#000000',\n            strokeWeight: 2,\n            fillOpacity: 0.6,\n          }}\n          onClick={() => handlePolygonClick('Red')}\n        />\n      )}\n\n      {/* Yellow polygon */}\n      {showYellowPolygon && (\n        <PolygonF\n          key=\"yellowPolygon\"\n          paths={yellowPolygonCoords}\n          options={{\n            fillColor: '#FFFF00',\n            strokeColor: '#000000',\n            strokeWeight: 2,\n            fillOpacity: 0.6,\n          }}\n        />\n      )}\n\n      {/* Marker on Casa Blanca Estate */}\n      <MarkerF\n        position={casaBlancaCoords}\n        title=\"Casa Blanca Estate, Rukka\"\n      />\n\n      {/* Marker for Ormanji */}\n      <MarkerF\n        position={ormanjiCoords}\n        title=\"Ormanji\"\n      />\n    </GoogleMap>\n  ) : null; // Return null while loading\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}