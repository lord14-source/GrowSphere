{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\n// import { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\n// import React, { useState } from 'react';\n\n// const containerStyle = {\n//   width: '100%',\n//   height: '600px',\n// };\n\n// // Center point set to India level\n// const center = {\n//   lat: 20.5937,  // Latitude of India\n//   lng: 78.9629,  // Longitude of India\n// };\n\n// const zoomLevel = 5;  // Adjusted zoom level for the India view\n\n// // Coordinates for the Jharkhand polygon\n// const jharkhandCoords = [\n//   { lat: 24.4125, lng: 83.4258 },\n//   { lat: 22.5828, lng: 84.0825 },\n//   { lat: 22.1931, lng: 85.0492 },\n//   { lat: 22.3264, lng: 86.4536 },\n//   { lat: 22.6908, lng: 86.5150 },\n//   { lat: 23.3169, lng: 85.8747 },\n//   { lat: 23.6617, lng: 86.6256 },\n//   { lat: 24.5783, lng: 87.8997 },\n//   { lat: 25.1028, lng: 87.7900 },\n//   { lat: 25.1114, lng: 87.2681 },\n//   { lat: 24.8217, lng: 85.7231 },\n//   { lat: 24.5261, lng: 83.4228 }, // Closing the polygon\n// ];\n\n// // Coordinates for Ranchi\n// const ranchiCoords = [\n//   { lat: 23.3697, lng: 85.2203 },\n//   { lat: 23.3181, lng: 85.2467 },\n//   { lat: 23.2417, lng: 85.3036 },\n//   { lat: 23.3111, lng: 85.3928 },\n//   { lat: 23.3886, lng: 85.4356 },\n//   { lat: 23.4058, lng: 85.4153 },\n//   { lat: 23.4394, lng: 85.3589 },\n//   { lat: 23.4481, lng: 85.3019 },\n//   { lat: 23.4058, lng: 85.2614 },\n//   { lat: 23.4281, lng: 85.2169 },\n// ];\n\n// // Updated coordinates for polygons\n\n// const newPolygonCoords = [\n//   { lat: 23.4908, lng: 85.4683 },\n//   { lat: 23.4836, lng: 85.4647 },\n//   { lat: 23.4794, lng: 85.4678 },\n//   { lat: 23.4769, lng: 85.4725 },\n//   { lat: 23.4758, lng: 85.4803 },\n//   { lat: 23.4800, lng: 85.4850 },\n//   { lat: 23.4819, lng: 85.4872 },\n//   { lat: 23.4911, lng: 85.4889 },\n//   { lat: 23.4900, lng: 85.4753 },\n//   { lat: 23.4917, lng: 85.4686 }, // Closing the polygon\n// ];\n\n// const redPolygonCoords = [\n//     { lat: 23.4525, lng: 85.4569 },\n//     { lat: 23.4453, lng: 85.4525 },\n//     { lat: 23.4382, lng: 85.4620 },\n//     { lat: 23.4284, lng: 85.4708 },\n//     { lat: 23.4289, lng: 85.4739 },\n//     { lat: 23.4372, lng: 85.4738 },\n//     { lat: 23.4460, lng: 85.4800 },\n//     { lat: 23.4500, lng: 85.4713 },\n//     { lat: 23.4515, lng: 85.4703 },\n//     { lat: 23.4512, lng: 85.4621 } // Closing the array properly\n// ];\n\n// const yellowPolygonCoords = [\n//     { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N, 85°27'37\"E\n//     { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n//     { lat: 23.4431, lng: 85.4603 },  // 23°26'35\"N, 85°27'37\"E\n//     { lat: 23.4425, lng: 85.4599 }, // Closing the polygon\n// ];\n\n// const newPolygonNearbyCoords = [\n//      { lat: 23.4422, lng: 85.4603 },  // 23°26'32\"N, 85°27'37\"E\n//   { lat: 23.4422, lng: 85.4608 },  // 23°26'32\"N, 85°27'39\"E\n//   { lat: 23.4425, lng: 85.4611 },  // 23°26'33\"N, 85°27'40\"E\n//   { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n//   { lat: 23.4425, lng: 85.4603 }, // Closing the polygon\n// ];\n\n// const thirdPolygonCoords = [\n//     { lat: 23.44167, lng: 85.45972 },  // 23°26'30\"N, 85°27'35\"E\n//     { lat: 23.44167, lng: 85.46000 },  // 23°26'30\"N, 85°27'36\"E\n//     { lat: 23.44222, lng: 85.46028 },  // 23°26'32\"N, 85°27'37\"E\n//     { lat: 23.44222, lng: 85.46056 },  // 23°26'32\"N, 85°27'38\"E\n//     { lat: 23.44250, lng: 85.46028 },  // 23°26'33\"N, 85°27'37\"E\n//     { lat: 23.44250, lng: 85.46000 },  // 23°26'33\"N, 85°27'36\"E\n//     { lat: 23.44194, lng: 85.45944 },  // 23°26'31\"N, 85°27'34\"E\n//     { lat: 23.44194, lng: 85.45972 },  // 23°26'31\"N, 85°27'35\"E\n//     { lat: 23.44167, lng: 85.45972 }, // Closing the polygon (touching)\n// ];\n\n// const additionalPolygon1Coords = [\n//     // { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N, 85°27'37\"E\n//     // { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n//     // { lat: 23.4431, lng: 85.4603 },  // 23°26'35\"N, 85°27'37\"E\n//     // { lat: 23.4428, lng: 85.4600 },// Closing the polygon\n//     { lat: 23.44139, lng: 85.46028 },  // 23°26'29\"N, 85°27'37\"E\n//     { lat: 23.44139, lng: 85.46056 },  // 23°26'29\"N, 85°27'38\"E\n//     { lat: 23.44167, lng: 85.46056 },  // 23°26'30\"N, 85°27'38\"E\n//     { lat: 23.44194, lng: 85.46083 },  // 23°26'31\"N, 85°27'39\"E\n//     { lat: 23.44222, lng: 85.46056 },  // 23°26'32\"N, 85°27'38\"E\n//     { lat: 23.44194, lng: 85.46028 },  // 23°26'31\"N, 85°27'37\"E\n//     { lat: 23.44167, lng: 85.46000 },  // 23°26'30\"N, 85°27'36\"E\n//     { lat: 23.44139, lng: 85.46028 },\n// ];\n// const polygonCoords1 = [\n//     { lat: 23.44111, lng: 85.46083 },  // 23°26'28\"N, 85°27'39\"E\n//     { lat: 23.44111, lng: 85.46139 },  // 23°26'28\"N, 85°27'41\"E\n//     { lat: 23.44139, lng: 85.46139 },  // 23°26'29\"N, 85°27'41\"E\n//     { lat: 23.44167, lng: 85.46111 },  // 23°26'30\"N, 85°27'40\"E\n//     { lat: 23.44167, lng: 85.46083 },  // 23°26'30\"N, 85°27'39\"E\n//     { lat: 23.44167, lng: 85.46056 },  // 23°26'30\"N, 85°27'38\"E\n//     { lat: 23.44194, lng: 85.46083 },  // 23°26'31\"N, 85°27'39\"E\n//     { lat: 23.44139, lng: 85.46056 },  // 23°26'29\"N, 85°27'38\"E\n//     { lat: 23.44111, lng: 85.46083 },  // 23°26'31\"N, 85°27'37\"E\n//   ];\n//   const polygonCoords2 = [\n//     { lat: 23.44167, lng: 85.46139 },  // 23°26'30\"N, 85°27'41\"E\n//     { lat: 23.44139, lng: 85.46167 },  // 23°26'29\"N, 85°27'42\"E\n//     { lat: 23.44194, lng: 85.46222 },  // 23°26'31\"N, 85°27'44\"E\n//     { lat: 23.44222, lng: 85.46167 },  // 23°26'32\"N, 85°27'42\"E\n//     { lat: 23.44167, lng: 85.46139 },// 23°26'34\"N, 85°27'35\"E\n//   ];\n\n// const nextRightBorderPolygonCoords = [\n//     { lat: 23.4417, lng: 85.4611 },  // 23°26'30\"N, 85°27'40\"E\n//     { lat: 23.4422, lng: 85.4614 },  // 23°26'32\"N, 85°27'41\"E\n//     { lat: 23.4425, lng: 85.4611 },  // 23°26'33\"N, 85°27'40\"E\n//     { lat: 23.4420, lng: 85.4608 },// Closing the polygon\n// ];\n// const polygonCoords3 = [\n//     { lat: 23.44306, lng: 85.46028 },\n//     { lat: 23.44333, lng: 85.46000 },\n//     { lat: 23.44361, lng: 85.45889 },\n//     { lat: 23.44361, lng: 85.45944 },\n//     { lat: 23.44333, lng: 85.45917 },\n//     { lat: 23.44333, lng: 85.45944 },\n//     { lat: 23.44306, lng: 85.45944 },\n//     { lat: 23.44278, lng: 85.45944 },\n//     { lat: 23.44250, lng: 85.45944 },\n//     { lat: 23.44250, lng: 85.45944 },\n//     { lat: 23.44278, lng: 85.46000 },\n//     { lat: 23.44306, lng: 85.46028 }, // 23°26'33\"N, 85°27'35\"E\n//   ];\n\n// // Coordinates for Casa Blanca Estate in Rukka, Jharkhand\n// const casaBlancaCoords = { lat: 23.443576748453125, lng: 85.46080978467886 };\n\n// // Coordinates for Ormanji\n// const ormanjiCoords = { lat: 23.3680, lng: 85.3200 };\n\n// const MapComponent = () => {\n//   const { isLoaded } = useJsApiLoader({\n//     id: 'google-map-script',\n//     googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n//   });\n//   const [map, setMap] = useState(null);\n\n//   const handlePolygonClick = (polygonCoords, zoomLevel) => {\n//     // Calculate the center of the polygon (can also use a predefined center)\n//     const bounds = new window.google.maps.LatLngBounds();\n//     polygonCoords.forEach(coord => bounds.extend(coord));\n//     const polygonCenter = bounds.getCenter();\n\n//     // Set the map's center and zoom level\n//     map.setCenter(polygonCenter);\n//     map.setZoom(zoomLevel);\n//   };\n\n//   const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true);\n//   const [showRanchiPolygon, setShowRanchiPolygon] = useState(true);\n//   const [showNewPolygon, setShowNewPolygon] = useState(true);\n//   const [showRedPolygon, setShowRedPolygon] = useState(true);\n//   const [showYellowPolygon, setShowYellowPolygon] = useState(true); \n//   const [showNewPolygonNearbyCoords, setShowNewPolygonNearbyCoords] = useState(true);\n//   const [showThirdPolygonCoords, setShowThirdPolygonCoords] = useState(true);\n//   const [showCasaBlanca, setShowCasaBlanca] = useState(true);\n//   const [shownextRightBorderPolygonCoords, setShownextRightBorderPolygonCoords] = useState(true);\n//   const [showadditionalPolygon1Coords, setShowadditionalPolygon1Coords] = useState(true);\n//   const [showPolygon, setShowPolygon] = useState(true);\n//   const [showPolygon2, setShowPolygon2] = useState(true);\n//   const [showPolygon3, setShowPolygon3] = useState(true);\n\n//   return isLoaded ? (\n//     <GoogleMap\n//       mapContainerStyle={containerStyle}\n//       center={center}\n//       zoom={zoomLevel}\n//     >\n//       {showJharkhandPolygon && (\n//         <PolygonF paths={jharkhandCoords} options={{ fillColor: '#00FF00', strokeColor: '#000000' }} \n//         onClick={() => handlePolygonClick(jharkhandCoords, 8)}\n\n//         />\n//       )}\n\n//       {showRanchiPolygon && (\n//         <PolygonF paths={ranchiCoords} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n//       )}\n\n//       {showNewPolygon && (\n//         <PolygonF paths={newPolygonCoords} options={{ fillColor: '#FFA500', strokeColor: '#000000' }} />\n//       )}\n\n//       {showRedPolygon && (\n//         <PolygonF paths={redPolygonCoords} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n//       )}\n\n//       {showYellowPolygon && (\n//         <PolygonF paths={yellowPolygonCoords} options={{ fillColor: '#FFFF00', strokeColor: '#000000' }} />\n//       )}\n\n//       {showNewPolygonNearbyCoords && (\n//         <PolygonF paths={newPolygonNearbyCoords} options={{ fillColor: '#00FFFF', strokeColor: '#000000' }} />\n//       )}\n\n//       {showThirdPolygonCoords && (\n//         <PolygonF paths={thirdPolygonCoords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n//       )}\n\n//         {shownextRightBorderPolygonCoords && (\n//         <PolygonF paths={nextRightBorderPolygonCoords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n//       )}\n//        {showadditionalPolygon1Coords && (\n//         <PolygonF paths={additionalPolygon1Coords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n//       )}\n//       {showPolygon && (\n//         <PolygonF\n//           paths={polygonCoords1}\n//           options={{ fillColor: '#FF0000', strokeColor: '#000000', strokeWeight: 2, fillOpacity: 0.6 }}\n//         />\n//       )}\n//       {showPolygon2 && (\n//         <PolygonF\n//           paths={polygonCoords2}\n//           options={{ fillColor: '#FF0000', strokeColor: '#000000', strokeWeight: 2, fillOpacity: 0.6 }}\n//         />\n//       )}\n//       {showCasaBlanca && (\n//         <>\n//           <MarkerF position={casaBlancaCoords} label=\"Casa Blanca\" />\n//           <PolygonF paths={[casaBlancaCoords]} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n//         </>\n//       )}\n//       {showPolygon3 && (\n//         <PolygonF\n//           paths={polygonCoords3}\n//           options={{ fillColor: '#0000FF', strokeColor: '#000000', strokeWeight: 2, fillOpacity: 0.6 }} // Blue color\n//         />\n//       )}\n\n//     </GoogleMap>\n//   ) : <></>;\n// };\n\n// export default MapComponent;\n\nimport { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useState } from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to India level\nconst center = {\n  lat: 20.5937,\n  // Latitude of India\n  lng: 78.9629 // Longitude of India\n};\nconst zoomLevel = 5; // Adjusted zoom level for the India view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [{\n  lat: 24.3011,\n  lng: 84.4983\n},\n// 24°18'04\"N 84°29'54\"E\n{\n  lat: 24.4260,\n  lng: 84.3156\n},\n// 24°25'37\"N 84°18'56\"E\n{\n  lat: 24.5617,\n  lng: 84.2892\n},\n// 24°33'42\"N 84°17'21\"E\n{\n  lat: 24.5683,\n  lng: 84.1817\n},\n// 24°34'06\"N 84°10'54\"E\n{\n  lat: 24.5303,\n  lng: 84.0994\n},\n// 24°31'49\"N 84°05'58\"E\n{\n  lat: 24.6567,\n  lng: 83.9983\n},\n// 24°39'24\"N 83°59'54\"E\n{\n  lat: 24.5661,\n  lng: 83.9333\n},\n// 24°33'58\"N 83°56'00\"E\n{\n  lat: 24.5497,\n  lng: 83.8011\n},\n// 24°32'59\"N 83°48'04\"E\n{\n  lat: 24.5467,\n  lng: 83.5272\n},\n// 24°32'48\"N 83°31'38\"E\n{\n  lat: 24.5225,\n  lng: 83.3947\n},\n// 24°31'21\"N 83°23'41\"E\n{\n  lat: 24.4186,\n  lng: 85.0219\n},\n// 24°25'07\"N 85°01'19\"E\n{\n  lat: 24.4003,\n  lng: 84.8878\n},\n// 24°24'01\"N 84°53'16\"E\n{\n  lat: 24.4262,\n  lng: 85.0422\n},\n// 24°25'34\"N 85°02'32\"E\n{\n  lat: 24.3817,\n  lng: 84.9000\n},\n// 24°22'54\"N 84°54'00\"E\n{\n  lat: 24.4222,\n  lng: 85.0544\n},\n// 24°25'20\"N 85°03'16\"E\n{\n  lat: 24.3782,\n  lng: 84.9164\n},\n// 24°22'41\"N 84°54'59\"E\n{\n  lat: 24.4631,\n  lng: 84.8472\n},\n// 24°27'47\"N 84°50'50\"E\n{\n  lat: 24.4992,\n  lng: 84.7839\n},\n// 24°32'57\"N 84°47'02\"E\n{\n  lat: 24.3948,\n  lng: 84.6606\n},\n// 24°23'41\"N 84°39'38\"E\n{\n  lat: 24.3994,\n  lng: 84.5311\n},\n// 24°23'58\"N 84°31'52\"E\n{\n  lat: 24.4881,\n  lng: 83.3344\n},\n// 24°29'17\"N 83°20'04\"E\n{\n  lat: 24.2075,\n  lng: 83.2819\n},\n// 24°12'27\"N 83°16'55\"E\n{\n  lat: 23.8447,\n  lng: 83.6786\n},\n// 23°50'41\"N 83°39'43\"E\n{\n  lat: 23.4964,\n  lng: 83.9300\n},\n// 23°29'47\"N 83°55'48\"E\n{\n  lat: 23.0222,\n  lng: 84.2956\n},\n// 23°01'20\"N 84°17'44\"E\n{\n  lat: 22.8006,\n  lng: 84.2428\n},\n// 22°48'02\"N 84°14'34\"E\n{\n  lat: 22.6803,\n  lng: 84.1561\n},\n// 22°40'49\"N 84°09'21\"E\n{\n  lat: 22.5581,\n  lng: 84.0042\n},\n// 22°33'29\"N 84°00'15\"E\n{\n  lat: 22.4661,\n  lng: 84.1278\n},\n// 22°27'58\"N 84°07'40\"E\n{\n  lat: 22.4614,\n  lng: 84.4911\n},\n// 22°27'41\"N 84°29'28\"E\n{\n  lat: 22.5106,\n  lng: 85.0428\n},\n// 22°30'38\"N 85°02'34\"E\n{\n  lat: 22.1200,\n  lng: 85.0400\n},\n// 22°07'12\"N 85°02'24\"E\n{\n  lat: 24.8364,\n  lng: 85.7192\n},\n// 24°50'11\"N 85°43'09\"E\n{\n  lat: 24.6806,\n  lng: 85.6733\n},\n// 24°40'50\"N 85°40'24\"E\n{\n  lat: 23.9214,\n  lng: 87.2872\n},\n// 23°55'17\"N 87°17'14\"E\n{\n  lat: 24.0264,\n  lng: 87.2275\n},\n// 24°01'35\"N 87°13'39\"E\n{\n  lat: 24.0208,\n  lng: 87.3400\n},\n// 24°01'15\"N 87°20'24\"E\n{\n  lat: 24.0081,\n  lng: 87.4222\n},\n// 24°00'29\"N 87°25'20\"E\n{\n  lat: 24.1006,\n  lng: 87.5083\n},\n// 24°06'02\"N 87°30'30\"E\n{\n  lat: 24.0892,\n  lng: 87.5322\n},\n// 24°05'21\"N 87°31'58\"E\n{\n  lat: 24.4872,\n  lng: 87.7947\n},\n// 24°29'14\"N 87°47'41\"E\n{\n  lat: 24.6014,\n  lng: 87.8950\n},\n// 24°36'05\"N 87°53'42\"E\n{\n  lat: 24.7836,\n  lng: 87.8497\n},\n// 24°47'01\"N 87°50'59\"E\n{\n  lat: 24.9764,\n  lng: 87.8983\n},\n// 24°58'35\"N 87°53'54\"E\n{\n  lat: 25.0889,\n  lng: 87.8203\n},\n// 25°05'20\"N 87°49'13\"E\n{\n  lat: 25.3500,\n  lng: 87.6647\n},\n// 25°21'00\"N 87°39'53\"E\n{\n  lat: 25.2081,\n  lng: 87.4661\n},\n// 25°12'29\"N 87°27'58\"E\n{\n  lat: 22.0986,\n  lng: 85.6725\n},\n// 22°05'55\"N 85°40'21\"E\n{\n  lat: 22.2550,\n  lng: 86.0056\n},\n// 22°15'18\"N 86°00'20\"E\n{\n  lat: 22.3414,\n  lng: 86.8411\n},\n// 22°20'29\"N 86°50'28\"E\n{\n  lat: 22.6206,\n  lng: 86.6625\n},\n// 22°37'14\"N 86°39'45\"E\n{\n  lat: 23.1897,\n  lng: 85.8889\n},\n// 23°11'23\"N 85°53'20\"E\n{\n  lat: 23.4856,\n  lng: 85.8978\n},\n// 23°29'08\"N 85°53'52\"E\n{\n  lat: 23.4983,\n  lng: 86.0231\n},\n// 23°29'54\"N 86°01'23\"E\n{\n  lat: 23.5797,\n  lng: 86.0417\n},\n// 23°34'47\"N 86°02'30\"E\n{\n  lat: 23.4814,\n  lng: 86.1464\n},\n// 23°28'53\"N 86°08'47\"E\n{\n  lat: 23.4411,\n  lng: 86.2428\n},\n// 23°26'28\"N 86°14'34\"E\n{\n  lat: 23.5336,\n  lng: 86.3622\n},\n// 23°32'01\"N 86°21'43\"E\n{\n  lat: 23.6256,\n  lng: 86.4472\n},\n// 23°37'32\"N 86°26'50\"E\n{\n  lat: 23.6481,\n  lng: 86.5517\n},\n// 23°38'53\"N 86°33'06\"E\n{\n  lat: 23.6864,\n  lng: 86.6767\n},\n// 23°41'11\"N 86°40'36\"E\n{\n  lat: 23.7906,\n  lng: 86.8064\n},\n// 23°47'26\"N 86°48'23\"E\n{\n  lat: 23.8347,\n  lng: 86.8553\n},\n// 23°50'05\"N 86°51'19\"E\n{\n  lat: 23.8639,\n  lng: 86.9425\n} // 23°51'50\"N 86°56'33\"E// Closing the polygon\n];\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n  const [map, setMap] = useState(null);\n  const handlePolygonClick = (polygonCoords, zoomLevel) => {\n    // Calculate the center of the polygon (can also use a predefined center)\n    if (map) {\n      const bounds = new window.google.maps.LatLngBounds();\n      polygonCoords.forEach(coord => bounds.extend(coord));\n      const polygonCenter = bounds.getCenter();\n\n      // Set the map's center and zoom level\n      map.setCenter(polygonCenter);\n      map.setZoom(zoomLevel);\n    }\n  };\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    onLoad: map => setMap(map),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PolygonF, {\n    paths: jharkhandCoords,\n    options: {\n      fillColor: '#00FF00',\n      strokeColor: '#000000'\n    },\n    onClick: () => handlePolygonClick(jharkhandCoords, 2) // Zoom in on click\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","PolygonF","useJsApiLoader","React","useState","containerStyle","width","height","center","lat","lng","zoomLevel","jharkhandCoords","MapComponent","isLoaded","id","googleMapsApiKey","map","setMap","handlePolygonClick","polygonCoords","bounds","window","google","maps","LatLngBounds","forEach","coord","extend","polygonCenter","getCenter","setCenter","setZoom","createElement","mapContainerStyle","zoom","onLoad","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","paths","options","fillColor","strokeColor","onClick","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["// import { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\n// import React, { useState } from 'react';\n\n// const containerStyle = {\n//   width: '100%',\n//   height: '600px',\n// };\n\n// // Center point set to India level\n// const center = {\n//   lat: 20.5937,  // Latitude of India\n//   lng: 78.9629,  // Longitude of India\n// };\n\n// const zoomLevel = 5;  // Adjusted zoom level for the India view\n\n// // Coordinates for the Jharkhand polygon\n// const jharkhandCoords = [\n//   { lat: 24.4125, lng: 83.4258 },\n//   { lat: 22.5828, lng: 84.0825 },\n//   { lat: 22.1931, lng: 85.0492 },\n//   { lat: 22.3264, lng: 86.4536 },\n//   { lat: 22.6908, lng: 86.5150 },\n//   { lat: 23.3169, lng: 85.8747 },\n//   { lat: 23.6617, lng: 86.6256 },\n//   { lat: 24.5783, lng: 87.8997 },\n//   { lat: 25.1028, lng: 87.7900 },\n//   { lat: 25.1114, lng: 87.2681 },\n//   { lat: 24.8217, lng: 85.7231 },\n//   { lat: 24.5261, lng: 83.4228 }, // Closing the polygon\n// ];\n\n// // Coordinates for Ranchi\n// const ranchiCoords = [\n//   { lat: 23.3697, lng: 85.2203 },\n//   { lat: 23.3181, lng: 85.2467 },\n//   { lat: 23.2417, lng: 85.3036 },\n//   { lat: 23.3111, lng: 85.3928 },\n//   { lat: 23.3886, lng: 85.4356 },\n//   { lat: 23.4058, lng: 85.4153 },\n//   { lat: 23.4394, lng: 85.3589 },\n//   { lat: 23.4481, lng: 85.3019 },\n//   { lat: 23.4058, lng: 85.2614 },\n//   { lat: 23.4281, lng: 85.2169 },\n// ];\n\n// // Updated coordinates for polygons\n\n// const newPolygonCoords = [\n//   { lat: 23.4908, lng: 85.4683 },\n//   { lat: 23.4836, lng: 85.4647 },\n//   { lat: 23.4794, lng: 85.4678 },\n//   { lat: 23.4769, lng: 85.4725 },\n//   { lat: 23.4758, lng: 85.4803 },\n//   { lat: 23.4800, lng: 85.4850 },\n//   { lat: 23.4819, lng: 85.4872 },\n//   { lat: 23.4911, lng: 85.4889 },\n//   { lat: 23.4900, lng: 85.4753 },\n//   { lat: 23.4917, lng: 85.4686 }, // Closing the polygon\n// ];\n\n// const redPolygonCoords = [\n//     { lat: 23.4525, lng: 85.4569 },\n//     { lat: 23.4453, lng: 85.4525 },\n//     { lat: 23.4382, lng: 85.4620 },\n//     { lat: 23.4284, lng: 85.4708 },\n//     { lat: 23.4289, lng: 85.4739 },\n//     { lat: 23.4372, lng: 85.4738 },\n//     { lat: 23.4460, lng: 85.4800 },\n//     { lat: 23.4500, lng: 85.4713 },\n//     { lat: 23.4515, lng: 85.4703 },\n//     { lat: 23.4512, lng: 85.4621 } // Closing the array properly\n// ];\n\n// const yellowPolygonCoords = [\n//     { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N, 85°27'37\"E\n//     { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n//     { lat: 23.4431, lng: 85.4603 },  // 23°26'35\"N, 85°27'37\"E\n//     { lat: 23.4425, lng: 85.4599 }, // Closing the polygon\n// ];\n\n// const newPolygonNearbyCoords = [\n//      { lat: 23.4422, lng: 85.4603 },  // 23°26'32\"N, 85°27'37\"E\n//   { lat: 23.4422, lng: 85.4608 },  // 23°26'32\"N, 85°27'39\"E\n//   { lat: 23.4425, lng: 85.4611 },  // 23°26'33\"N, 85°27'40\"E\n//   { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n//   { lat: 23.4425, lng: 85.4603 }, // Closing the polygon\n// ];\n\n// const thirdPolygonCoords = [\n//     { lat: 23.44167, lng: 85.45972 },  // 23°26'30\"N, 85°27'35\"E\n//     { lat: 23.44167, lng: 85.46000 },  // 23°26'30\"N, 85°27'36\"E\n//     { lat: 23.44222, lng: 85.46028 },  // 23°26'32\"N, 85°27'37\"E\n//     { lat: 23.44222, lng: 85.46056 },  // 23°26'32\"N, 85°27'38\"E\n//     { lat: 23.44250, lng: 85.46028 },  // 23°26'33\"N, 85°27'37\"E\n//     { lat: 23.44250, lng: 85.46000 },  // 23°26'33\"N, 85°27'36\"E\n//     { lat: 23.44194, lng: 85.45944 },  // 23°26'31\"N, 85°27'34\"E\n//     { lat: 23.44194, lng: 85.45972 },  // 23°26'31\"N, 85°27'35\"E\n//     { lat: 23.44167, lng: 85.45972 }, // Closing the polygon (touching)\n// ];\n\n// const additionalPolygon1Coords = [\n//     // { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N, 85°27'37\"E\n//     // { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n//     // { lat: 23.4431, lng: 85.4603 },  // 23°26'35\"N, 85°27'37\"E\n//     // { lat: 23.4428, lng: 85.4600 },// Closing the polygon\n//     { lat: 23.44139, lng: 85.46028 },  // 23°26'29\"N, 85°27'37\"E\n//     { lat: 23.44139, lng: 85.46056 },  // 23°26'29\"N, 85°27'38\"E\n//     { lat: 23.44167, lng: 85.46056 },  // 23°26'30\"N, 85°27'38\"E\n//     { lat: 23.44194, lng: 85.46083 },  // 23°26'31\"N, 85°27'39\"E\n//     { lat: 23.44222, lng: 85.46056 },  // 23°26'32\"N, 85°27'38\"E\n//     { lat: 23.44194, lng: 85.46028 },  // 23°26'31\"N, 85°27'37\"E\n//     { lat: 23.44167, lng: 85.46000 },  // 23°26'30\"N, 85°27'36\"E\n//     { lat: 23.44139, lng: 85.46028 },\n// ];\n// const polygonCoords1 = [\n//     { lat: 23.44111, lng: 85.46083 },  // 23°26'28\"N, 85°27'39\"E\n//     { lat: 23.44111, lng: 85.46139 },  // 23°26'28\"N, 85°27'41\"E\n//     { lat: 23.44139, lng: 85.46139 },  // 23°26'29\"N, 85°27'41\"E\n//     { lat: 23.44167, lng: 85.46111 },  // 23°26'30\"N, 85°27'40\"E\n//     { lat: 23.44167, lng: 85.46083 },  // 23°26'30\"N, 85°27'39\"E\n//     { lat: 23.44167, lng: 85.46056 },  // 23°26'30\"N, 85°27'38\"E\n//     { lat: 23.44194, lng: 85.46083 },  // 23°26'31\"N, 85°27'39\"E\n//     { lat: 23.44139, lng: 85.46056 },  // 23°26'29\"N, 85°27'38\"E\n//     { lat: 23.44111, lng: 85.46083 },  // 23°26'31\"N, 85°27'37\"E\n//   ];\n//   const polygonCoords2 = [\n//     { lat: 23.44167, lng: 85.46139 },  // 23°26'30\"N, 85°27'41\"E\n//     { lat: 23.44139, lng: 85.46167 },  // 23°26'29\"N, 85°27'42\"E\n//     { lat: 23.44194, lng: 85.46222 },  // 23°26'31\"N, 85°27'44\"E\n//     { lat: 23.44222, lng: 85.46167 },  // 23°26'32\"N, 85°27'42\"E\n//     { lat: 23.44167, lng: 85.46139 },// 23°26'34\"N, 85°27'35\"E\n//   ];\n  \n\n// const nextRightBorderPolygonCoords = [\n//     { lat: 23.4417, lng: 85.4611 },  // 23°26'30\"N, 85°27'40\"E\n//     { lat: 23.4422, lng: 85.4614 },  // 23°26'32\"N, 85°27'41\"E\n//     { lat: 23.4425, lng: 85.4611 },  // 23°26'33\"N, 85°27'40\"E\n//     { lat: 23.4420, lng: 85.4608 },// Closing the polygon\n// ];\n// const polygonCoords3 = [\n//     { lat: 23.44306, lng: 85.46028 },\n//     { lat: 23.44333, lng: 85.46000 },\n//     { lat: 23.44361, lng: 85.45889 },\n//     { lat: 23.44361, lng: 85.45944 },\n//     { lat: 23.44333, lng: 85.45917 },\n//     { lat: 23.44333, lng: 85.45944 },\n//     { lat: 23.44306, lng: 85.45944 },\n//     { lat: 23.44278, lng: 85.45944 },\n//     { lat: 23.44250, lng: 85.45944 },\n//     { lat: 23.44250, lng: 85.45944 },\n//     { lat: 23.44278, lng: 85.46000 },\n//     { lat: 23.44306, lng: 85.46028 }, // 23°26'33\"N, 85°27'35\"E\n//   ];\n  \n\n// // Coordinates for Casa Blanca Estate in Rukka, Jharkhand\n// const casaBlancaCoords = { lat: 23.443576748453125, lng: 85.46080978467886 };\n\n// // Coordinates for Ormanji\n// const ormanjiCoords = { lat: 23.3680, lng: 85.3200 };\n\n// const MapComponent = () => {\n//   const { isLoaded } = useJsApiLoader({\n//     id: 'google-map-script',\n//     googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n//   });\n//   const [map, setMap] = useState(null);\n\n//   const handlePolygonClick = (polygonCoords, zoomLevel) => {\n//     // Calculate the center of the polygon (can also use a predefined center)\n//     const bounds = new window.google.maps.LatLngBounds();\n//     polygonCoords.forEach(coord => bounds.extend(coord));\n//     const polygonCenter = bounds.getCenter();\n\n//     // Set the map's center and zoom level\n//     map.setCenter(polygonCenter);\n//     map.setZoom(zoomLevel);\n//   };\n\n//   const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true);\n//   const [showRanchiPolygon, setShowRanchiPolygon] = useState(true);\n//   const [showNewPolygon, setShowNewPolygon] = useState(true);\n//   const [showRedPolygon, setShowRedPolygon] = useState(true);\n//   const [showYellowPolygon, setShowYellowPolygon] = useState(true); \n//   const [showNewPolygonNearbyCoords, setShowNewPolygonNearbyCoords] = useState(true);\n//   const [showThirdPolygonCoords, setShowThirdPolygonCoords] = useState(true);\n//   const [showCasaBlanca, setShowCasaBlanca] = useState(true);\n//   const [shownextRightBorderPolygonCoords, setShownextRightBorderPolygonCoords] = useState(true);\n//   const [showadditionalPolygon1Coords, setShowadditionalPolygon1Coords] = useState(true);\n//   const [showPolygon, setShowPolygon] = useState(true);\n//   const [showPolygon2, setShowPolygon2] = useState(true);\n//   const [showPolygon3, setShowPolygon3] = useState(true);\n\n\n//   return isLoaded ? (\n//     <GoogleMap\n//       mapContainerStyle={containerStyle}\n//       center={center}\n//       zoom={zoomLevel}\n//     >\n//       {showJharkhandPolygon && (\n//         <PolygonF paths={jharkhandCoords} options={{ fillColor: '#00FF00', strokeColor: '#000000' }} \n//         onClick={() => handlePolygonClick(jharkhandCoords, 8)}\n        \n//         />\n//       )}\n\n//       {showRanchiPolygon && (\n//         <PolygonF paths={ranchiCoords} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n//       )}\n\n//       {showNewPolygon && (\n//         <PolygonF paths={newPolygonCoords} options={{ fillColor: '#FFA500', strokeColor: '#000000' }} />\n//       )}\n\n//       {showRedPolygon && (\n//         <PolygonF paths={redPolygonCoords} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n//       )}\n\n//       {showYellowPolygon && (\n//         <PolygonF paths={yellowPolygonCoords} options={{ fillColor: '#FFFF00', strokeColor: '#000000' }} />\n//       )}\n        \n//       {showNewPolygonNearbyCoords && (\n//         <PolygonF paths={newPolygonNearbyCoords} options={{ fillColor: '#00FFFF', strokeColor: '#000000' }} />\n//       )}\n      \n//       {showThirdPolygonCoords && (\n//         <PolygonF paths={thirdPolygonCoords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n//       )}\n        \n//         {shownextRightBorderPolygonCoords && (\n//         <PolygonF paths={nextRightBorderPolygonCoords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n//       )}\n//        {showadditionalPolygon1Coords && (\n//         <PolygonF paths={additionalPolygon1Coords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n//       )}\n//       {showPolygon && (\n//         <PolygonF\n//           paths={polygonCoords1}\n//           options={{ fillColor: '#FF0000', strokeColor: '#000000', strokeWeight: 2, fillOpacity: 0.6 }}\n//         />\n//       )}\n//       {showPolygon2 && (\n//         <PolygonF\n//           paths={polygonCoords2}\n//           options={{ fillColor: '#FF0000', strokeColor: '#000000', strokeWeight: 2, fillOpacity: 0.6 }}\n//         />\n//       )}\n//       {showCasaBlanca && (\n//         <>\n//           <MarkerF position={casaBlancaCoords} label=\"Casa Blanca\" />\n//           <PolygonF paths={[casaBlancaCoords]} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n//         </>\n//       )}\n//       {showPolygon3 && (\n//         <PolygonF\n//           paths={polygonCoords3}\n//           options={{ fillColor: '#0000FF', strokeColor: '#000000', strokeWeight: 2, fillOpacity: 0.6 }} // Blue color\n//         />\n//       )}\n\n//     </GoogleMap>\n//   ) : <></>;\n// };\n\n// export default MapComponent;\n\nimport { GoogleMap, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useState } from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to India level\nconst center = {\n  lat: 20.5937,  // Latitude of India\n  lng: 78.9629,  // Longitude of India\n};\n\nconst zoomLevel = 5;  // Adjusted zoom level for the India view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  { lat: 24.3011, lng: 84.4983 }, // 24°18'04\"N 84°29'54\"E\n  { lat: 24.4260, lng: 84.3156 }, // 24°25'37\"N 84°18'56\"E\n  { lat: 24.5617, lng: 84.2892 }, // 24°33'42\"N 84°17'21\"E\n  { lat: 24.5683, lng: 84.1817 }, // 24°34'06\"N 84°10'54\"E\n  { lat: 24.5303, lng: 84.0994 }, // 24°31'49\"N 84°05'58\"E\n  { lat: 24.6567, lng: 83.9983 }, // 24°39'24\"N 83°59'54\"E\n  { lat: 24.5661, lng: 83.9333 }, // 24°33'58\"N 83°56'00\"E\n  { lat: 24.5497, lng: 83.8011 }, // 24°32'59\"N 83°48'04\"E\n  { lat: 24.5467, lng: 83.5272 }, // 24°32'48\"N 83°31'38\"E\n  { lat: 24.5225, lng: 83.3947 }, // 24°31'21\"N 83°23'41\"E\n  { lat: 24.4186, lng: 85.0219 }, // 24°25'07\"N 85°01'19\"E\n  { lat: 24.4003, lng: 84.8878 }, // 24°24'01\"N 84°53'16\"E\n  { lat: 24.4262, lng: 85.0422 }, // 24°25'34\"N 85°02'32\"E\n  { lat: 24.3817, lng: 84.9000 }, // 24°22'54\"N 84°54'00\"E\n  { lat: 24.4222, lng: 85.0544 }, // 24°25'20\"N 85°03'16\"E\n  { lat: 24.3782, lng: 84.9164 }, // 24°22'41\"N 84°54'59\"E\n  { lat: 24.4631, lng: 84.8472 }, // 24°27'47\"N 84°50'50\"E\n  { lat: 24.4992, lng: 84.7839 }, // 24°32'57\"N 84°47'02\"E\n  { lat: 24.3948, lng: 84.6606 }, // 24°23'41\"N 84°39'38\"E\n  { lat: 24.3994, lng: 84.5311 }, // 24°23'58\"N 84°31'52\"E\n  { lat: 24.4881, lng: 83.3344 }, // 24°29'17\"N 83°20'04\"E\n  { lat: 24.2075, lng: 83.2819 }, // 24°12'27\"N 83°16'55\"E\n  { lat: 23.8447, lng: 83.6786 }, // 23°50'41\"N 83°39'43\"E\n  { lat: 23.4964, lng: 83.9300 }, // 23°29'47\"N 83°55'48\"E\n  { lat: 23.0222, lng: 84.2956 }, // 23°01'20\"N 84°17'44\"E\n  { lat: 22.8006, lng: 84.2428 }, // 22°48'02\"N 84°14'34\"E\n  { lat: 22.6803, lng: 84.1561 }, // 22°40'49\"N 84°09'21\"E\n  { lat: 22.5581, lng: 84.0042 }, // 22°33'29\"N 84°00'15\"E\n  { lat: 22.4661, lng: 84.1278 }, // 22°27'58\"N 84°07'40\"E\n  { lat: 22.4614, lng: 84.4911 }, // 22°27'41\"N 84°29'28\"E\n  { lat: 22.5106, lng: 85.0428 }, // 22°30'38\"N 85°02'34\"E\n  { lat: 22.1200, lng: 85.0400 }, // 22°07'12\"N 85°02'24\"E\n  { lat: 24.8364, lng: 85.7192 }, // 24°50'11\"N 85°43'09\"E\n  { lat: 24.6806, lng: 85.6733 }, // 24°40'50\"N 85°40'24\"E\n  { lat: 23.9214, lng: 87.2872 }, // 23°55'17\"N 87°17'14\"E\n  { lat: 24.0264, lng: 87.2275 }, // 24°01'35\"N 87°13'39\"E\n  { lat: 24.0208, lng: 87.3400 }, // 24°01'15\"N 87°20'24\"E\n  { lat: 24.0081, lng: 87.4222 }, // 24°00'29\"N 87°25'20\"E\n  { lat: 24.1006, lng: 87.5083 }, // 24°06'02\"N 87°30'30\"E\n  { lat: 24.0892, lng: 87.5322 }, // 24°05'21\"N 87°31'58\"E\n  { lat: 24.4872, lng: 87.7947 }, // 24°29'14\"N 87°47'41\"E\n  { lat: 24.6014, lng: 87.8950 }, // 24°36'05\"N 87°53'42\"E\n  { lat: 24.7836, lng: 87.8497 }, // 24°47'01\"N 87°50'59\"E\n  { lat: 24.9764, lng: 87.8983 }, // 24°58'35\"N 87°53'54\"E\n  { lat: 25.0889, lng: 87.8203 }, // 25°05'20\"N 87°49'13\"E\n  { lat: 25.3500, lng: 87.6647 }, // 25°21'00\"N 87°39'53\"E\n  { lat: 25.2081, lng: 87.4661 }, // 25°12'29\"N 87°27'58\"E\n  { lat: 22.0986, lng: 85.6725 }, // 22°05'55\"N 85°40'21\"E\n  { lat: 22.2550, lng: 86.0056 }, // 22°15'18\"N 86°00'20\"E\n  { lat: 22.3414, lng: 86.8411 }, // 22°20'29\"N 86°50'28\"E\n  { lat: 22.6206, lng: 86.6625 }, // 22°37'14\"N 86°39'45\"E\n  { lat: 23.1897, lng: 85.8889 }, // 23°11'23\"N 85°53'20\"E\n  { lat: 23.4856, lng: 85.8978 }, // 23°29'08\"N 85°53'52\"E\n  { lat: 23.4983, lng: 86.0231 }, // 23°29'54\"N 86°01'23\"E\n  { lat: 23.5797, lng: 86.0417 }, // 23°34'47\"N 86°02'30\"E\n  { lat: 23.4814, lng: 86.1464 }, // 23°28'53\"N 86°08'47\"E\n  { lat: 23.4411, lng: 86.2428 }, // 23°26'28\"N 86°14'34\"E\n  { lat: 23.5336, lng: 86.3622 }, // 23°32'01\"N 86°21'43\"E\n  { lat: 23.6256, lng: 86.4472 }, // 23°37'32\"N 86°26'50\"E\n  { lat: 23.6481, lng: 86.5517 }, // 23°38'53\"N 86°33'06\"E\n  { lat: 23.6864, lng: 86.6767 }, // 23°41'11\"N 86°40'36\"E\n  { lat: 23.7906, lng: 86.8064 }, // 23°47'26\"N 86°48'23\"E\n  { lat: 23.8347, lng: 86.8553 }, // 23°50'05\"N 86°51'19\"E\n  { lat: 23.8639, lng: 86.9425 }  // 23°51'50\"N 86°56'33\"E// Closing the polygon\n];\n\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n  });\n  const [map, setMap] = useState(null);\n\n  const handlePolygonClick = (polygonCoords, zoomLevel) => {\n    // Calculate the center of the polygon (can also use a predefined center)\n    if (map) {\n      const bounds = new window.google.maps.LatLngBounds();\n      polygonCoords.forEach(coord => bounds.extend(coord));\n      const polygonCenter = bounds.getCenter();\n\n      // Set the map's center and zoom level\n      map.setCenter(polygonCenter);\n      map.setZoom(zoomLevel);\n    }\n  };\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={zoomLevel}\n      onLoad={map => setMap(map)}\n    >\n      {/* Jharkhand polygon with zoom-in functionality on click */}\n      <PolygonF \n        paths={jharkhandCoords} \n        options={{ fillColor: '#00FF00', strokeColor: '#000000' }}\n        onClick={() => handlePolygonClick(jharkhandCoords, 2)}  // Zoom in on click\n      />\n    </GoogleMap>\n  ) : <></>;\n};\n\nexport default MapComponent;\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,wBAAwB;AAC5E,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,OAAO;EAAG;EACfC,GAAG,EAAE,OAAO,CAAG;AACjB,CAAC;AAED,MAAMC,SAAS,GAAG,CAAC,CAAC,CAAE;;AAEtB;AACA,MAAMC,eAAe,GAAG,CACtB;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChC;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC,CAAE;AAAA,CACjC;AAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAM;IAAEC;EAAS,CAAC,GAAGZ,cAAc,CAAC;IAClCa,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAE;EACpB,CAAC,CAAC;EACF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAMe,kBAAkB,GAAGA,CAACC,aAAa,EAAET,SAAS,KAAK;IACvD;IACA,IAAIM,GAAG,EAAE;MACP,MAAMI,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC,CAAC;MACpDL,aAAa,CAACM,OAAO,CAACC,KAAK,IAAIN,MAAM,CAACO,MAAM,CAACD,KAAK,CAAC,CAAC;MACpD,MAAME,aAAa,GAAGR,MAAM,CAACS,SAAS,CAAC,CAAC;;MAExC;MACAb,GAAG,CAACc,SAAS,CAACF,aAAa,CAAC;MAC5BZ,GAAG,CAACe,OAAO,CAACrB,SAAS,CAAC;IACxB;EACF,CAAC;EAED,OAAOG,QAAQ,gBACbX,KAAA,CAAA8B,aAAA,CAACjC,SAAS;IACRkC,iBAAiB,EAAE7B,cAAe;IAClCG,MAAM,EAAEA,MAAO;IACf2B,IAAI,EAAExB,SAAU;IAChByB,MAAM,EAAEnB,GAAG,IAAIC,MAAM,CAACD,GAAG,CAAE;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAG3BvC,KAAA,CAAA8B,aAAA,CAAChC,QAAQ;IACP0C,KAAK,EAAE/B,eAAgB;IACvBgC,OAAO,EAAE;MAAEC,SAAS,EAAE,SAAS;MAAEC,WAAW,EAAE;IAAU,CAAE;IAC1DC,OAAO,EAAEA,CAAA,KAAM5B,kBAAkB,CAACP,eAAe,EAAE,CAAC,CAAE,CAAE;IAAA;IAAAyB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACzD,CACQ,CAAC,gBACVvC,KAAA,CAAA8B,aAAA,CAAA9B,KAAA,CAAA6C,QAAA,MAAI,CAAC;AACX,CAAC;AAED,eAAenC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}