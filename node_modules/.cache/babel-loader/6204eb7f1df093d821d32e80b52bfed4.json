{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, HeatmapLayer, LoadScript, Polygon } from '@react-google-maps/api';\nimport React, { useRef, useState } from 'react';\nconst MapComponent = ({\n  yieldForecast\n}) => {\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const farmCoordinates = [{\n    lat: 25.774,\n    lng: -80.190\n  }, {\n    lat: 18.466,\n    lng: -66.118\n  }, {\n    lat: 32.321,\n    lng: -64.757\n  }, {\n    lat: 25.774,\n    lng: -80.190\n  }];\n  const heatmapData = [{\n    lat: 37.782,\n    lng: -122.447\n  }, {\n    lat: 37.782,\n    lng: -122.445\n  }, {\n    lat: 37.782,\n    lng: -122.443\n  }];\n  const determineColor = yieldForecast => {\n    if (yieldForecast < 50) {\n      return '#FF0000'; // Red for low yield\n    } else if (yieldForecast >= 50 && yieldForecast < 75) {\n      return '#FFFF00'; // Yellow for medium yield\n    } else {\n      return '#00FF00'; // Green for high yield\n    }\n  };\n  const onLoad = mapInstance => {\n    setMap(mapInstance);\n  };\n  return /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyD0KaEX-bXcnOS7XFfLKnVyiet_Kfi-8xM\",\n    libraries: [\"visualization\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    onLoad: onLoad,\n    mapContainerStyle: {\n      height: '400px',\n      width: '100%'\n    },\n    center: {\n      lat: 25.774,\n      lng: -80.190\n    },\n    zoom: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, map && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Polygon, {\n    paths: farmCoordinates,\n    options: {\n      strokeColor: '#000000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: determineColor(yieldForecast),\n      fillOpacity: 0.6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(HeatmapLayer, {\n    data: heatmapData.map(coord => new window.google.maps.LatLng(coord.lat, coord.lng)),\n    options: {\n      radius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","HeatmapLayer","LoadScript","Polygon","React","useRef","useState","MapComponent","yieldForecast","mapRef","map","setMap","farmCoordinates","lat","lng","heatmapData","determineColor","onLoad","mapInstance","createElement","googleMapsApiKey","libraries","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","height","width","center","zoom","Fragment","paths","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","data","coord","window","google","maps","LatLng","radius"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, HeatmapLayer, LoadScript, Polygon } from '@react-google-maps/api';\nimport React, { useRef, useState } from 'react';\n\nconst MapComponent = ({ yieldForecast }) => {\n  const mapRef = useRef(null);\n\n  const [map, setMap] = useState(null);\n\n  const farmCoordinates = [\n    { lat: 25.774, lng: -80.190 },\n    { lat: 18.466, lng: -66.118 },\n    { lat: 32.321, lng: -64.757 },\n    { lat: 25.774, lng: -80.190 }\n  ];\n\n  const heatmapData = [\n    { lat: 37.782, lng: -122.447 },\n    { lat: 37.782, lng: -122.445 },\n    { lat: 37.782, lng: -122.443 }\n  ];\n\n  const determineColor = (yieldForecast) => {\n    if (yieldForecast < 50) {\n      return '#FF0000';  // Red for low yield\n    } else if (yieldForecast >= 50 && yieldForecast < 75) {\n      return '#FFFF00';  // Yellow for medium yield\n    } else {\n      return '#00FF00';  // Green for high yield\n    }\n  };\n\n  const onLoad = (mapInstance) => {\n    setMap(mapInstance);\n  };\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AIzaSyD0KaEX-bXcnOS7XFfLKnVyiet_Kfi-8xM\"\n      libraries={[\"visualization\"]}\n    >\n      <GoogleMap\n        onLoad={onLoad}\n        mapContainerStyle={{ height: '400px', width: '100%' }}\n        center={{ lat: 25.774, lng: -80.190 }}\n        zoom={5}\n      >\n        {map && (\n          <>\n            {/* Polygon with dynamic color */}\n            <Polygon\n              paths={farmCoordinates}\n              options={{\n                strokeColor: '#000000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: determineColor(yieldForecast),\n                fillOpacity: 0.6\n              }}\n            />\n            \n            {/* Heatmap Layer */}\n            <HeatmapLayer\n              data={heatmapData.map(coord => new window.google.maps.LatLng(coord.lat, coord.lng))}\n              options={{ radius: 20 }}\n            />\n          </>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}