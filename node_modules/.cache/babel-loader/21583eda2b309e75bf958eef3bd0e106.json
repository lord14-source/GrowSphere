{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, InfoWindowF, MarkerF, RectangleF, useJsApiLoader } from '@react-google-maps/api';\nimport React from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\n// Coordinates for Ranchi, Jharkhand, India\nconst center = {\n  lat: 23.3441,\n  lng: 85.3096\n};\n\n// Another location nearby (can be adjusted)\nconst center2 = {\n  lat: 23.3441,\n  lng: 85.3099\n};\n\n// Define multiple sets of bounds for rectangles\nconst rectangles = [{\n  id: 1,\n  bounds: {\n    north: 23.3917,\n    south: 23.3401,\n    east: 85.3350,\n    west: 85.2799\n  },\n  fillColor: 'rgba(0, 255, 0, 0.2)',\n  // Light green\n  strokeColor: 'green'\n}, {\n  id: 2,\n  bounds: {\n    north: 23.3680,\n    south: 23.3250,\n    east: 85.3100,\n    west: 85.2900\n  },\n  fillColor: 'rgba(255, 0, 0, 0.2)',\n  // Light red\n  strokeColor: 'red'\n}, {\n  id: 3,\n  bounds: {\n    north: 23.3600,\n    south: 23.3450,\n    east: 85.3350,\n    west: 85.3200\n  },\n  fillColor: 'rgba(0, 0, 255, 0.2)',\n  // Light blue\n  strokeColor: 'blue'\n}];\nfunction MapComponent() {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n  const [map, setMap] = React.useState(null);\n  const [selectedMarker, setSelectedMarker] = React.useState(null); // State to manage the selected marker\n\n  const onLoad = React.useCallback(map => {\n    map.setZoom(12);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(map => {\n    setMap(null);\n  }, []);\n  const handleMarkerClick = marker => {\n    setSelectedMarker(marker);\n  };\n  const handleInfoWindowClose = () => {\n    setSelectedMarker(null);\n  };\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 12,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MarkerF, {\n    key: 1,\n    position: center,\n    onClick: () => handleMarkerClick('Location 1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MarkerF, {\n    key: 2,\n    position: center2,\n    onClick: () => handleMarkerClick('Location 2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), rectangles.map(rectangle => /*#__PURE__*/React.createElement(RectangleF, {\n    key: rectangle.id,\n    options: {\n      fillColor: rectangle.fillColor,\n      strokeColor: rectangle.strokeColor,\n      strokeOpacity: 1,\n      strokeWeight: 2\n    },\n    bounds: rectangle.bounds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), selectedMarker === 'Location 1' && /*#__PURE__*/React.createElement(InfoWindowF, {\n    position: center,\n    onCloseClick: handleInfoWindowClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"This is Location 1\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Description or additional information about Location 1.\"))), selectedMarker === 'Location 2' && /*#__PURE__*/React.createElement(InfoWindowF, {\n    position: center2,\n    onCloseClick: handleInfoWindowClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"This is Location 2\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Description or additional information about Location 2.\"))), /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","InfoWindowF","MarkerF","RectangleF","useJsApiLoader","React","containerStyle","width","height","center","lat","lng","center2","rectangles","id","bounds","north","south","east","west","fillColor","strokeColor","MapComponent","isLoaded","googleMapsApiKey","map","setMap","useState","selectedMarker","setSelectedMarker","onLoad","useCallback","setZoom","onUnmount","handleMarkerClick","marker","handleInfoWindowClose","createElement","mapContainerStyle","zoom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","position","onClick","rectangle","options","strokeOpacity","strokeWeight","onCloseClick","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, InfoWindowF, MarkerF, RectangleF, useJsApiLoader } from '@react-google-maps/api';\nimport React from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\n// Coordinates for Ranchi, Jharkhand, India\nconst center = {\n  lat: 23.3441,\n  lng: 85.3096\n};\n\n// Another location nearby (can be adjusted)\nconst center2 = {\n  lat: 23.3441,\n  lng: 85.3099\n};\n\n// Define multiple sets of bounds for rectangles\nconst rectangles = [\n  {\n    id: 1,\n    bounds: {\n      north: 23.3917,\n      south: 23.3401,\n      east: 85.3350,\n      west: 85.2799\n    },\n    fillColor: 'rgba(0, 255, 0, 0.2)', // Light green\n    strokeColor: 'green'\n  },\n  {\n    id: 2,\n    bounds: {\n      north: 23.3680,\n      south: 23.3250,\n      east: 85.3100,\n      west: 85.2900\n    },\n    fillColor: 'rgba(255, 0, 0, 0.2)', // Light red\n    strokeColor: 'red'\n  },\n  {\n    id: 3,\n    bounds: {\n      north: 23.3600,\n      south: 23.3450,\n      east: 85.3350,\n      west: 85.3200\n    },\n    fillColor: 'rgba(0, 0, 255, 0.2)', // Light blue\n    strokeColor: 'blue'\n  }\n];\n\nfunction MapComponent() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n\n  const [map, setMap] = React.useState(null);\n  const [selectedMarker, setSelectedMarker] = React.useState(null); // State to manage the selected marker\n\n  const onLoad = React.useCallback((map) => {\n    map.setZoom(12);\n    setMap(map);\n  }, []);\n  \n  const onUnmount = React.useCallback((map) => {\n    setMap(null);\n  }, []);\n\n  const handleMarkerClick = (marker) => {\n    setSelectedMarker(marker);\n  };\n\n  const handleInfoWindowClose = () => {\n    setSelectedMarker(null);\n  };\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={12}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      {/* Marker at the first location */}\n      <MarkerF\n        key={1}\n        position={center}\n        onClick={() => handleMarkerClick('Location 1')}\n      />\n      {/* Marker at the second location */}\n      <MarkerF\n        key={2}\n        position={center2}\n        onClick={() => handleMarkerClick('Location 2')}\n      />\n\n      {/* Render multiple rectangles */}\n      {rectangles.map(rectangle => (\n        <RectangleF\n          key={rectangle.id}\n          options={{\n            fillColor: rectangle.fillColor,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: 1,\n            strokeWeight: 2,\n          }}\n          bounds={rectangle.bounds}\n        />\n      ))}\n      \n      {/* InfoWindow for the first marker */}\n      {selectedMarker === 'Location 1' && (\n        <InfoWindowF\n          position={center}\n          onCloseClick={handleInfoWindowClose}\n        >\n          <div>\n            <h4>This is Location 1</h4>\n            <p>Description or additional information about Location 1.</p>\n          </div>\n        </InfoWindowF>\n      )}\n      \n      {/* InfoWindow for the second marker */}\n      {selectedMarker === 'Location 2' && (\n        <InfoWindowF\n          position={center2}\n          onCloseClick={handleInfoWindowClose}\n        >\n          <div>\n            <h4>This is Location 2</h4>\n            <p>Description or additional information about Location 2.</p>\n          </div>\n        </InfoWindowF>\n      )}\n      \n      { /* You can add more child components, such as more markers, info windows, etc. */ }\n      <></>\n    </GoogleMap>\n  ) : <></>;\n}\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}