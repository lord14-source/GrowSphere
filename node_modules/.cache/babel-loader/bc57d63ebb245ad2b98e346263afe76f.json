{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useRef } from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,\n  // Latitude of Jharkhand\n  lng: 85.2799 // Longitude of Jharkhand\n};\nconst zoomLevel = 6; // Initial zoom level for a broader view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [{\n  lat: 24.4366,\n  lng: 84.2201\n}, {\n  lat: 24.1851,\n  lng: 85.0568\n}, {\n  lat: 23.9867,\n  lng: 85.6182\n}, {\n  lat: 23.6255,\n  lng: 86.4194\n}, {\n  lat: 23.1986,\n  lng: 86.8941\n}, {\n  lat: 22.7767,\n  lng: 86.6826\n}, {\n  lat: 22.3571,\n  lng: 85.9870\n}, {\n  lat: 22.2786,\n  lng: 85.3999\n}, {\n  lat: 22.7027,\n  lng: 84.8895\n}, {\n  lat: 23.1097,\n  lng: 84.6137\n}, {\n  lat: 23.7197,\n  lng: 84.4003\n}, {\n  lat: 24.0020,\n  lng: 84.4666\n}];\n\n// Coordinates for the Ranchi polygon\nconst ranchiCoords = [{\n  lat: 23.4754529297811,\n  lng: 85.47999773329536\n}, {\n  lat: 23.476233545770825,\n  lng: 85.48133511299329\n}, {\n  lat: 23.482172002424274,\n  lng: 85.48793069910942\n}, {\n  lat: 23.484629723351897,\n  lng: 85.49177543218504\n}, {\n  lat: 23.487755237059364,\n  lng: 85.49270748868825\n}, {\n  lat: 23.491308081463988,\n  lng: 85.48932878386417\n}, {\n  lat: 23.490880676677126,\n  lng: 85.48664912141749\n}, {\n  lat: 23.491040953634585,\n  lng: 85.48210534596441\n}, {\n  lat: 23.491788910192813,\n  lng: 85.48041599355238\n}, {\n  lat: 23.490666973764053,\n  lng: 85.47756157051137\n}, {\n  lat: 23.490239566898666,\n  lng: 85.47517317572192\n}, {\n  lat: 23.49173548486511,\n  lng: 85.46888179432537\n}, {\n  lat: 23.491844895394937,\n  lng: 85.46869079584923\n}, {\n  lat: 23.483704922251732,\n  lng: 85.46480023672797\n}, {\n  lat: 23.47969050391436,\n  lng: 85.46771815606891\n}, {\n  lat: 23.479021422311977,\n  lng: 85.46929869571193\n}];\n\n// Coordinates for Casa Blanca in Ormanjhi\nconst casaBlancaCoords = {\n  lat: 23.442592425229485,\n  lng: 85.4608527\n};\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\" // Replace with your Google Maps API key\n  });\n  const mapRef = useRef(null); // Using useRef instead of state to store map instance\n\n  // Save the map instance when loaded\n  const onLoad = useCallback(mapInstance => {\n    console.log(\"Map loaded:\", mapInstance);\n    mapRef.current = mapInstance; // Store map instance in ref\n  }, []);\n\n  // Zoom in and fit the polygon's bounds when clicked\n  const handlePolygonClick = useCallback(polygonCoords => {\n    const map = mapRef.current;\n    if (!map) {\n      console.log(\"Map instance not available.\");\n      return;\n    }\n    console.log(\"Polygon clicked, zooming in...\");\n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n    map.fitBounds(bounds); // Fit the bounds of the polygon\n\n    // After fitting bounds, ensure zoom is in and set it to max zoom level (for example, 12)\n    const newZoom = Math.min(map.getZoom(), 18); // Max zoom level of 12\n    map.setZoom(newZoom); // Set the zoom level after fitting the bounds\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    onLoad: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PolygonF, {\n    paths: jharkhandCoords,\n    options: {\n      fillColor: '#00FF00',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"Jharkhand polygon clicked\");\n      handlePolygonClick(jharkhandCoords); // Zoom into Jharkhand when clicked\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: ranchiCoords,\n    options: {\n      fillColor: '#FF5733',\n      strokeColor: '#000000',\n      fillOpacity: 0.5\n    },\n    onClick: () => {\n      console.log(\"Ranchi polygon clicked\");\n      handlePolygonClick(ranchiCoords); // Zoom into Ranchi when clicked\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MarkerF, {\n    position: casaBlancaCoords,\n    title: \"Casa Blanca Ormanjhi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","MarkerF","PolygonF","useJsApiLoader","React","useCallback","useRef","containerStyle","width","height","center","lat","lng","zoomLevel","jharkhandCoords","ranchiCoords","casaBlancaCoords","MapComponent","isLoaded","id","googleMapsApiKey","mapRef","onLoad","mapInstance","console","log","current","handlePolygonClick","polygonCoords","map","bounds","window","google","maps","LatLngBounds","forEach","coord","extend","fitBounds","newZoom","Math","min","getZoom","setZoom","createElement","style","position","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","paths","options","fillColor","strokeColor","fillOpacity","onClick","title","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useCallback, useRef } from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to Jharkhand level\nconst center = {\n  lat: 23.6102,  // Latitude of Jharkhand\n  lng: 85.2799,  // Longitude of Jharkhand\n};\n\nconst zoomLevel = 6;  // Initial zoom level for a broader view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  { lat: 24.4366, lng: 84.2201 },\n  { lat: 24.1851, lng: 85.0568 },\n  { lat: 23.9867, lng: 85.6182 },\n  { lat: 23.6255, lng: 86.4194 },\n  { lat: 23.1986, lng: 86.8941 },\n  { lat: 22.7767, lng: 86.6826 },\n  { lat: 22.3571, lng: 85.9870 },\n  { lat: 22.2786, lng: 85.3999 },\n  { lat: 22.7027, lng: 84.8895 },\n  { lat: 23.1097, lng: 84.6137 },\n  { lat: 23.7197, lng: 84.4003 },\n  { lat: 24.0020, lng: 84.4666 },\n];\n\n// Coordinates for the Ranchi polygon\nconst ranchiCoords = [\n  { lat: 23.4754529297811, lng: 85.47999773329536 },\n  { lat: 23.476233545770825, lng: 85.48133511299329 },\n  { lat: 23.482172002424274, lng: 85.48793069910942 },\n  { lat: 23.484629723351897, lng: 85.49177543218504 },\n  { lat: 23.487755237059364, lng: 85.49270748868825 },\n  { lat: 23.491308081463988, lng: 85.48932878386417 },\n  { lat: 23.490880676677126, lng: 85.48664912141749 },\n  { lat: 23.491040953634585, lng: 85.48210534596441 },\n  { lat: 23.491788910192813, lng: 85.48041599355238 },\n  { lat: 23.490666973764053, lng: 85.47756157051137 },\n  { lat: 23.490239566898666, lng: 85.47517317572192 },\n  { lat: 23.49173548486511, lng: 85.46888179432537 },\n  { lat: 23.491844895394937, lng: 85.46869079584923 },\n  { lat: 23.483704922251732, lng: 85.46480023672797 },\n  { lat: 23.47969050391436, lng: 85.46771815606891 },\n  { lat: 23.479021422311977, lng: 85.46929869571193 },\n];\n\n// Coordinates for Casa Blanca in Ormanjhi\nconst casaBlancaCoords = { lat: 23.442592425229485, lng: 85.4608527 };\n\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\", // Replace with your Google Maps API key\n  });\n\n  const mapRef = useRef(null);  // Using useRef instead of state to store map instance\n\n  // Save the map instance when loaded\n  const onLoad = useCallback((mapInstance) => {\n    console.log(\"Map loaded:\", mapInstance);\n    mapRef.current = mapInstance;  // Store map instance in ref\n  }, []);\n\n  // Zoom in and fit the polygon's bounds when clicked\n  const handlePolygonClick = useCallback((polygonCoords) => {\n    const map = mapRef.current;\n    if (!map) {\n      console.log(\"Map instance not available.\");\n      return;\n    }\n\n    console.log(\"Polygon clicked, zooming in...\");\n    \n    const bounds = new window.google.maps.LatLngBounds();\n    polygonCoords.forEach(coord => bounds.extend(coord));\n\n    map.fitBounds(bounds);  // Fit the bounds of the polygon\n\n    // After fitting bounds, ensure zoom is in and set it to max zoom level (for example, 12)\n    const newZoom = Math.min(map.getZoom(), 18); // Max zoom level of 12\n    map.setZoom(newZoom);  // Set the zoom level after fitting the bounds\n  }, []);\n\n  return isLoaded ? (\n    <div style={{ position: 'relative' }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={zoomLevel}\n        onLoad={onLoad}\n      >\n        {/* Jharkhand Polygon */}\n        <PolygonF\n          paths={jharkhandCoords}\n          options={{\n            fillColor: '#00FF00',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"Jharkhand polygon clicked\");\n            handlePolygonClick(jharkhandCoords);  // Zoom into Jharkhand when clicked\n          }}\n        />\n\n        {/* Ranchi Polygon */}\n        <PolygonF\n          paths={ranchiCoords}\n          options={{\n            fillColor: '#FF5733',\n            strokeColor: '#000000',\n            fillOpacity: 0.5,\n          }}\n          onClick={() => {\n            console.log(\"Ranchi polygon clicked\");\n            handlePolygonClick(ranchiCoords);  // Zoom into Ranchi when clicked\n          }}\n        />\n\n        {/* Casa Blanca Marker */}\n        <MarkerF\n          position={casaBlancaCoords}\n          title=\"Casa Blanca Ormanjhi\"\n        />\n      </GoogleMap>\n    </div>\n  ) : <></>;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}