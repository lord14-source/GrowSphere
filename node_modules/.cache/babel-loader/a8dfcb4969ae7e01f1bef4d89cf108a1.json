{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, InfoWindow, LoadScript, Marker, Polygon } from '@react-google-maps/api';\nimport React, { useState } from 'react';\nconst MapComponent = () => {\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n  const defaultCenter = {\n    lat: 23.6102,\n    // Jharkhand's latitude\n    lng: 85.2799 // Jharkhand's longitude\n  };\n  const [selectedPolygon, setSelectedPolygon] = useState(null);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n\n  // Define polygons with their path (lat/lng coordinates) and colors\n  const polygons = [{\n    name: 'Area 1',\n    path: [{\n      lat: 23.6,\n      lng: 85.3\n    }, {\n      lat: 23.61,\n      lng: 85.32\n    }, {\n      lat: 23.62,\n      lng: 85.31\n    }, {\n      lat: 23.6,\n      lng: 85.3\n    }],\n    color: '#FF0000' // red\n  }, {\n    name: 'Area 2',\n    path: [{\n      lat: 23.63,\n      lng: 85.33\n    }, {\n      lat: 23.64,\n      lng: 85.35\n    }, {\n      lat: 23.65,\n      lng: 85.34\n    }, {\n      lat: 23.63,\n      lng: 85.33\n    }],\n    color: '#00FF00' // green\n  }\n  // Add other polygons similarly\n  ];\n\n  // Define markers for the points of interest\n  const markers = [{\n    name: 'Facility 1',\n    position: {\n      lat: 23.605,\n      lng: 85.295\n    },\n    icon: 'C:/Users/hp/Desktop/Python/my-app/public/logo512.png'\n  }, {\n    name: 'Facility 2',\n    position: {\n      lat: 23.615,\n      lng: 85.310\n    },\n    icon: 'C:/Users/hp/Desktop/Python/my-app/public/logo512.png'\n  }];\n  return /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapStyles,\n    zoom: 12,\n    center: defaultCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, polygons.map((polygon, index) => /*#__PURE__*/React.createElement(Polygon, {\n    key: index,\n    paths: polygon.path,\n    options: {\n      fillColor: polygon.color,\n      fillOpacity: 0.4,\n      strokeColor: polygon.color,\n      strokeOpacity: 0.8,\n      strokeWeight: 2\n    },\n    onClick: () => setSelectedPolygon(polygon),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), markers.map((marker, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: index,\n    position: marker.position,\n    icon: marker.icon,\n    onClick: () => setSelectedMarker(marker),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), selectedPolygon && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: selectedPolygon.path[0] // InfoWindow on first point of the polygon\n    ,\n    onCloseClick: () => setSelectedPolygon(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, selectedPolygon.name))), selectedMarker && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: selectedMarker.position,\n    onCloseClick: () => setSelectedMarker(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, selectedMarker.name)))));\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","InfoWindow","LoadScript","Marker","Polygon","React","useState","MapComponent","mapStyles","height","width","defaultCenter","lat","lng","selectedPolygon","setSelectedPolygon","selectedMarker","setSelectedMarker","polygons","name","path","color","markers","position","icon","createElement","googleMapsApiKey","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","center","map","polygon","index","key","paths","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","onClick","marker","onCloseClick"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, InfoWindow, LoadScript, Marker, Polygon } from '@react-google-maps/api';\nimport React, { useState } from 'react';\n\nconst MapComponent = () => {\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\"\n  };\n\n  const defaultCenter = {\n    lat: 23.6102, // Jharkhand's latitude\n    lng: 85.2799  // Jharkhand's longitude\n  };\n\n  const [selectedPolygon, setSelectedPolygon] = useState(null);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n\n  // Define polygons with their path (lat/lng coordinates) and colors\n  const polygons = [\n    {\n      name: 'Area 1',\n      path: [\n        { lat: 23.6, lng: 85.3 }, { lat: 23.61, lng: 85.32 }, { lat: 23.62, lng: 85.31 }, { lat: 23.6, lng: 85.3 }\n      ],\n      color: '#FF0000' // red\n    },\n    {\n      name: 'Area 2',\n      path: [\n        { lat: 23.63, lng: 85.33 }, { lat: 23.64, lng: 85.35 }, { lat: 23.65, lng: 85.34 }, { lat: 23.63, lng: 85.33 }\n      ],\n      color: '#00FF00' // green\n    },\n    // Add other polygons similarly\n  ];\n\n  // Define markers for the points of interest\n  const markers = [\n    {\n      name: 'Facility 1',\n      position: { lat: 23.605, lng: 85.295 },\n      icon: 'C:/Users/hp/Desktop/Python/my-app/public/logo512.png'\n    },\n    {\n      name: 'Facility 2',\n      position: { lat: 23.615, lng: 85.310 },\n      icon: 'C:/Users/hp/Desktop/Python/my-app/public/logo512.png'\n    }\n  ];\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\">\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n        zoom={12}\n        center={defaultCenter}\n      >\n        {/* Display polygons */}\n        {polygons.map((polygon, index) => (\n          <Polygon\n            key={index}\n            paths={polygon.path}\n            options={{\n              fillColor: polygon.color,\n              fillOpacity: 0.4,\n              strokeColor: polygon.color,\n              strokeOpacity: 0.8,\n              strokeWeight: 2,\n            }}\n            onClick={() => setSelectedPolygon(polygon)}\n          />\n        ))}\n\n        {/* Display markers */}\n        {markers.map((marker, index) => (\n          <Marker\n            key={index}\n            position={marker.position}\n            icon={marker.icon}\n            onClick={() => setSelectedMarker(marker)}\n          />\n        ))}\n\n        {/* Display info window for selected polygon */}\n        {selectedPolygon && (\n          <InfoWindow\n            position={selectedPolygon.path[0]} // InfoWindow on first point of the polygon\n            onCloseClick={() => setSelectedPolygon(null)}\n          >\n            <div>\n              <h4>{selectedPolygon.name}</h4>\n            </div>\n          </InfoWindow>\n        )}\n\n        {/* Display info window for selected marker */}\n        {selectedMarker && (\n          <InfoWindow\n            position={selectedMarker.position}\n            onCloseClick={() => setSelectedMarker(null)}\n          >\n            <div>\n              <h4>{selectedMarker.name}</h4>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}