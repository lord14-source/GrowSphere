{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\FarmersDashboard.js\";\nimport axios from 'axios'; // Import axios\nimport React, { useState } from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport './FarmersDashboard.css';\nimport indianStates from './data/statesAndDistricts'; // Assuming this contains the states and their districts\n\nconst FarmersDashboard = () => {\n  var _indianStates$find;\n  // State for selected state, district, and chart data\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [data, setData] = useState([]); // State for chart data\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // Fetch farmer count data based on selected state and district\n  const fetchFarmerCountData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:8080/growSphere/farmer`, {\n        params: {\n          state: selectedState,\n          district: selectedDistrict\n        }\n      });\n      setData(response.data); // Set the fetched data to state\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching farmer count data:', error);\n      setLoading(false);\n    }\n  };\n\n  // Handle state selection change\n  const handleStateChange = e => {\n    setSelectedState(e.target.value);\n    setSelectedDistrict(''); // Reset district when state changes\n    setData([]); // Reset data\n  };\n\n  // Handle district selection change\n  const handleDistrictChange = e => {\n    setSelectedDistrict(e.target.value);\n    fetchFarmerCountData(); // Fetch data when district changes\n  };\n\n  // Find districts based on selected state\n  const districts = ((_indianStates$find = indianStates.find(state => state.name === selectedState)) === null || _indianStates$find === void 0 ? void 0 : _indianStates$find.districts) || [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Farmers Under Jurisdiction\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedState,\n    onChange: handleStateChange,\n    className: \"state-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Select State\"), indianStates.map(state => /*#__PURE__*/React.createElement(\"option\", {\n    key: state.name,\n    value: state.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, state.name))), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedDistrict,\n    onChange: handleDistrictChange,\n    className: \"district-dropdown\",\n    disabled: !selectedState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Select District\"), districts.map(district => /*#__PURE__*/React.createElement(\"option\", {\n    key: district,\n    value: district,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, district))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"FPO id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Crop id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Farmer id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"search-button\",\n    onClick: fetchFarmerCountData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"chart-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Farmer Count\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Loading data...\") // Loading indicator\n  : /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: data,\n    margin: {\n      top: 20,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"farmerCount\",\n    fill: \"#8B4513\",\n    barSize: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  })))));\n};\nexport default FarmersDashboard;","map":{"version":3,"names":["axios","React","useState","Bar","BarChart","CartesianGrid","Legend","ResponsiveContainer","Tooltip","XAxis","YAxis","indianStates","FarmersDashboard","_indianStates$find","selectedState","setSelectedState","selectedDistrict","setSelectedDistrict","data","setData","loading","setLoading","fetchFarmerCountData","response","get","params","state","district","error","console","handleStateChange","e","target","value","handleDistrictChange","districts","find","name","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","key","disabled","type","placeholder","onClick","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","barSize"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/FarmersDashboard.js"],"sourcesContent":["import axios from 'axios'; // Import axios\nimport React, { useState } from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport './FarmersDashboard.css';\nimport indianStates from './data/statesAndDistricts'; // Assuming this contains the states and their districts\n\nconst FarmersDashboard = () => {\n  // State for selected state, district, and chart data\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [data, setData] = useState([]); // State for chart data\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // Fetch farmer count data based on selected state and district\n  const fetchFarmerCountData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:8080/growSphere/farmer`, {\n        params: {\n          state: selectedState,\n          district: selectedDistrict,\n        },\n      });\n      setData(response.data); // Set the fetched data to state\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching farmer count data:', error);\n      setLoading(false);\n    }\n  };\n\n  // Handle state selection change\n  const handleStateChange = (e) => {\n    setSelectedState(e.target.value);\n    setSelectedDistrict(''); // Reset district when state changes\n    setData([]); // Reset data\n  };\n\n  // Handle district selection change\n  const handleDistrictChange = (e) => {\n    setSelectedDistrict(e.target.value);\n    fetchFarmerCountData(); // Fetch data when district changes\n  };\n\n  // Find districts based on selected state\n  const districts = indianStates.find(state => state.name === selectedState)?.districts || [];\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Farmers Under Jurisdiction</h1>\n      <div className=\"filters\">\n        <select value={selectedState} onChange={handleStateChange} className=\"state-dropdown\">\n          <option value=\"\">Select State</option>\n          {indianStates.map((state) => (\n            <option key={state.name} value={state.name}>\n              {state.name}\n            </option>\n          ))}\n        </select>\n\n        <select value={selectedDistrict} onChange={handleDistrictChange} className=\"district-dropdown\" disabled={!selectedState}>\n          <option value=\"\">Select District</option>\n          {districts.map((district) => (\n            <option key={district} value={district}>\n              {district}\n            </option>\n          ))}\n        </select>\n\n        <input type=\"text\" placeholder=\"FPO id\" />\n        <input type=\"text\" placeholder=\"Crop id\" />\n        <input type=\"text\" placeholder=\"Farmer id\" />\n        <button className=\"search-button\" onClick={fetchFarmerCountData}>Search</button>\n      </div>\n\n      <h2 className=\"chart-title\">Farmer Count</h2>\n      <div className=\"chart-container\">\n        {loading ? (\n          <p>Loading data...</p> // Loading indicator\n        ) : (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"farmerCount\" fill=\"#8B4513\" barSize={40} />\n            </BarChart>\n          </ResponsiveContainer>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FarmersDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}