{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\App.js\";\nimport { Autocomplete, GoogleMap, InfoWindow, LoadScript, Marker } from \"@react-google-maps/api\";\nimport React, { useRef, useState } from 'react';\nfunction App() {\n  const [latitude, setLatitude] = useState(-34.397);\n  const [longitude, setLongitude] = useState(150.644);\n  const [map, setMap] = useState(null);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [placeName, setPlaceName] = useState('');\n\n  // Ref to the input field\n  const autocompleteRef = useRef(null);\n  const mapContainerStyle = {\n    height: \"400px\",\n    width: \"800px\"\n  };\n\n  // Handle place search and update map\n  const onPlaceChanged = () => {\n    if (autocomplete !== null) {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        setLatitude(place.geometry.location.lat());\n        setLongitude(place.geometry.location.lng());\n        map.panTo({\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        });\n      }\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyD0KaEX-bXcnOS7XFfLKnVyiet_Kfi-8xM\",\n    libraries: [\"places\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onLoad: autoC => setAutocomplete(autoC),\n    onPlaceChanged: onPlaceChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for a place\",\n    style: {\n      width: \"300px\",\n      height: \"40px\",\n      fontSize: \"16px\"\n    },\n    ref: autocompleteRef,\n    value: placeName,\n    onChange: e => setPlaceName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    center: {\n      lat: latitude,\n      lng: longitude\n    },\n    zoom: 14,\n    onLoad: mapInstance => setMap(mapInstance),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat: latitude,\n      lng: longitude\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: latitude,\n      lng: longitude\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, placeName)))));\n}\nexport default App;","map":{"version":3,"names":["Autocomplete","GoogleMap","InfoWindow","LoadScript","Marker","React","useRef","useState","App","latitude","setLatitude","longitude","setLongitude","map","setMap","autocomplete","setAutocomplete","placeName","setPlaceName","autocompleteRef","mapContainerStyle","height","width","onPlaceChanged","place","getPlace","geometry","location","lat","lng","panTo","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","libraries","onLoad","autoC","type","placeholder","style","fontSize","ref","value","onChange","e","target","center","zoom","mapInstance","position"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/App.js"],"sourcesContent":["import { Autocomplete, GoogleMap, InfoWindow, LoadScript, Marker } from \"@react-google-maps/api\";\nimport React, { useRef, useState } from 'react';\n\nfunction App() {\n  const [latitude, setLatitude] = useState(-34.397);\n  const [longitude, setLongitude] = useState(150.644);\n  const [map, setMap] = useState(null);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [placeName, setPlaceName] = useState('');\n\n  // Ref to the input field\n  const autocompleteRef = useRef(null);\n\n  const mapContainerStyle = {\n    height: \"400px\",\n    width: \"800px\"\n  };\n\n  // Handle place search and update map\n  const onPlaceChanged = () => {\n    if (autocomplete !== null) {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        setLatitude(place.geometry.location.lat());\n        setLongitude(place.geometry.location.lng());\n        map.panTo({ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() });\n      }\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  };\n\n  return (\n    <div>\n      <LoadScript googleMapsApiKey=\"AIzaSyD0KaEX-bXcnOS7XFfLKnVyiet_Kfi-8xM\" libraries={[\"places\"]}>\n        <Autocomplete\n          onLoad={(autoC) => setAutocomplete(autoC)}\n          onPlaceChanged={onPlaceChanged}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Search for a place\"\n            style={{ width: \"300px\", height: \"40px\", fontSize: \"16px\" }}\n            ref={autocompleteRef}\n            value={placeName}\n            onChange={(e) => setPlaceName(e.target.value)}\n          />\n        </Autocomplete>\n        \n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          center={{ lat: latitude, lng: longitude }}\n          zoom={14}\n          onLoad={(mapInstance) => setMap(mapInstance)}\n        >\n          <Marker position={{ lat: latitude, lng: longitude }} />\n          <InfoWindow position={{ lat: latitude, lng: longitude }}>\n            <div>{placeName}</div>\n          </InfoWindow>\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}