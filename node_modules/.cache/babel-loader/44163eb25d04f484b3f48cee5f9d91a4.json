{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, InfoWindow, LoadScript, Marker } from \"@react-google-maps/api\";\nimport React, { useState } from \"react\";\nconst MapComponent = () => {\n  const [selectedMarker, setSelectedMarker] = useState(null);\n\n  // Sample marker data with coordinates, title, description, and image URL\n  const markers = [{\n    id: 1,\n    lat: 25.748695,\n    lng: -80.190,\n    title: \"Farm 1\",\n    description: \"This is Farm 1. Yield forecast is 65%.\",\n    imageUrl: \"https://via.placeholder.com/100\",\n    yieldForecast: 65\n  }, {\n    id: 2,\n    lat: 18.466,\n    lng: -66.118,\n    title: \"Farm 2\",\n    description: \"This is Farm 2. Yield forecast is 85%.\",\n    imageUrl: \"https://via.placeholder.com/100\",\n    yieldForecast: 85\n  }, {\n    id: 3,\n    lat: 32.321,\n    lng: -64.757,\n    title: \"Farm 3\",\n    description: \"This is Farm 3. Yield forecast is 40%.\",\n    imageUrl: \"https://via.placeholder.com/100\",\n    yieldForecast: 40\n  }];\n\n  // Function to determine marker color based on yield forecast\n  const getMarkerIcon = yieldForecast => {\n    if (yieldForecast < 50) {\n      return \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"; // Red marker for low yield\n    } else if (yieldForecast >= 50 && yieldForecast < 75) {\n      return \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"; // Yellow marker for medium yield\n    } else {\n      return \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"; // Green marker for high yield\n    }\n  };\n  return /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyD0KaEX-bXcnOS7XFfLKnVyiet_Kfi-8xM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: {\n      height: \"400px\",\n      width: \"100%\"\n    },\n    center: {\n      lat: 25.774,\n      lng: -80.190\n    },\n    zoom: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.id,\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: getMarkerIcon(marker.yieldForecast),\n    onClick: () => setSelectedMarker(marker),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), selectedMarker && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selectedMarker.lat,\n      lng: selectedMarker.lng\n    },\n    onCloseClick: () => setSelectedMarker(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"10px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: \"#000080\",\n      fontSize: \"18px\",\n      marginBottom: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, selectedMarker.title), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: \"14px\",\n      color: \"#333\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, selectedMarker.description), /*#__PURE__*/React.createElement(\"img\", {\n    src: selectedMarker.imageUrl,\n    alt: selectedMarker.title,\n    style: {\n      width: \"100px\",\n      height: \"auto\",\n      borderRadius: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginTop: \"10px\",\n      backgroundColor: \"#4CAF50\",\n      color: \"white\",\n      padding: \"5px 10px\",\n      border: \"none\",\n      borderRadius: \"5px\",\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Learn More\")))));\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","InfoWindow","LoadScript","Marker","React","useState","MapComponent","selectedMarker","setSelectedMarker","markers","id","lat","lng","title","description","imageUrl","yieldForecast","getMarkerIcon","createElement","googleMapsApiKey","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","height","width","center","zoom","map","marker","key","position","icon","onClick","onCloseClick","style","padding","textAlign","color","fontSize","marginBottom","src","alt","borderRadius","marginTop","backgroundColor","border","cursor"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, InfoWindow, LoadScript, Marker } from \"@react-google-maps/api\";\nimport React, { useState } from \"react\";\n\nconst MapComponent = () => {\n  const [selectedMarker, setSelectedMarker] = useState(null);\n\n  // Sample marker data with coordinates, title, description, and image URL\n  const markers = [\n    {\n      id: 1,\n      lat: 25.748695,\n      lng: -80.190,\n      title: \"Farm 1\",\n      description: \"This is Farm 1. Yield forecast is 65%.\",\n      imageUrl: \"https://via.placeholder.com/100\",\n      yieldForecast: 65,\n    },\n    {\n      id: 2,\n      lat: 18.466,\n      lng: -66.118,\n      title: \"Farm 2\",\n      description: \"This is Farm 2. Yield forecast is 85%.\",\n      imageUrl: \"https://via.placeholder.com/100\",\n      yieldForecast: 85,\n    },\n    {\n      id: 3,\n      lat: 32.321,\n      lng: -64.757,\n      title: \"Farm 3\",\n      description: \"This is Farm 3. Yield forecast is 40%.\",\n      imageUrl: \"https://via.placeholder.com/100\",\n      yieldForecast: 40,\n    },\n  ];\n\n  // Function to determine marker color based on yield forecast\n  const getMarkerIcon = (yieldForecast) => {\n    if (yieldForecast < 50) {\n      return \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"; // Red marker for low yield\n    } else if (yieldForecast >= 50 && yieldForecast < 75) {\n      return \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"; // Yellow marker for medium yield\n    } else {\n      return \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"; // Green marker for high yield\n    }\n  };\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyD0KaEX-bXcnOS7XFfLKnVyiet_Kfi-8xM\">\n      <GoogleMap\n        mapContainerStyle={{ height: \"400px\", width: \"100%\" }}\n        center={{ lat: 25.774, lng: -80.190 }}\n        zoom={5}\n      >\n        {markers.map((marker) => (\n          <Marker\n            key={marker.id}\n            position={{ lat: marker.lat, lng: marker.lng }}\n            icon={getMarkerIcon(marker.yieldForecast)}\n            onClick={() => setSelectedMarker(marker)}\n          />\n        ))}\n\n        {selectedMarker && (\n          <InfoWindow\n            position={{ lat: selectedMarker.lat, lng: selectedMarker.lng }}\n            onCloseClick={() => setSelectedMarker(null)}\n          >\n            <div style={{ padding: \"10px\", textAlign: \"center\" }}>\n              <h4 style={{ color: \"#000080\", fontSize: \"18px\", marginBottom: \"8px\" }}>\n                {selectedMarker.title}\n              </h4>\n              <p style={{ fontSize: \"14px\", color: \"#333\" }}>\n                {selectedMarker.description}\n              </p>\n              <img\n                src={selectedMarker.imageUrl}\n                alt={selectedMarker.title}\n                style={{ width: \"100px\", height: \"auto\", borderRadius: \"8px\" }}\n              />\n              <button\n                style={{\n                  marginTop: \"10px\",\n                  backgroundColor: \"#4CAF50\",\n                  color: \"white\",\n                  padding: \"5px 10px\",\n                  border: \"none\",\n                  borderRadius: \"5px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                Learn More\n              </button>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}