{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, InfoWindowF, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\n// Coordinates for Casa Blanca Estate, Rukka, Ranchi, Jharkhand\nconst casaBlanca = {\n  lat: 23.4556,\n  lng: 85.4539\n};\n\n// Define multiple polygons with sets of coordinates\nconst polygons = [{\n  id: 1,\n  paths: [{\n    lat: 23.3917,\n    lng: 85.2799\n  }, {\n    lat: 23.3917,\n    lng: 85.3350\n  }, {\n    lat: 23.3401,\n    lng: 85.3350\n  }, {\n    lat: 23.3401,\n    lng: 85.2799\n  }],\n  fillColor: 'rgba(0, 255, 0, 0.2)',\n  // Light green\n  strokeColor: 'green'\n}, {\n  id: 2,\n  paths: [{\n    lat: 23.3680,\n    lng: 85.2900\n  }, {\n    lat: 23.3680,\n    lng: 85.3100\n  }, {\n    lat: 23.3250,\n    lng: 85.3100\n  }, {\n    lat: 23.3250,\n    lng: 85.2900\n  }],\n  fillColor: 'rgba(255, 0, 0, 0.2)',\n  // Light red\n  strokeColor: 'red'\n}, {\n  id: 3,\n  paths: [{\n    lat: 23.3600,\n    lng: 85.3200\n  }, {\n    lat: 23.3600,\n    lng: 85.3350\n  }, {\n    lat: 23.3450,\n    lng: 85.3350\n  }, {\n    lat: 23.3450,\n    lng: 85.3200\n  }],\n  fillColor: 'rgba(0, 0, 255, 0.2)',\n  // Light blue\n  strokeColor: 'blue'\n}];\nfunction MapComponent() {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n  const [map, setMap] = React.useState(null);\n  const [selectedMarker, setSelectedMarker] = React.useState(false); // State to manage the InfoWindow\n\n  const onLoad = React.useCallback(map => {\n    map.setZoom(12);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(map => {\n    setMap(null);\n  }, []);\n  const handleMarkerClick = () => {\n    setSelectedMarker(true);\n  };\n  const handleInfoWindowClose = () => {\n    setSelectedMarker(false);\n  };\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: casaBlanca,\n    zoom: 12,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MarkerF, {\n    position: casaBlanca,\n    onClick: handleMarkerClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), polygons.map(polygon => /*#__PURE__*/React.createElement(PolygonF, {\n    key: polygon.id,\n    paths: polygon.paths,\n    options: {\n      fillColor: polygon.fillColor,\n      strokeColor: polygon.strokeColor,\n      strokeOpacity: 1,\n      strokeWeight: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), selectedMarker && /*#__PURE__*/React.createElement(InfoWindowF, {\n    position: casaBlanca,\n    onCloseClick: handleInfoWindowClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Casa Blanca Estate\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Description or additional information about Casa Blanca Estate.\"))), /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","InfoWindowF","MarkerF","PolygonF","useJsApiLoader","React","containerStyle","width","height","casaBlanca","lat","lng","polygons","id","paths","fillColor","strokeColor","MapComponent","isLoaded","googleMapsApiKey","map","setMap","useState","selectedMarker","setSelectedMarker","onLoad","useCallback","setZoom","onUnmount","handleMarkerClick","handleInfoWindowClose","createElement","mapContainerStyle","center","zoom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","onClick","polygon","key","options","strokeOpacity","strokeWeight","onCloseClick","Fragment"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, InfoWindowF, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\n// Coordinates for Casa Blanca Estate, Rukka, Ranchi, Jharkhand\nconst casaBlanca = {\n  lat: 23.4556,\n  lng: 85.4539\n};\n\n// Define multiple polygons with sets of coordinates\nconst polygons = [\n  {\n    id: 1,\n    paths: [\n      { lat: 23.3917, lng: 85.2799 },\n      { lat: 23.3917, lng: 85.3350 },\n      { lat: 23.3401, lng: 85.3350 },\n      { lat: 23.3401, lng: 85.2799 }\n    ],\n    fillColor: 'rgba(0, 255, 0, 0.2)', // Light green\n    strokeColor: 'green'\n  },\n  {\n    id: 2,\n    paths: [\n      { lat: 23.3680, lng: 85.2900 },\n      { lat: 23.3680, lng: 85.3100 },\n      { lat: 23.3250, lng: 85.3100 },\n      { lat: 23.3250, lng: 85.2900 }\n    ],\n    fillColor: 'rgba(255, 0, 0, 0.2)', // Light red\n    strokeColor: 'red'\n  },\n  {\n    id: 3,\n    paths: [\n      { lat: 23.3600, lng: 85.3200 },\n      { lat: 23.3600, lng: 85.3350 },\n      { lat: 23.3450, lng: 85.3350 },\n      { lat: 23.3450, lng: 85.3200 }\n    ],\n    fillColor: 'rgba(0, 0, 255, 0.2)', // Light blue\n    strokeColor: 'blue'\n  }\n];\n\nfunction MapComponent() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n\n  const [map, setMap] = React.useState(null);\n  const [selectedMarker, setSelectedMarker] = React.useState(false); // State to manage the InfoWindow\n\n  const onLoad = React.useCallback((map) => {\n    map.setZoom(12);\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback((map) => {\n    setMap(null);\n  }, []);\n\n  const handleMarkerClick = () => {\n    setSelectedMarker(true);\n  };\n\n  const handleInfoWindowClose = () => {\n    setSelectedMarker(false);\n  };\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={casaBlanca}\n      zoom={12}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      {/* Marker at Casa Blanca Estate */}\n      <MarkerF\n        position={casaBlanca}\n        onClick={handleMarkerClick}\n      />\n\n      {/* Render multiple polygons */}\n      {polygons.map(polygon => (\n        <PolygonF\n          key={polygon.id}\n          paths={polygon.paths}\n          options={{\n            fillColor: polygon.fillColor,\n            strokeColor: polygon.strokeColor,\n            strokeOpacity: 1,\n            strokeWeight: 2,\n          }}\n        />\n      ))}\n\n      {/* InfoWindow for Casa Blanca Estate */}\n      {selectedMarker && (\n        <InfoWindowF\n          position={casaBlanca}\n          onCloseClick={handleInfoWindowClose}\n        >\n          <div>\n            <h4>Casa Blanca Estate</h4>\n            <p>Description or additional information about Casa Blanca Estate.</p>\n          </div>\n        </InfoWindowF>\n      )}\n\n      <></>\n    </GoogleMap>\n  ) : <></>;\n}\n\nexport default MapComponent;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,wBAAwB;AAClG,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,UAAU,GAAG;EACjBC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAG,CACf;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,CACL;IAAEJ,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC9B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC9B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC9B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,CAC/B;EACDI,SAAS,EAAE,sBAAsB;EAAE;EACnCC,WAAW,EAAE;AACf,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,CACL;IAAEJ,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC9B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC9B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC9B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,CAC/B;EACDI,SAAS,EAAE,sBAAsB;EAAE;EACnCC,WAAW,EAAE;AACf,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,CACL;IAAEJ,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC9B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC9B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAC9B;IAAED,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,CAC/B;EACDI,SAAS,EAAE,sBAAsB;EAAE;EACnCC,WAAW,EAAE;AACf,CAAC,CACF;AAED,SAASC,YAAYA,CAAA,EAAG;EACtB,MAAM;IAAEC;EAAS,CAAC,GAAGd,cAAc,CAAC;IAClCS,EAAE,EAAE,mBAAmB;IACvBM,gBAAgB,EAAE;EACpB,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnE,MAAMG,MAAM,GAAGpB,KAAK,CAACqB,WAAW,CAAEN,GAAG,IAAK;IACxCA,GAAG,CAACO,OAAO,CAAC,EAAE,CAAC;IACfN,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,SAAS,GAAGvB,KAAK,CAACqB,WAAW,CAAEN,GAAG,IAAK;IAC3CC,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC9BL,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMM,qBAAqB,GAAGA,CAAA,KAAM;IAClCN,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,OAAON,QAAQ,gBACbb,KAAA,CAAA0B,aAAA,CAAC/B,SAAS;IACRgC,iBAAiB,EAAE1B,cAAe;IAClC2B,MAAM,EAAExB,UAAW;IACnByB,IAAI,EAAE,EAAG;IACTT,MAAM,EAAEA,MAAO;IACfG,SAAS,EAAEA,SAAU;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAGrBnC,KAAA,CAAA0B,aAAA,CAAC7B,OAAO;IACNuC,QAAQ,EAAEhC,UAAW;IACrBiC,OAAO,EAAEb,iBAAkB;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5B,CAAC,EAGD5B,QAAQ,CAACQ,GAAG,CAACuB,OAAO,iBACnBtC,KAAA,CAAA0B,aAAA,CAAC5B,QAAQ;IACPyC,GAAG,EAAED,OAAO,CAAC9B,EAAG;IAChBC,KAAK,EAAE6B,OAAO,CAAC7B,KAAM;IACrB+B,OAAO,EAAE;MACP9B,SAAS,EAAE4B,OAAO,CAAC5B,SAAS;MAC5BC,WAAW,EAAE2B,OAAO,CAAC3B,WAAW;MAChC8B,aAAa,EAAE,CAAC;MAChBC,YAAY,EAAE;IAChB,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CACF,CAAC,EAGDjB,cAAc,iBACblB,KAAA,CAAA0B,aAAA,CAAC9B,WAAW;IACVwC,QAAQ,EAAEhC,UAAW;IACrBuC,YAAY,EAAElB,qBAAsB;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEpCnC,KAAA,CAAA0B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnC,KAAA,CAAA0B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,oBAAsB,CAAC,eAC3BnC,KAAA,CAAA0B,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iEAAkE,CAClE,CACM,CACd,eAEDnC,KAAA,CAAA0B,aAAA,CAAA1B,KAAA,CAAA4C,QAAA,MAAI,CACK,CAAC,gBACV5C,KAAA,CAAA0B,aAAA,CAAA1B,KAAA,CAAA4C,QAAA,MAAI,CAAC;AACX;AAEA,eAAehC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}