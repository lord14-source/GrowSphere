{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Python\\\\my-app\\\\src\\\\components\\\\MapComponent.js\";\nimport { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useState } from 'react';\nconst containerStyle = {\n  width: '100%',\n  height: '600px'\n};\n\n// Center point set to India level\nconst center = {\n  lat: 20.5937,\n  // Latitude of India\n  lng: 78.9629 // Longitude of India\n};\nconst zoomLevel = 5; // Adjusted zoom level for the India view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [{\n  lat: 24.4125,\n  lng: 83.4258\n}, {\n  lat: 22.5828,\n  lng: 84.0825\n}, {\n  lat: 22.1931,\n  lng: 85.0492\n}, {\n  lat: 22.3264,\n  lng: 86.4536\n}, {\n  lat: 22.6908,\n  lng: 86.5150\n}, {\n  lat: 23.3169,\n  lng: 85.8747\n}, {\n  lat: 23.6617,\n  lng: 86.6256\n}, {\n  lat: 24.5783,\n  lng: 87.8997\n}, {\n  lat: 25.1028,\n  lng: 87.7900\n}, {\n  lat: 25.1114,\n  lng: 87.2681\n}, {\n  lat: 24.8217,\n  lng: 85.7231\n}, {\n  lat: 24.5261,\n  lng: 83.4228\n} // Closing the polygon\n];\n\n// Coordinates for Ranchi\nconst ranchiCoords = [{\n  lat: 23.3697,\n  lng: 85.2203\n}, {\n  lat: 23.3181,\n  lng: 85.2467\n}, {\n  lat: 23.2417,\n  lng: 85.3036\n}, {\n  lat: 23.3111,\n  lng: 85.3928\n}, {\n  lat: 23.3886,\n  lng: 85.4356\n}, {\n  lat: 23.4058,\n  lng: 85.4153\n}, {\n  lat: 23.4394,\n  lng: 85.3589\n}, {\n  lat: 23.4481,\n  lng: 85.3019\n}, {\n  lat: 23.4058,\n  lng: 85.2614\n}, {\n  lat: 23.4281,\n  lng: 85.2169\n}];\n\n// Updated coordinates for polygons\n\nconst newPolygonCoords = [{\n  lat: 23.4908,\n  lng: 85.4683\n}, {\n  lat: 23.4836,\n  lng: 85.4647\n}, {\n  lat: 23.4794,\n  lng: 85.4678\n}, {\n  lat: 23.4769,\n  lng: 85.4725\n}, {\n  lat: 23.4758,\n  lng: 85.4803\n}, {\n  lat: 23.4800,\n  lng: 85.4850\n}, {\n  lat: 23.4819,\n  lng: 85.4872\n}, {\n  lat: 23.4911,\n  lng: 85.4889\n}, {\n  lat: 23.4900,\n  lng: 85.4753\n}, {\n  lat: 23.4917,\n  lng: 85.4686\n} // Closing the polygon\n];\nconst redPolygonCoords = [{\n  lat: 23.4525,\n  lng: 85.4569\n}, {\n  lat: 23.4453,\n  lng: 85.4525\n}, {\n  lat: 23.4382,\n  lng: 85.4620\n}, {\n  lat: 23.4284,\n  lng: 85.4708\n}, {\n  lat: 23.4289,\n  lng: 85.4739\n}, {\n  lat: 23.4372,\n  lng: 85.4738\n}, {\n  lat: 23.4460,\n  lng: 85.4800\n}, {\n  lat: 23.4500,\n  lng: 85.4713\n}, {\n  lat: 23.4515,\n  lng: 85.4703\n}, {\n  lat: 23.4512,\n  lng: 85.4621\n} // Closing the array properly\n];\nconst yellowPolygonCoords = [{\n  lat: 23.4420,\n  lng: 85.4608\n},\n// 23°26'31\"N, 85°27'39\"E\n{\n  lat: 23.4425,\n  lng: 85.4611\n},\n// 23°26'33\"N, 85°27'40\"E\n{\n  lat: 23.4425,\n  lng: 85.4606\n},\n// 23°26'33\"N, 85°27'38\"E\n{\n  lat: 23.4422,\n  lng: 85.4603\n} // Closing the polygon\n];\nconst newPolygonNearbyCoords = [{\n  lat: 23.4420,\n  lng: 85.4603\n},\n// 23°26'31\"N, 85°27'37\"E\n{\n  lat: 23.4417,\n  lng: 85.4606\n},\n// 23°26'30\"N, 85°27'38\"E\n{\n  lat: 23.4420,\n  lng: 85.4608\n},\n// 23°26'31\"N, 85°27'39\"E\n{\n  lat: 23.4422,\n  lng: 85.4603\n} // Closing the polygon\n];\nconst thirdPolygonCoords = [{\n  lat: 23.4411,\n  lng: 85.4608\n},\n// 23°26'28\"N, 85°27'39\"E\n{\n  lat: 23.4417,\n  lng: 85.4611\n},\n// 23°26'30\"N, 85°27'40\"E\n{\n  lat: 23.4420,\n  lng: 85.4608\n},\n// 23°26'31\"N, 85°27'39\"E\n{\n  lat: 23.4417,\n  lng: 85.4606\n} // Closing the polygon (touching)\n];\nconst additionalPolygon1Coords = [\n// { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N, 85°27'37\"E\n// { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n// { lat: 23.4431, lng: 85.4603 },  // 23°26'35\"N, 85°27'37\"E\n// { lat: 23.4428, lng: 85.4600 },// Closing the polygon\n{\n  lat: 23.4425,\n  lng: 85.4609\n},\n// 23°26'33\"N, 85°27'40\"E\n{\n  lat: 23.4425,\n  lng: 85.4611\n},\n// 23°26'33\"N, 85°27'41\"E\n{\n  lat: 23.4428,\n  lng: 85.4608\n},\n// 23°26'34\"N, 85°27'39\"E\n{\n  lat: 23.4428,\n  lng: 85.4606\n}];\nconst polygonCoords1 = [{\n  lat: 23.4417,\n  lng: 85.4611\n},\n// 23°26'30\"N, 85°27'40\"E\n{\n  lat: 23.4425,\n  lng: 85.4617\n},\n// 23°26'31\"N, 85°27'41\"E\n{\n  lat: 23.4433,\n  lng: 85.4611\n},\n// 23°26'32\"N, 85°27'40\"E\n{\n  lat: 23.4417,\n  lng: 85.4606\n} // 23°26'31\"N, 85°27'37\"E\n];\nconst nextRightBorderPolygonCoords = [{\n  lat: 23.4417,\n  lng: 85.4611\n},\n// 23°26'30\"N, 85°27'40\"E\n{\n  lat: 23.4422,\n  lng: 85.4614\n},\n// 23°26'32\"N, 85°27'41\"E\n{\n  lat: 23.4425,\n  lng: 85.4611\n},\n// 23°26'33\"N, 85°27'40\"E\n{\n  lat: 23.4420,\n  lng: 85.4608\n} // Closing the polygon\n];\n\n// Coordinates for Casa Blanca Estate in Rukka, Jharkhand\nconst casaBlancaCoords = {\n  lat: 23.443576748453125,\n  lng: 85.46080978467886\n};\n\n// Coordinates for Ormanji\nconst ormanjiCoords = {\n  lat: 23.3680,\n  lng: 85.3200\n};\nconst MapComponent = () => {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\"\n  });\n  const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true);\n  const [showRanchiPolygon, setShowRanchiPolygon] = useState(true);\n  const [showNewPolygon, setShowNewPolygon] = useState(true);\n  const [showRedPolygon, setShowRedPolygon] = useState(true);\n  const [showYellowPolygon, setShowYellowPolygon] = useState(true);\n  const [showNewPolygonNearbyCoords, setShowNewPolygonNearbyCoords] = useState(true);\n  const [showThirdPolygonCoords, setShowThirdPolygonCoords] = useState(true);\n  const [showCasaBlanca, setShowCasaBlanca] = useState(true);\n  const [shownextRightBorderPolygonCoords, setShownextRightBorderPolygonCoords] = useState(true);\n  const [showadditionalPolygon1Coords, setShowadditionalPolygon1Coords] = useState(true);\n  const [showPolygon, setShowPolygon] = useState(true);\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: zoomLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, showJharkhandPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: jharkhandCoords,\n    options: {\n      fillColor: '#00FF00',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), showRanchiPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: ranchiCoords,\n    options: {\n      fillColor: '#FF0000',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), showNewPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonCoords,\n    options: {\n      fillColor: '#FFA500',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), showRedPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: redPolygonCoords,\n    options: {\n      fillColor: '#FF0000',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), showYellowPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: yellowPolygonCoords,\n    options: {\n      fillColor: '#FFFF00',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), showNewPolygonNearbyCoords && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: newPolygonNearbyCoords,\n    options: {\n      fillColor: '#00FFFF',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), showThirdPolygonCoords && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: thirdPolygonCoords,\n    options: {\n      fillColor: '#FF69B4',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }), shownextRightBorderPolygonCoords && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: nextRightBorderPolygonCoords,\n    options: {\n      fillColor: '#FF69B4',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }), showadditionalPolygon1Coords && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: additionalPolygon1Coords,\n    options: {\n      fillColor: '#FF69B4',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), showPolygon && /*#__PURE__*/React.createElement(PolygonF, {\n    paths: polygonCoords1,\n    options: {\n      fillColor: '#FF0000',\n      strokeColor: '#000000',\n      strokeWeight: 2,\n      fillOpacity: 0.6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }), showCasaBlanca && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MarkerF, {\n    position: casaBlancaCoords,\n    label: \"Casa Blanca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PolygonF, {\n    paths: [casaBlancaCoords],\n    options: {\n      fillColor: '#FF0000',\n      strokeColor: '#000000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport default MapComponent;","map":{"version":3,"names":["GoogleMap","MarkerF","PolygonF","useJsApiLoader","React","useState","containerStyle","width","height","center","lat","lng","zoomLevel","jharkhandCoords","ranchiCoords","newPolygonCoords","redPolygonCoords","yellowPolygonCoords","newPolygonNearbyCoords","thirdPolygonCoords","additionalPolygon1Coords","polygonCoords1","nextRightBorderPolygonCoords","casaBlancaCoords","ormanjiCoords","MapComponent","isLoaded","id","googleMapsApiKey","showJharkhandPolygon","setShowJharkhandPolygon","showRanchiPolygon","setShowRanchiPolygon","showNewPolygon","setShowNewPolygon","showRedPolygon","setShowRedPolygon","showYellowPolygon","setShowYellowPolygon","showNewPolygonNearbyCoords","setShowNewPolygonNearbyCoords","showThirdPolygonCoords","setShowThirdPolygonCoords","showCasaBlanca","setShowCasaBlanca","shownextRightBorderPolygonCoords","setShownextRightBorderPolygonCoords","showadditionalPolygon1Coords","setShowadditionalPolygon1Coords","showPolygon","setShowPolygon","createElement","mapContainerStyle","zoom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","paths","options","fillColor","strokeColor","strokeWeight","fillOpacity","Fragment","position","label"],"sources":["C:/Users/hp/Desktop/Python/my-app/src/components/MapComponent.js"],"sourcesContent":["import { GoogleMap, MarkerF, PolygonF, useJsApiLoader } from '@react-google-maps/api';\nimport React, { useState } from 'react';\n\nconst containerStyle = {\n  width: '100%',\n  height: '600px',\n};\n\n// Center point set to India level\nconst center = {\n  lat: 20.5937,  // Latitude of India\n  lng: 78.9629,  // Longitude of India\n};\n\nconst zoomLevel = 5;  // Adjusted zoom level for the India view\n\n// Coordinates for the Jharkhand polygon\nconst jharkhandCoords = [\n  { lat: 24.4125, lng: 83.4258 },\n  { lat: 22.5828, lng: 84.0825 },\n  { lat: 22.1931, lng: 85.0492 },\n  { lat: 22.3264, lng: 86.4536 },\n  { lat: 22.6908, lng: 86.5150 },\n  { lat: 23.3169, lng: 85.8747 },\n  { lat: 23.6617, lng: 86.6256 },\n  { lat: 24.5783, lng: 87.8997 },\n  { lat: 25.1028, lng: 87.7900 },\n  { lat: 25.1114, lng: 87.2681 },\n  { lat: 24.8217, lng: 85.7231 },\n  { lat: 24.5261, lng: 83.4228 }, // Closing the polygon\n];\n\n// Coordinates for Ranchi\nconst ranchiCoords = [\n  { lat: 23.3697, lng: 85.2203 },\n  { lat: 23.3181, lng: 85.2467 },\n  { lat: 23.2417, lng: 85.3036 },\n  { lat: 23.3111, lng: 85.3928 },\n  { lat: 23.3886, lng: 85.4356 },\n  { lat: 23.4058, lng: 85.4153 },\n  { lat: 23.4394, lng: 85.3589 },\n  { lat: 23.4481, lng: 85.3019 },\n  { lat: 23.4058, lng: 85.2614 },\n  { lat: 23.4281, lng: 85.2169 },\n];\n\n// Updated coordinates for polygons\n\nconst newPolygonCoords = [\n  { lat: 23.4908, lng: 85.4683 },\n  { lat: 23.4836, lng: 85.4647 },\n  { lat: 23.4794, lng: 85.4678 },\n  { lat: 23.4769, lng: 85.4725 },\n  { lat: 23.4758, lng: 85.4803 },\n  { lat: 23.4800, lng: 85.4850 },\n  { lat: 23.4819, lng: 85.4872 },\n  { lat: 23.4911, lng: 85.4889 },\n  { lat: 23.4900, lng: 85.4753 },\n  { lat: 23.4917, lng: 85.4686 }, // Closing the polygon\n];\n\nconst redPolygonCoords = [\n    { lat: 23.4525, lng: 85.4569 },\n    { lat: 23.4453, lng: 85.4525 },\n    { lat: 23.4382, lng: 85.4620 },\n    { lat: 23.4284, lng: 85.4708 },\n    { lat: 23.4289, lng: 85.4739 },\n    { lat: 23.4372, lng: 85.4738 },\n    { lat: 23.4460, lng: 85.4800 },\n    { lat: 23.4500, lng: 85.4713 },\n    { lat: 23.4515, lng: 85.4703 },\n    { lat: 23.4512, lng: 85.4621 } // Closing the array properly\n];\n\nconst yellowPolygonCoords = [\n    { lat: 23.4420, lng: 85.4608 },  // 23°26'31\"N, 85°27'39\"E\n    { lat: 23.4425, lng: 85.4611 },  // 23°26'33\"N, 85°27'40\"E\n    { lat: 23.4425, lng: 85.4606 },  // 23°26'33\"N, 85°27'38\"E\n    { lat: 23.4422, lng: 85.4603 }, // Closing the polygon\n];\n\nconst newPolygonNearbyCoords = [\n    { lat: 23.4420, lng: 85.4603 },  // 23°26'31\"N, 85°27'37\"E\n    { lat: 23.4417, lng: 85.4606 },  // 23°26'30\"N, 85°27'38\"E\n    { lat: 23.4420, lng: 85.4608 },  // 23°26'31\"N, 85°27'39\"E\n    { lat: 23.4422, lng: 85.4603 },  // Closing the polygon\n];\n\nconst thirdPolygonCoords = [\n    { lat: 23.4411, lng: 85.4608 },  // 23°26'28\"N, 85°27'39\"E\n    { lat: 23.4417, lng: 85.4611 },  // 23°26'30\"N, 85°27'40\"E\n    { lat: 23.4420, lng: 85.4608 },  // 23°26'31\"N, 85°27'39\"E\n    { lat: 23.4417, lng: 85.4606 },  // Closing the polygon (touching)\n];\n\nconst additionalPolygon1Coords = [\n    // { lat: 23.4425, lng: 85.4603 },  // 23°26'33\"N, 85°27'37\"E\n    // { lat: 23.4428, lng: 85.4606 },  // 23°26'34\"N, 85°27'38\"E\n    // { lat: 23.4431, lng: 85.4603 },  // 23°26'35\"N, 85°27'37\"E\n    // { lat: 23.4428, lng: 85.4600 },// Closing the polygon\n    { lat: 23.4425, lng: 85.4609 },  // 23°26'33\"N, 85°27'40\"E\n    { lat: 23.4425, lng: 85.4611 },  // 23°26'33\"N, 85°27'41\"E\n    { lat: 23.4428, lng: 85.4608 },  // 23°26'34\"N, 85°27'39\"E\n    { lat: 23.4428, lng: 85.4606 }, \n];\nconst polygonCoords1 = [\n    { lat: 23.4417, lng: 85.4611 },  // 23°26'30\"N, 85°27'40\"E\n  { lat: 23.4425, lng: 85.4617 },  // 23°26'31\"N, 85°27'41\"E\n  { lat: 23.4433, lng: 85.4611 },  // 23°26'32\"N, 85°27'40\"E\n  { lat: 23.4417, lng: 85.4606 },  // 23°26'31\"N, 85°27'37\"E\n  ];\n\nconst nextRightBorderPolygonCoords = [\n    { lat: 23.4417, lng: 85.4611 },  // 23°26'30\"N, 85°27'40\"E\n    { lat: 23.4422, lng: 85.4614 },  // 23°26'32\"N, 85°27'41\"E\n    { lat: 23.4425, lng: 85.4611 },  // 23°26'33\"N, 85°27'40\"E\n    { lat: 23.4420, lng: 85.4608 },// Closing the polygon\n];\n\n// Coordinates for Casa Blanca Estate in Rukka, Jharkhand\nconst casaBlancaCoords = { lat: 23.443576748453125, lng: 85.46080978467886 };\n\n// Coordinates for Ormanji\nconst ormanjiCoords = { lat: 23.3680, lng: 85.3200 };\n\nconst MapComponent = () => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyChN074R5gt4BfPTFox9UXnND0S8yyH6Dk\",\n  });\n\n  const [showJharkhandPolygon, setShowJharkhandPolygon] = useState(true);\n  const [showRanchiPolygon, setShowRanchiPolygon] = useState(true);\n  const [showNewPolygon, setShowNewPolygon] = useState(true);\n  const [showRedPolygon, setShowRedPolygon] = useState(true);\n  const [showYellowPolygon, setShowYellowPolygon] = useState(true); \n  const [showNewPolygonNearbyCoords, setShowNewPolygonNearbyCoords] = useState(true);\n  const [showThirdPolygonCoords, setShowThirdPolygonCoords] = useState(true);\n  const [showCasaBlanca, setShowCasaBlanca] = useState(true);\n  const [shownextRightBorderPolygonCoords, setShownextRightBorderPolygonCoords] = useState(true);\n  const [showadditionalPolygon1Coords, setShowadditionalPolygon1Coords] = useState(true);\n  const [showPolygon, setShowPolygon] = useState(true);\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={zoomLevel}\n    >\n      {showJharkhandPolygon && (\n        <PolygonF paths={jharkhandCoords} options={{ fillColor: '#00FF00', strokeColor: '#000000' }} />\n      )}\n\n      {showRanchiPolygon && (\n        <PolygonF paths={ranchiCoords} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n      )}\n\n      {showNewPolygon && (\n        <PolygonF paths={newPolygonCoords} options={{ fillColor: '#FFA500', strokeColor: '#000000' }} />\n      )}\n\n      {showRedPolygon && (\n        <PolygonF paths={redPolygonCoords} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n      )}\n\n      {showYellowPolygon && (\n        <PolygonF paths={yellowPolygonCoords} options={{ fillColor: '#FFFF00', strokeColor: '#000000' }} />\n      )}\n        \n      {showNewPolygonNearbyCoords && (\n        <PolygonF paths={newPolygonNearbyCoords} options={{ fillColor: '#00FFFF', strokeColor: '#000000' }} />\n      )}\n      \n      {showThirdPolygonCoords && (\n        <PolygonF paths={thirdPolygonCoords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n      )}\n        \n        {shownextRightBorderPolygonCoords && (\n        <PolygonF paths={nextRightBorderPolygonCoords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n      )}\n       {showadditionalPolygon1Coords && (\n        <PolygonF paths={additionalPolygon1Coords} options={{ fillColor: '#FF69B4', strokeColor: '#000000' }} />\n      )}\n      {showPolygon && (\n        <PolygonF\n          paths={polygonCoords1}\n          options={{ fillColor: '#FF0000', strokeColor: '#000000', strokeWeight: 2, fillOpacity: 0.6 }}\n        />\n      )}\n      {showCasaBlanca && (\n        <>\n          <MarkerF position={casaBlancaCoords} label=\"Casa Blanca\" />\n          <PolygonF paths={[casaBlancaCoords]} options={{ fillColor: '#FF0000', strokeColor: '#000000' }} />\n        </>\n      )}\n\n    </GoogleMap>\n  ) : <></>;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}